

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Dec 30 16:59:11 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    45                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    46  0000                     
    47                           ; Version 2.10
    48                           ; Generated 31/07/2019 GMT
    49                           ; 
    50                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC18F4520 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     
    82                           	psect	idataCOMRAM
    83  002C96                     __pidataCOMRAM:
    84                           	opt callstack 0
    85                           
    86                           ;initializer for _timer3_val
    87  002C96  B798               	dw	47000
    88  002C98  0000               	dw	0
    89                           
    90                           ;initializer for _line
    91  002C9A  FFFF               	dw	65535
    92                           
    93                           	psect	idataBIGRAM
    94  001DFE                     __pidataBIGRAM:
    95                           	opt callstack 0
    96                           
    97                           ;initializer for _tmr_arr
    98  001DFE  0001               	dw	1
    99  001E00  0001               	dw	1
   100  001E02  0001               	dw	1
   101  001E04  0002               	dw	2
   102  001E06  0001               	dw	1
   103  001E08  0002               	dw	2
   104  001E0A  0001               	dw	1
   105  001E0C  0001               	dw	1
   106  001E0E  0001               	dw	1
   107  001E10  0002               	dw	2
   108  001E12  0001               	dw	1
   109  001E14  0004               	dw	4
   110  001E16  0001               	dw	1
   111  001E18  0004               	dw	4
   112  001E1A  0001               	dw	1
   113  001E1C  0003               	dw	3
   114  001E1E  0001               	dw	1
   115  001E20  0003               	dw	3
   116  001E22  0001               	dw	1
   117  001E24  0003               	dw	3
   118  001E26  0001               	dw	1
   119  001E28  0003               	dw	3
   120  001E2A  0001               	dw	1
   121  001E2C  0002               	dw	2
   122  001E2E  0001               	dw	1
   123  001E30  0001               	dw	1
   124  001E32  0001               	dw	1
   125  001E34  0002               	dw	2
   126  001E36  0001               	dw	1
   127  001E38  0001               	dw	1
   128  001E3A  0001               	dw	1
   129  001E3C  0001               	dw	1
   130  001E3E  0001               	dw	1
   131  001E40  0002               	dw	2
   132  001E42  0001               	dw	1
   133  001E44  0003               	dw	3
   134  001E46  0001               	dw	1
   135  001E48  0001               	dw	1
   136  001E4A  0001               	dw	1
   137  001E4C  0002               	dw	2
   138  001E4E  0001               	dw	1
   139  001E50  0002               	dw	2
   140  001E52  0001               	dw	1
   141  001E54  0001               	dw	1
   142  001E56  0001               	dw	1
   143  001E58  0001               	dw	1
   144  001E5A  0001               	dw	1
   145  001E5C  0007               	dw	7
   146  001E5E  0001               	dw	1
   147  001E60  0001               	dw	1
   148  001E62  0001               	dw	1
   149  001E64  0001               	dw	1
   150  001E66  0001               	dw	1
   151  001E68  0001               	dw	1
   152  001E6A  0001               	dw	1
   153  001E6C  0003               	dw	3
   154  001E6E  0001               	dw	1
   155  001E70  0002               	dw	2
   156  001E72  0001               	dw	1
   157  001E74  0001               	dw	1
   158  001E76  0001               	dw	1
   159  001E78  0001               	dw	1
   160  001E7A  0001               	dw	1
   161  001E7C  0002               	dw	2
   162  001E7E  0001               	dw	1
   163  001E80  0001               	dw	1
   164  001E82  0001               	dw	1
   165  001E84  0001               	dw	1
   166  001E86  0001               	dw	1
   167  001E88  0004               	dw	4
   168  001E8A  0001               	dw	1
   169  001E8C  0001               	dw	1
   170  001E8E  0001               	dw	1
   171  001E90  0001               	dw	1
   172  001E92  0001               	dw	1
   173  001E94  0001               	dw	1
   174  001E96  0001               	dw	1
   175  001E98  0003               	dw	3
   176  001E9A  0001               	dw	1
   177  001E9C  0002               	dw	2
   178  001E9E  0001               	dw	1
   179  001EA0  0002               	dw	2
   180  001EA2  0001               	dw	1
   181  001EA4  0001               	dw	1
   182  001EA6  0001               	dw	1
   183  001EA8  0006               	dw	6
   184  001EAA  0001               	dw	1
   185  001EAC  0001               	dw	1
   186  001EAE  0001               	dw	1
   187  001EB0  0001               	dw	1
   188  001EB2  0001               	dw	1
   189  001EB4  0001               	dw	1
   190  001EB6  0001               	dw	1
   191  001EB8  0003               	dw	3
   192  001EBA  0001               	dw	1
   193  001EBC  0002               	dw	2
   194  001EBE  0001               	dw	1
   195  001EC0  0001               	dw	1
   196  001EC2  0001               	dw	1
   197  001EC4  0001               	dw	1
   198  001EC6  0001               	dw	1
   199  001EC8  0002               	dw	2
   200  001ECA  0001               	dw	1
   201  001ECC  0001               	dw	1
   202  001ECE  0001               	dw	1
   203  001ED0  0001               	dw	1
   204  001ED2  0001               	dw	1
   205  001ED4  0004               	dw	4
   206  001ED6  0001               	dw	1
   207  001ED8  0003               	dw	3
   208  001EDA  0001               	dw	1
   209  001EDC  0003               	dw	3
   210  001EDE  0001               	dw	1
   211  001EE0  0009               	dw	9
   212  001EE2  0001               	dw	1
   213  001EE4  0001               	dw	1
   214  001EE6  0001               	dw	1
   215  001EE8  0001               	dw	1
   216  001EEA  0001               	dw	1
   217  001EEC  0001               	dw	1
   218  001EEE  0001               	dw	1
   219  001EF0  0003               	dw	3
   220  001EF2  0001               	dw	1
   221  001EF4  0002               	dw	2
   222  001EF6  0001               	dw	1
   223  001EF8  0001               	dw	1
   224  001EFA  0001               	dw	1
   225  001EFC  0001               	dw	1
   226  001EFE  0001               	dw	1
   227  001F00  0002               	dw	2
   228  001F02  0001               	dw	1
   229  001F04  0001               	dw	1
   230  001F06  0001               	dw	1
   231  001F08  0001               	dw	1
   232  001F0A  0001               	dw	1
   233  001F0C  0004               	dw	4
   234  001F0E  0001               	dw	1
   235  001F10  0001               	dw	1
   236  001F12  0001               	dw	1
   237  001F14  0001               	dw	1
   238  001F16  0001               	dw	1
   239  001F18  0001               	dw	1
   240  001F1A  0001               	dw	1
   241  001F1C  0003               	dw	3
   242  001F1E  0001               	dw	1
   243  001F20  0002               	dw	2
   244  001F22  0001               	dw	1
   245  001F24  0002               	dw	2
   246  001F26  0001               	dw	1
   247  001F28  0001               	dw	1
   248  001F2A  0001               	dw	1
   249  001F2C  0006               	dw	6
   250  001F2E  0001               	dw	1
   251  001F30  0001               	dw	1
   252  001F32  0001               	dw	1
   253  001F34  0001               	dw	1
   254  001F36  0001               	dw	1
   255  001F38  0001               	dw	1
   256  001F3A  0001               	dw	1
   257  001F3C  0003               	dw	3
   258  001F3E  0001               	dw	1
   259  001F40  0002               	dw	2
   260  001F42  0001               	dw	1
   261  001F44  0001               	dw	1
   262  001F46  0001               	dw	1
   263  001F48  0001               	dw	1
   264  001F4A  0001               	dw	1
   265  001F4C  0002               	dw	2
   266  001F4E  0001               	dw	1
   267  001F50  0001               	dw	1
   268  001F52  0001               	dw	1
   269  001F54  0001               	dw	1
   270  001F56  0001               	dw	1
   271  001F58  0004               	dw	4
   272  001F5A  0001               	dw	1
   273  001F5C  0003               	dw	3
   274  001F5E  0001               	dw	1
   275  001F60  0003               	dw	3
   276  001F62  0001               	dw	1
   277  001F64  0009               	dw	9
   278                           
   279                           ;initializer for _pr_arr
   280  001F66  002F               	dw	47
   281  001F68  0000               	dw	0
   282  001F6A  002F               	dw	47
   283  001F6C  0000               	dw	0
   284  001F6E  002F               	dw	47
   285  001F70  0000               	dw	0
   286  001F72  003B               	dw	59
   287  001F74  0000               	dw	0
   288  001F76  002F               	dw	47
   289  001F78  0000               	dw	0
   290  001F7A  001F               	dw	31
   291  001F7C  0000               	dw	0
   292  001F7E  004E               	dw	78
   293  001F80  0000               	dw	0
   294  001F82  003B               	dw	59
   295  001F84  0000               	dw	0
   296  001F86  004E               	dw	78
   297  001F88  0000               	dw	0
   298  001F8A  005E               	dw	94
   299  001F8C  0000               	dw	0
   300  001F8E  0046               	dw	70
   301  001F90  0000               	dw	0
   302  001F92  001F               	dw	31
   303  001F94  0000               	dw	0
   304  001F96  0042               	dw	66
   305  001F98  0000               	dw	0
   306  001F9A  0046               	dw	70
   307  001F9C  0000               	dw	0
   308  001F9E  004E               	dw	78
   309  001FA0  0000               	dw	0
   310  001FA2  002F               	dw	47
   311  001FA4  0000               	dw	0
   312  001FA6  0027               	dw	39
   313  001FA8  0000               	dw	0
   314  001FAA  0023               	dw	35
   315  001FAC  0000               	dw	0
   316  001FAE  002D               	dw	45
   317  001FB0  0000               	dw	0
   318  001FB2  0027               	dw	39
   319  001FB4  0000               	dw	0
   320  001FB6  002F               	dw	47
   321  001FB8  0000               	dw	0
   322  001FBA  003B               	dw	59
   323  001FBC  0000               	dw	0
   324  001FBE  0034               	dw	52
   325  001FC0  0000               	dw	0
   326  001FC2  003E               	dw	62
   327  001FC4  0000               	dw	0
   328  001FC6  0027               	dw	39
   329  001FC8  0000               	dw	0
   330  001FCA  0029               	dw	41
   331  001FCC  0000               	dw	0
   332  001FCE  002D               	dw	45
   333  001FD0  0000               	dw	0
   334  001FD2  0031               	dw	49
   335  001FD4  0000               	dw	0
   336  001FD6  002F               	dw	47
   337  001FD8  0000               	dw	0
   338  001FDA  004A               	dw	74
   339  001FDC  0000               	dw	0
   340  001FDE  0046               	dw	70
   341  001FE0  0000               	dw	0
   342  001FE2  003B               	dw	59
   343  001FE4  0000               	dw	0
   344  001FE6  0046               	dw	70
   345  001FE8  0000               	dw	0
   346  001FEA  003B               	dw	59
   347  001FEC  0000               	dw	0
   348  001FEE  0034               	dw	52
   349  001FF0  0000               	dw	0
   350  001FF2  0027               	dw	39
   351  001FF4  0000               	dw	0
   352  001FF6  0029               	dw	41
   353  001FF8  0000               	dw	0
   354  001FFA  002D               	dw	45
   355  001FFC  0000               	dw	0
   356  001FFE  0031               	dw	49
   357  002000  0000               	dw	0
   358  002002  002F               	dw	47
   359  002004  0000               	dw	0
   360  002006  001D               	dw	29
   361  002008  0000               	dw	0
   362  00200A  001D               	dw	29
   363  00200C  0000               	dw	0
   364  00200E  001D               	dw	29
   365  002010  0000               	dw	0
   366  002012  0027               	dw	39
   367  002014  0000               	dw	0
   368  002016  0029               	dw	41
   369  002018  0000               	dw	0
   370  00201A  002D               	dw	45
   371  00201C  0000               	dw	0
   372  00201E  0031               	dw	49
   373  002020  0000               	dw	0
   374  002022  002F               	dw	47
   375  002024  0000               	dw	0
   376  002026  004A               	dw	74
   377  002028  0000               	dw	0
   378  00202A  0046               	dw	70
   379  00202C  0000               	dw	0
   380  00202E  003B               	dw	59
   381  002030  0000               	dw	0
   382  002032  0046               	dw	70
   383  002034  0000               	dw	0
   384  002036  003B               	dw	59
   385  002038  0000               	dw	0
   386  00203A  0034               	dw	52
   387  00203C  0000               	dw	0
   388  00203E  0031               	dw	49
   389  002040  0000               	dw	0
   390  002042  0034               	dw	52
   391  002044  0000               	dw	0
   392  002046  003B               	dw	59
   393  002048  0000               	dw	0
   394  00204A  0027               	dw	39
   395  00204C  0000               	dw	0
   396  00204E  0029               	dw	41
   397  002050  0000               	dw	0
   398  002052  002D               	dw	45
   399  002054  0000               	dw	0
   400  002056  0031               	dw	49
   401  002058  0000               	dw	0
   402  00205A  002F               	dw	47
   403  00205C  0000               	dw	0
   404  00205E  004A               	dw	74
   405  002060  0000               	dw	0
   406  002062  0046               	dw	70
   407  002064  0000               	dw	0
   408  002066  003B               	dw	59
   409  002068  0000               	dw	0
   410  00206A  0046               	dw	70
   411  00206C  0000               	dw	0
   412  00206E  003B               	dw	59
   413  002070  0000               	dw	0
   414  002072  0034               	dw	52
   415  002074  0000               	dw	0
   416  002076  0027               	dw	39
   417  002078  0000               	dw	0
   418  00207A  0029               	dw	41
   419  00207C  0000               	dw	0
   420  00207E  002D               	dw	45
   421  002080  0000               	dw	0
   422  002082  0031               	dw	49
   423  002084  0000               	dw	0
   424  002086  002F               	dw	47
   425  002088  0000               	dw	0
   426  00208A  001D               	dw	29
   427  00208C  0000               	dw	0
   428  00208E  001D               	dw	29
   429  002090  0000               	dw	0
   430  002092  001D               	dw	29
   431  002094  0000               	dw	0
   432  002096  0027               	dw	39
   433  002098  0000               	dw	0
   434  00209A  0029               	dw	41
   435  00209C  0000               	dw	0
   436  00209E  002D               	dw	45
   437  0020A0  0000               	dw	0
   438  0020A2  0031               	dw	49
   439  0020A4  0000               	dw	0
   440  0020A6  002F               	dw	47
   441  0020A8  0000               	dw	0
   442  0020AA  004A               	dw	74
   443  0020AC  0000               	dw	0
   444  0020AE  0046               	dw	70
   445  0020B0  0000               	dw	0
   446  0020B2  003B               	dw	59
   447  0020B4  0000               	dw	0
   448  0020B6  0046               	dw	70
   449  0020B8  0000               	dw	0
   450  0020BA  003B               	dw	59
   451  0020BC  0000               	dw	0
   452  0020BE  0034               	dw	52
   453  0020C0  0000               	dw	0
   454  0020C2  0031               	dw	49
   455  0020C4  0000               	dw	0
   456  0020C6  0034               	dw	52
   457  0020C8  0000               	dw	0
   458  0020CA  003B               	dw	59
   459  0020CC  0000               	dw	0
   460                           
   461                           	psect	idataBANK0
   462  002C9C                     __pidataBANK0:
   463                           	opt callstack 0
   464                           
   465                           ;initializer for _jump_time
   466  002C9C  0001               	dw	1
   467                           
   468                           	psect	idataBANK1
   469  0028CA                     __pidataBANK1:
   470                           	opt callstack 0
   471                           
   472                           ;initializer for _num5
   473  0028CA  0000               	dw	0
   474  0028CC  000F               	dw	15
   475  0028CE  0008               	dw	8
   476  0028D0  000E               	dw	14
   477  0028D2  0001               	dw	1
   478  0028D4  0009               	dw	9
   479  0028D6  0006               	dw	6
   480  0028D8  0000               	dw	0
   481                           
   482                           ;initializer for _num4
   483  0028DA  0000               	dw	0
   484  0028DC  0002               	dw	2
   485  0028DE  0006               	dw	6
   486  0028E0  000A               	dw	10
   487  0028E2  000A               	dw	10
   488  0028E4  000F               	dw	15
   489  0028E6  0002               	dw	2
   490  0028E8  0000               	dw	0
   491                           
   492                           ;initializer for _num3
   493  0028EA  0000               	dw	0
   494  0028EC  0006               	dw	6
   495  0028EE  0009               	dw	9
   496  0028F0  0002               	dw	2
   497  0028F2  0001               	dw	1
   498  0028F4  0009               	dw	9
   499  0028F6  0006               	dw	6
   500  0028F8  0000               	dw	0
   501                           
   502                           ;initializer for _num2
   503  0028FA  0000               	dw	0
   504  0028FC  0006               	dw	6
   505  0028FE  0009               	dw	9
   506  002900  0001               	dw	1
   507  002902  0002               	dw	2
   508  002904  0004               	dw	4
   509  002906  000F               	dw	15
   510  002908  0000               	dw	0
   511                           
   512                           ;initializer for _num1
   513  00290A  0000               	dw	0
   514  00290C  0002               	dw	2
   515  00290E  0006               	dw	6
   516  002910  0002               	dw	2
   517  002912  0002               	dw	2
   518  002914  0002               	dw	2
   519  002916  0007               	dw	7
   520  002918  0000               	dw	0
   521                           
   522                           ;initializer for _arrow
   523  00291A  0000               	dw	0
   524  00291C  0000               	dw	0
   525  00291E  0002               	dw	2
   526  002920  000F               	dw	15
   527  002922  0002               	dw	2
   528  002924  0000               	dw	0
   529  002926  0000               	dw	0
   530  002928  0000               	dw	0
   531                           
   532                           ;initializer for _rock2
   533  00292A  0000               	dw	0
   534  00292C  0000               	dw	0
   535  00292E  0000               	dw	0
   536  002930  0000               	dw	0
   537  002932  0000               	dw	0
   538  002934  0006               	dw	6
   539  002936  000F               	dw	15
   540  002938  000F               	dw	15
   541                           
   542                           ;initializer for _rock1
   543  00293A  0000               	dw	0
   544  00293C  0000               	dw	0
   545  00293E  0000               	dw	0
   546  002940  0000               	dw	0
   547  002942  0000               	dw	0
   548  002944  0002               	dw	2
   549  002946  0007               	dw	7
   550  002948  0007               	dw	7
   551                           
   552                           ;initializer for _din_dun
   553  00294A  0000               	dw	0
   554  00294C  0000               	dw	0
   555  00294E  0000               	dw	0
   556  002950  0000               	dw	0
   557  002952  0000               	dw	0
   558  002954  0038               	dw	56
   559  002956  0030               	dw	48
   560  002958  0060               	dw	96
   561                           
   562                           ;initializer for _din_ori
   563  00295A  0000               	dw	0
   564  00295C  0000               	dw	0
   565  00295E  0000               	dw	0
   566  002960  0000               	dw	0
   567  002962  0030               	dw	48
   568  002964  0020               	dw	32
   569  002966  0030               	dw	48
   570  002968  0060               	dw	96
   571                           
   572                           	psect	idataBANK2
   573  00276A                     __pidataBANK2:
   574                           	opt callstack 0
   575                           
   576                           ;initializer for _endimg
   577  00276A  0000               	dw	0
   578  00276C  0000               	dw	0
   579  00276E  0000               	dw	0
   580  002770  0000               	dw	0
   581  002772  7A5C               	dw	31324
   582  002774  0000               	dw	0
   583  002776  4352               	dw	17234
   584  002778  0000               	dw	0
   585  00277A  7AD2               	dw	31442
   586  00277C  0000               	dw	0
   587  00277E  4252               	dw	16978
   588  002780  0000               	dw	0
   589  002782  7A5C               	dw	31324
   590  002784  0000               	dw	0
   591  002786  0000               	dw	0
   592  002788  0000               	dw	0
   593                           
   594                           ;initializer for _go
   595  00278A  0000               	dw	0
   596  00278C  0000               	dw	0
   597  00278E  38E6               	dw	14566
   598  002790  0000               	dw	0
   599  002792  4516               	dw	17686
   600  002794  0000               	dw	0
   601  002796  4116               	dw	16662
   602  002798  0000               	dw	0
   603  00279A  4D16               	dw	19734
   604  00279C  0000               	dw	0
   605  00279E  4510               	dw	17680
   606  0027A0  0000               	dw	0
   607  0027A2  38E6               	dw	14566
   608  0027A4  0000               	dw	0
   609  0027A6  0000               	dw	0
   610  0027A8  0000               	dw	0
   611                           
   612                           ;initializer for _hold
   613  0027AA  0000               	dw	0
   614  0027AC  0000               	dw	0
   615  0027AE  0000               	dw	0
   616  0027B0  0000               	dw	0
   617  0027B2  A48C               	dw	42124
   618  0027B4  0000               	dw	0
   619  0027B6  AA8A               	dw	43658
   620  0027B8  0000               	dw	0
   621  0027BA  EA8A               	dw	60042
   622  0027BC  0000               	dw	0
   623  0027BE  AA8A               	dw	43658
   624  0027C0  0000               	dw	0
   625  0027C2  A4EC               	dw	42220
   626  0027C4  0000               	dw	0
   627  0027C6  0000               	dw	0
   628  0027C8  0000               	dw	0
   629                           
   630                           ;initializer for _num0
   631  0027CA  0000               	dw	0
   632  0027CC  0006               	dw	6
   633  0027CE  0009               	dw	9
   634  0027D0  0009               	dw	9
   635  0027D2  0009               	dw	9
   636  0027D4  0009               	dw	9
   637  0027D6  0006               	dw	6
   638  0027D8  0000               	dw	0
   639                           
   640                           ;initializer for _num9
   641  0027DA  0000               	dw	0
   642  0027DC  0006               	dw	6
   643  0027DE  0009               	dw	9
   644  0027E0  0009               	dw	9
   645  0027E2  0007               	dw	7
   646  0027E4  0001               	dw	1
   647  0027E6  0001               	dw	1
   648  0027E8  0000               	dw	0
   649                           
   650                           ;initializer for _num8
   651  0027EA  0000               	dw	0
   652  0027EC  0006               	dw	6
   653  0027EE  0009               	dw	9
   654  0027F0  0006               	dw	6
   655  0027F2  0009               	dw	9
   656  0027F4  0009               	dw	9
   657  0027F6  0006               	dw	6
   658  0027F8  0000               	dw	0
   659                           
   660                           ;initializer for _num7
   661  0027FA  0000               	dw	0
   662  0027FC  000F               	dw	15
   663  0027FE  0001               	dw	1
   664  002800  0001               	dw	1
   665  002802  0002               	dw	2
   666  002804  0004               	dw	4
   667  002806  0004               	dw	4
   668  002808  0000               	dw	0
   669                           
   670                           ;initializer for _num6
   671  00280A  0000               	dw	0
   672  00280C  0006               	dw	6
   673  00280E  0008               	dw	8
   674  002810  000E               	dw	14
   675  002812  0009               	dw	9
   676  002814  0009               	dw	9
   677  002816  0006               	dw	6
   678  002818  0000               	dw	0
   679  0000                     _TMR3	set	4018
   680  0000                     _TMR0	set	4054
   681  0000                     _T0CON	set	4053
   682  0000                     _INTCON2bits	set	4081
   683  0000                     _CCPR1L	set	4030
   684  0000                     _CCP1CON	set	4029
   685  0000                     _PR2	set	4043
   686  0000                     _T2CON	set	4042
   687  0000                     _TMR3H	set	4019
   688  0000                     _TMR3L	set	4018
   689  0000                     _T3CON	set	4017
   690  0000                     _IPR2bits	set	4002
   691  0000                     _PIR2bits	set	4001
   692  0000                     _TMR1H	set	4047
   693  0000                     _TMR1L	set	4046
   694  0000                     _T1CON	set	4045
   695  0000                     _IPR1bits	set	3999
   696  0000                     _PIR1bits	set	3998
   697  0000                     _RCONbits	set	4048
   698  0000                     _T3CONbits	set	4017
   699  0000                     _T2CONbits	set	4042
   700  0000                     _T0CONbits	set	4053
   701  0000                     _PIE1bits	set	3997
   702  0000                     _INTCONbits	set	4082
   703  0000                     _PIE2bits	set	4000
   704  0000                     _PORTCbits	set	3970
   705  0000                     _LATCbits	set	3979
   706  0000                     _ADCON0bits	set	4034
   707  0000                     _ADRESL	set	4035
   708  0000                     _ADRESH	set	4036
   709  0000                     _ADCON2bits	set	4032
   710  0000                     _TRISCbits	set	3988
   711  0000                     _TRISD	set	3989
   712  0000                     _PORTD	set	3971
   713  0000                     _LATD	set	3980
   714  0000                     _TRISC	set	3988
   715  0000                     _PORTC	set	3970
   716  0000                     _LATC	set	3979
   717  0000                     _TRISB	set	3987
   718  0000                     _PORTB	set	3969
   719  0000                     _LATB	set	3978
   720  0000                     _TRISA	set	3986
   721  0000                     _PORTA	set	3968
   722  0000                     _LATA	set	3977
   723  0000                     _ADCON1	set	4033
   724  0000                     _ADFM	set	32263
   725                           
   726                           ; #config settings
   727  0000                     
   728                           	psect	cinit
   729  00243E                     __pcinit:
   730                           	opt callstack 0
   731  00243E                     start_initialization:
   732                           	opt callstack 0
   733  00243E                     __initialization:
   734                           	opt callstack 0
   735                           
   736                           ; Initialize objects allocated to BIGRAM (720 bytes)
   737                           ; load TBLPTR registers with __pidataBIGRAM
   738  00243E  0EFE               	movlw	low __pidataBIGRAM
   739  002440  6EF6               	movwf	tblptrl,c
   740  002442  0E1D               	movlw	high __pidataBIGRAM
   741  002444  6EF7               	movwf	tblptrh,c
   742  002446  0E00               	movlw	low (__pidataBIGRAM shr (0+16))
   743  002448  6EF8               	movwf	tblptru,c
   744  00244A  EE02  F0C4         	lfsr	0,__pdataBIGRAM
   745  00244E  EE12 F0D0          	lfsr	1,720
   746  002452                     copy_data0:
   747  002452  0009               	tblrd		*+
   748  002454  CFF5 FFEE          	movff	tablat,postinc0
   749  002458  50E5               	movf	postdec1,w,c
   750  00245A  50E1               	movf	fsr1l,w,c
   751  00245C  E1FA               	bnz	copy_data0
   752  00245E  50E2               	movf	fsr1h,w,c
   753  002460  E1F8               	bnz	copy_data0
   754                           
   755                           ; Initialize objects allocated to BANK2 (176 bytes)
   756                           ; load TBLPTR registers with __pidataBANK2
   757  002462  0E6A               	movlw	low __pidataBANK2
   758  002464  6EF6               	movwf	tblptrl,c
   759  002466  0E27               	movlw	high __pidataBANK2
   760  002468  6EF7               	movwf	tblptrh,c
   761  00246A  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   762  00246C  6EF8               	movwf	tblptru,c
   763  00246E  EE02  F000         	lfsr	0,__pdataBANK2
   764  002472  EE10 F0B0          	lfsr	1,176
   765  002476                     copy_data1:
   766  002476  0009               	tblrd		*+
   767  002478  CFF5 FFEE          	movff	tablat,postinc0
   768  00247C  50E5               	movf	postdec1,w,c
   769  00247E  50E1               	movf	fsr1l,w,c
   770  002480  E1FA               	bnz	copy_data1
   771                           
   772                           ; Initialize objects allocated to BANK1 (160 bytes)
   773                           ; load TBLPTR registers with __pidataBANK1
   774  002482  0ECA               	movlw	low __pidataBANK1
   775  002484  6EF6               	movwf	tblptrl,c
   776  002486  0E28               	movlw	high __pidataBANK1
   777  002488  6EF7               	movwf	tblptrh,c
   778  00248A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   779  00248C  6EF8               	movwf	tblptru,c
   780  00248E  EE01  F000         	lfsr	0,__pdataBANK1
   781  002492  EE10 F0A0          	lfsr	1,160
   782  002496                     copy_data2:
   783  002496  0009               	tblrd		*+
   784  002498  CFF5 FFEE          	movff	tablat,postinc0
   785  00249C  50E5               	movf	postdec1,w,c
   786  00249E  50E1               	movf	fsr1l,w,c
   787  0024A0  E1FA               	bnz	copy_data2
   788                           
   789                           ; Initialize objects allocated to BANK0 (2 bytes)
   790                           ; load TBLPTR registers with __pidataBANK0
   791  0024A2  0E9C               	movlw	low __pidataBANK0
   792  0024A4  6EF6               	movwf	tblptrl,c
   793  0024A6  0E2C               	movlw	high __pidataBANK0
   794  0024A8  6EF7               	movwf	tblptrh,c
   795  0024AA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   796  0024AC  6EF8               	movwf	tblptru,c
   797  0024AE  0009               	tblrd		*+	;fetch initializer
   798  0024B0  CFF5 F0FB          	movff	tablat,__pdataBANK0
   799  0024B4  0009               	tblrd		*+	;fetch initializer
   800  0024B6  CFF5 F0FC          	movff	tablat,__pdataBANK0+1
   801                           
   802                           ; Initialize objects allocated to COMRAM (6 bytes)
   803                           ; load TBLPTR registers with __pidataCOMRAM
   804  0024BA  0E96               	movlw	low __pidataCOMRAM
   805  0024BC  6EF6               	movwf	tblptrl,c
   806  0024BE  0E2C               	movlw	high __pidataCOMRAM
   807  0024C0  6EF7               	movwf	tblptrh,c
   808  0024C2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   809  0024C4  6EF8               	movwf	tblptru,c
   810  0024C6  EE00  F067         	lfsr	0,__pdataCOMRAM
   811  0024CA  EE10 F006          	lfsr	1,6
   812  0024CE                     copy_data3:
   813  0024CE  0009               	tblrd		*+
   814  0024D0  CFF5 FFEE          	movff	tablat,postinc0
   815  0024D4  50E5               	movf	postdec1,w,c
   816  0024D6  50E1               	movf	fsr1l,w,c
   817  0024D8  E1FA               	bnz	copy_data3
   818                           
   819                           ; Clear objects allocated to BANK2 (20 bytes)
   820  0024DA  EE02  F0B0         	lfsr	0,__pbssBANK2
   821  0024DE  0E14               	movlw	20
   822  0024E0                     clear_0:
   823  0024E0  6AEE               	clrf	postinc0,c
   824  0024E2  06E8               	decf	wreg,f,c
   825  0024E4  E1FD               	bnz	clear_0
   826                           
   827                           ; Clear objects allocated to BANK1 (84 bytes)
   828  0024E6  EE01  F0A0         	lfsr	0,__pbssBANK1
   829  0024EA  0E54               	movlw	84
   830  0024EC                     clear_1:
   831  0024EC  6AEE               	clrf	postinc0,c
   832  0024EE  06E8               	decf	wreg,f,c
   833  0024F0  E1FD               	bnz	clear_1
   834                           
   835                           ; Clear objects allocated to BANK0 (40 bytes)
   836  0024F2  EE00  F0D3         	lfsr	0,__pbssBANK0
   837  0024F6  0E28               	movlw	40
   838  0024F8                     clear_2:
   839  0024F8  6AEE               	clrf	postinc0,c
   840  0024FA  06E8               	decf	wreg,f,c
   841  0024FC  E1FD               	bnz	clear_2
   842                           
   843                           ; Clear objects allocated to COMRAM (46 bytes)
   844  0024FE  EE00  F039         	lfsr	0,__pbssCOMRAM
   845  002502  0E2E               	movlw	46
   846  002504                     clear_3:
   847  002504  6AEE               	clrf	postinc0,c
   848  002506  06E8               	decf	wreg,f,c
   849  002508  E1FD               	bnz	clear_3
   850  00250A                     end_of_initialization:
   851                           	opt callstack 0
   852  00250A                     __end_of__initialization:
   853                           	opt callstack 0
   854  00250A  906D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   855  00250C  926D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   856  00250E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   857  002510  6EF8               	movwf	tblptru,c
   858  002512  0100               	movlb	0
   859  002514  EFA2  F00A         	goto	_main	;jump to C main() function
   860                           
   861                           	psect	bssCOMRAM
   862  000039                     __pbssCOMRAM:
   863                           	opt callstack 0
   864  000039                     _din:
   865                           	opt callstack 0
   866  000039                     	ds	16
   867  000049                     _det_i:
   868                           	opt callstack 0
   869  000049                     	ds	2
   870  00004B                     _dis_avr:
   871                           	opt callstack 0
   872  00004B                     	ds	2
   873  00004D                     _dis_i:
   874                           	opt callstack 0
   875  00004D                     	ds	2
   876  00004F                     _test2:
   877                           	opt callstack 0
   878  00004F                     	ds	2
   879  000051                     _test1:
   880                           	opt callstack 0
   881  000051                     	ds	2
   882  000053                     _create:
   883                           	opt callstack 0
   884  000053                     	ds	2
   885  000055                     _timer3_count:
   886                           	opt callstack 0
   887  000055                     	ds	2
   888  000057                     _dun_flag:
   889                           	opt callstack 0
   890  000057                     	ds	2
   891  000059                     _jump_flag:
   892                           	opt callstack 0
   893  000059                     	ds	2
   894  00005B                     _running_flag:
   895                           	opt callstack 0
   896  00005B                     	ds	2
   897  00005D                     _tmr1_count:
   898                           	opt callstack 0
   899  00005D                     	ds	2
   900  00005F                     _seed:
   901                           	opt callstack 0
   902  00005F                     	ds	8
   903                           
   904                           	psect	dataCOMRAM
   905  000067                     __pdataCOMRAM:
   906                           	opt callstack 0
   907  000067                     _timer3_val:
   908                           	opt callstack 0
   909  000067                     	ds	4
   910  00006B                     _line:
   911                           	opt callstack 0
   912  00006B                     	ds	2
   913                           
   914                           	psect	bssBANK0
   915  0000D3                     __pbssBANK0:
   916                           	opt callstack 0
   917  0000D3                     _row:
   918                           	opt callstack 0
   919  0000D3                     	ds	32
   920  0000F3                     _time_count:
   921                           	opt callstack 0
   922  0000F3                     	ds	2
   923  0000F5                     _fall_flag:
   924                           	opt callstack 0
   925  0000F5                     	ds	2
   926  0000F7                     _score:
   927                           	opt callstack 0
   928  0000F7                     	ds	2
   929  0000F9                     _pr_idx:
   930                           	opt callstack 0
   931  0000F9                     	ds	2
   932                           
   933                           	psect	dataBANK0
   934  0000FB                     __pdataBANK0:
   935                           	opt callstack 0
   936  0000FB                     _jump_time:
   937                           	opt callstack 0
   938  0000FB                     	ds	2
   939                           
   940                           	psect	bssBANK1
   941  0001A0                     __pbssBANK1:
   942                           	opt callstack 0
   943  0001A0                     _crush:
   944                           	opt callstack 0
   945  0001A0                     	ds	32
   946  0001C0                     _obj:
   947                           	opt callstack 0
   948  0001C0                     	ds	32
   949  0001E0                     _detect:
   950                           	opt callstack 0
   951  0001E0                     	ds	20
   952                           
   953                           	psect	dataBANK1
   954  000100                     __pdataBANK1:
   955                           	opt callstack 0
   956  000100                     _num5:
   957                           	opt callstack 0
   958  000100                     	ds	16
   959  000110                     _num4:
   960                           	opt callstack 0
   961  000110                     	ds	16
   962  000120                     _num3:
   963                           	opt callstack 0
   964  000120                     	ds	16
   965  000130                     _num2:
   966                           	opt callstack 0
   967  000130                     	ds	16
   968  000140                     _num1:
   969                           	opt callstack 0
   970  000140                     	ds	16
   971  000150                     _arrow:
   972                           	opt callstack 0
   973  000150                     	ds	16
   974  000160                     _rock2:
   975                           	opt callstack 0
   976  000160                     	ds	16
   977  000170                     _rock1:
   978                           	opt callstack 0
   979  000170                     	ds	16
   980  000180                     _din_dun:
   981                           	opt callstack 0
   982  000180                     	ds	16
   983  000190                     _din_ori:
   984                           	opt callstack 0
   985  000190                     	ds	16
   986                           
   987                           	psect	bssBANK2
   988  0002B0                     __pbssBANK2:
   989                           	opt callstack 0
   990  0002B0                     _distance:
   991                           	opt callstack 0
   992  0002B0                     	ds	20
   993                           
   994                           	psect	dataBANK2
   995  000200                     __pdataBANK2:
   996                           	opt callstack 0
   997  000200                     _endimg:
   998                           	opt callstack 0
   999  000200                     	ds	32
  1000  000220                     _go:
  1001                           	opt callstack 0
  1002  000220                     	ds	32
  1003  000240                     _hold:
  1004                           	opt callstack 0
  1005  000240                     	ds	32
  1006  000260                     _num0:
  1007                           	opt callstack 0
  1008  000260                     	ds	16
  1009  000270                     _num9:
  1010                           	opt callstack 0
  1011  000270                     	ds	16
  1012  000280                     _num8:
  1013                           	opt callstack 0
  1014  000280                     	ds	16
  1015  000290                     _num7:
  1016                           	opt callstack 0
  1017  000290                     	ds	16
  1018  0002A0                     _num6:
  1019                           	opt callstack 0
  1020  0002A0                     	ds	16
  1021                           
  1022                           	psect	dataBIGRAM
  1023  0002C4                     __pdataBIGRAM:
  1024                           	opt callstack 0
  1025  0002C4                     _tmr_arr:
  1026                           	opt callstack 0
  1027  0002C4                     	ds	360
  1028  00042C                     _pr_arr:
  1029                           	opt callstack 0
  1030  00042C                     	ds	360
  1031                           
  1032                           	psect	cstackBANK1
  1033  0001F4                     __pcstackBANK1:
  1034                           	opt callstack 0
  1035  0001F4                     main@nothing:
  1036                           	opt callstack 0
  1037                           
  1038                           ; 2 bytes @ 0x0
  1039  0001F4                     	ds	2
  1040  0001F6                     main@temp:
  1041                           	opt callstack 0
  1042                           
  1043                           ; 2 bytes @ 0x2
  1044  0001F6                     	ds	2
  1045  0001F8                     main@access:
  1046                           	opt callstack 0
  1047                           
  1048                           ; 2 bytes @ 0x4
  1049  0001F8                     	ds	2
  1050  0001FA                     main@i:
  1051                           	opt callstack 0
  1052                           
  1053                           ; 2 bytes @ 0x6
  1054  0001FA                     	ds	2
  1055  0001FC                     main@i_1000:
  1056                           	opt callstack 0
  1057                           
  1058                           ; 2 bytes @ 0x8
  1059  0001FC                     	ds	2
  1060                           
  1061                           	psect	cstackBANK0
  1062  000080                     __pcstackBANK0:
  1063                           	opt callstack 0
  1064  000080                     ??_initial:
  1065  000080                     ?_ADC_Read:
  1066                           	opt callstack 0
  1067  000080                     ?___wmul:
  1068                           	opt callstack 0
  1069  000080                     ?___awdiv:
  1070                           	opt callstack 0
  1071  000080                     ?___awmod:
  1072                           	opt callstack 0
  1073  000080                     ?___lwdiv:
  1074                           	opt callstack 0
  1075  000080                     ?___lwmod:
  1076                           	opt callstack 0
  1077  000080                     ?___lmul:
  1078                           	opt callstack 0
  1079  000080                     ?_time:
  1080                           	opt callstack 0
  1081  000080                     ___wmul@multiplier:
  1082                           	opt callstack 0
  1083  000080                     ___awdiv@dividend:
  1084                           	opt callstack 0
  1085  000080                     ___awmod@dividend:
  1086                           	opt callstack 0
  1087  000080                     ___lwdiv@dividend:
  1088                           	opt callstack 0
  1089  000080                     ___lwmod@dividend:
  1090                           	opt callstack 0
  1091  000080                     time@t:
  1092                           	opt callstack 0
  1093  000080                     ___lmul@multiplier:
  1094                           	opt callstack 0
  1095                           
  1096                           ; 4 bytes @ 0x0
  1097  000080                     	ds	2
  1098  000082                     ??_ADC_Read:
  1099  000082                     initial@i:
  1100                           	opt callstack 0
  1101  000082                     ___wmul@multiplicand:
  1102                           	opt callstack 0
  1103  000082                     ___awdiv@divisor:
  1104                           	opt callstack 0
  1105  000082                     ___awmod@divisor:
  1106                           	opt callstack 0
  1107  000082                     ___lwdiv@divisor:
  1108                           	opt callstack 0
  1109  000082                     ___lwmod@divisor:
  1110                           	opt callstack 0
  1111                           
  1112                           ; 2 bytes @ 0x2
  1113  000082                     	ds	2
  1114  000084                     ___awdiv@counter:
  1115                           	opt callstack 0
  1116  000084                     ___awmod@counter:
  1117                           	opt callstack 0
  1118  000084                     ___lwdiv@counter:
  1119                           	opt callstack 0
  1120  000084                     ___lwmod@counter:
  1121                           	opt callstack 0
  1122  000084                     ADC_Read@digital:
  1123                           	opt callstack 0
  1124  000084                     ___wmul@product:
  1125                           	opt callstack 0
  1126  000084                     ___lmul@multiplicand:
  1127                           	opt callstack 0
  1128                           
  1129                           ; 4 bytes @ 0x4
  1130  000084                     	ds	1
  1131  000085                     ___awdiv@sign:
  1132                           	opt callstack 0
  1133  000085                     ___awmod@sign:
  1134                           	opt callstack 0
  1135  000085                     ___lwdiv@quotient:
  1136                           	opt callstack 0
  1137                           
  1138                           ; 2 bytes @ 0x5
  1139  000085                     	ds	1
  1140  000086                     ___awdiv@quotient:
  1141                           	opt callstack 0
  1142                           
  1143                           ; 2 bytes @ 0x6
  1144  000086                     	ds	1
  1145  000087                     ??_end:
  1146                           
  1147                           ; 1 bytes @ 0x7
  1148  000087                     	ds	1
  1149  000088                     ??_start:
  1150  000088                     srand@s:
  1151                           	opt callstack 0
  1152  000088                     ___lmul@product:
  1153                           	opt callstack 0
  1154                           
  1155                           ; 4 bytes @ 0x8
  1156  000088                     	ds	2
  1157  00008A                     ??_srand:
  1158                           
  1159                           ; 1 bytes @ 0xA
  1160  00008A                     	ds	2
  1161  00008C                     start@temp:
  1162                           	opt callstack 0
  1163                           
  1164                           ; 2 bytes @ 0xC
  1165  00008C                     	ds	2
  1166  00008E                     start@nzero:
  1167                           	opt callstack 0
  1168                           
  1169                           ; 2 bytes @ 0xE
  1170  00008E                     	ds	2
  1171  000090                     start@sum:
  1172                           	opt callstack 0
  1173                           
  1174                           ; 2 bytes @ 0x10
  1175  000090                     	ds	2
  1176  000092                     start@i:
  1177                           	opt callstack 0
  1178                           
  1179                           ; 2 bytes @ 0x12
  1180  000092                     	ds	1
  1181  000093                     end@num:
  1182                           	opt callstack 0
  1183                           
  1184                           ; 2 bytes @ 0x13
  1185  000093                     	ds	1
  1186  000094                     start@i_871:
  1187                           	opt callstack 0
  1188                           
  1189                           ; 2 bytes @ 0x14
  1190  000094                     	ds	1
  1191  000095                     end@i:
  1192                           	opt callstack 0
  1193                           
  1194                           ; 2 bytes @ 0x15
  1195  000095                     	ds	2
  1196  000097                     end@i_874:
  1197                           	opt callstack 0
  1198                           
  1199                           ; 2 bytes @ 0x17
  1200  000097                     	ds	2
  1201  000099                     end@j:
  1202                           	opt callstack 0
  1203                           
  1204                           ; 2 bytes @ 0x19
  1205  000099                     	ds	2
  1206  00009B                     end@i_878:
  1207                           	opt callstack 0
  1208                           
  1209                           ; 2 bytes @ 0x1B
  1210  00009B                     	ds	2
  1211  00009D                     end@i_879:
  1212                           	opt callstack 0
  1213                           
  1214                           ; 2 bytes @ 0x1D
  1215  00009D                     	ds	2
  1216  00009F                     end@i_880:
  1217                           	opt callstack 0
  1218                           
  1219                           ; 2 bytes @ 0x1F
  1220  00009F                     	ds	2
  1221  0000A1                     end@i_881:
  1222                           	opt callstack 0
  1223                           
  1224                           ; 2 bytes @ 0x21
  1225  0000A1                     	ds	2
  1226  0000A3                     end@i_882:
  1227                           	opt callstack 0
  1228                           
  1229                           ; 2 bytes @ 0x23
  1230  0000A3                     	ds	2
  1231  0000A5                     end@i_883:
  1232                           	opt callstack 0
  1233                           
  1234                           ; 2 bytes @ 0x25
  1235  0000A5                     	ds	2
  1236  0000A7                     end@i_884:
  1237                           	opt callstack 0
  1238                           
  1239                           ; 2 bytes @ 0x27
  1240  0000A7                     	ds	2
  1241  0000A9                     end@i_885:
  1242                           	opt callstack 0
  1243                           
  1244                           ; 2 bytes @ 0x29
  1245  0000A9                     	ds	2
  1246  0000AB                     end@i_886:
  1247                           	opt callstack 0
  1248                           
  1249                           ; 2 bytes @ 0x2B
  1250  0000AB                     	ds	2
  1251  0000AD                     end@i_887:
  1252                           	opt callstack 0
  1253                           
  1254                           ; 2 bytes @ 0x2D
  1255  0000AD                     	ds	2
  1256  0000AF                     end@shift:
  1257                           	opt callstack 0
  1258                           
  1259                           ; 2 bytes @ 0x2F
  1260  0000AF                     	ds	2
  1261  0000B1                     ??_running:
  1262                           
  1263                           ; 1 bytes @ 0x31
  1264  0000B1                     	ds	14
  1265  0000BF                     running@digital:
  1266                           	opt callstack 0
  1267                           
  1268                           ; 4 bytes @ 0x3F
  1269  0000BF                     	ds	4
  1270  0000C3                     running@i_890:
  1271                           	opt callstack 0
  1272                           
  1273                           ; 2 bytes @ 0x43
  1274  0000C3                     	ds	2
  1275  0000C5                     running@i:
  1276                           	opt callstack 0
  1277                           
  1278                           ; 2 bytes @ 0x45
  1279  0000C5                     	ds	2
  1280  0000C7                     running@i_891:
  1281                           	opt callstack 0
  1282                           
  1283                           ; 2 bytes @ 0x47
  1284  0000C7                     	ds	2
  1285  0000C9                     running@i_934:
  1286                           	opt callstack 0
  1287                           
  1288                           ; 2 bytes @ 0x49
  1289  0000C9                     	ds	2
  1290  0000CB                     ??_main:
  1291                           
  1292                           ; 1 bytes @ 0x4B
  1293  0000CB                     	ds	8
  1294                           
  1295                           	psect	cstackCOMRAM
  1296  000001                     __pcstackCOMRAM:
  1297                           	opt callstack 0
  1298  000001                     ?i2___lwmod:
  1299                           	opt callstack 0
  1300  000001                     ?___omul:
  1301                           	opt callstack 0
  1302  000001                     i2___lwmod@dividend:
  1303                           	opt callstack 0
  1304  000001                     ___omul@multiplier:
  1305                           	opt callstack 0
  1306                           
  1307                           ; 8 bytes @ 0x0
  1308  000001                     	ds	2
  1309  000003                     i2___lwmod@divisor:
  1310                           	opt callstack 0
  1311                           
  1312                           ; 2 bytes @ 0x2
  1313  000003                     	ds	2
  1314  000005                     i2___lwmod@counter:
  1315                           	opt callstack 0
  1316                           
  1317                           ; 1 bytes @ 0x4
  1318  000005                     	ds	4
  1319  000009                     ___omul@multiplicand:
  1320                           	opt callstack 0
  1321                           
  1322                           ; 8 bytes @ 0x8
  1323  000009                     	ds	8
  1324  000011                     ___omul@product:
  1325                           	opt callstack 0
  1326                           
  1327                           ; 8 bytes @ 0x10
  1328  000011                     	ds	8
  1329  000019                     ?_rand:
  1330                           	opt callstack 0
  1331                           
  1332                           ; 2 bytes @ 0x18
  1333  000019                     	ds	2
  1334  00001B                     ??_rand:
  1335                           
  1336                           ; 1 bytes @ 0x1A
  1337  00001B                     	ds	8
  1338  000023                     ?i2___awmod:
  1339                           	opt callstack 0
  1340  000023                     i2___awmod@dividend:
  1341                           	opt callstack 0
  1342                           
  1343                           ; 2 bytes @ 0x22
  1344  000023                     	ds	2
  1345  000025                     i2___awmod@divisor:
  1346                           	opt callstack 0
  1347                           
  1348                           ; 2 bytes @ 0x24
  1349  000025                     	ds	2
  1350  000027                     i2___awmod@counter:
  1351                           	opt callstack 0
  1352                           
  1353                           ; 1 bytes @ 0x26
  1354  000027                     	ds	1
  1355  000028                     i2___awmod@sign:
  1356                           	opt callstack 0
  1357                           
  1358                           ; 1 bytes @ 0x27
  1359  000028                     	ds	1
  1360  000029                     ??_Hi_ISR:
  1361                           
  1362                           ; 1 bytes @ 0x28
  1363  000029                     	ds	14
  1364  000037                     Hi_ISR@i:
  1365                           	opt callstack 0
  1366                           
  1367                           ; 2 bytes @ 0x36
  1368  000037                     	ds	2
  1369                           
  1370 ;;
  1371 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1372 ;;
  1373 ;; *************** function _main *****************
  1374 ;; Defined at:
  1375 ;;		line 458 in file "main.c"
  1376 ;; Parameters:    Size  Location     Type
  1377 ;;		None
  1378 ;; Auto vars:     Size  Location     Type
  1379 ;;  i               2    8[BANK1 ] int 
  1380 ;;  i               2    6[BANK1 ] int 
  1381 ;;  access          2    4[BANK1 ] int 
  1382 ;;  temp            2    2[BANK1 ] int 
  1383 ;;  nothing         2    0[BANK1 ] int 
  1384 ;; Return value:  Size  Location     Type
  1385 ;;                  1    wreg      void 
  1386 ;; Registers used:
  1387 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1388 ;; Tracked objects:
  1389 ;;		On entry : 0/0
  1390 ;;		On exit  : 0/0
  1391 ;;		Unchanged: 0/0
  1392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1393 ;;      Params:         0       0       0       0       0       0       0
  1394 ;;      Locals:         0       0      10       0       0       0       0
  1395 ;;      Temps:          0       8       0       0       0       0       0
  1396 ;;      Totals:         0       8      10       0       0       0       0
  1397 ;;Total ram usage:       18 bytes
  1398 ;; Hardware stack levels required when called:    6
  1399 ;; This function calls:
  1400 ;;		_initial
  1401 ;;		_running
  1402 ;;		_srand
  1403 ;;		_start
  1404 ;;		_time
  1405 ;; This function is called by:
  1406 ;;		Startup code after reset
  1407 ;; This function uses a non-reentrant model
  1408 ;;
  1409                           
  1410                           	psect	text0
  1411  001544                     __ptext0:
  1412                           	opt callstack 0
  1413  001544                     _main:
  1414                           	opt callstack 25
  1415  001544                     
  1416                           ;main.c: 459:     initial();
  1417  001544  EC8C  F012         	call	_initial	;wreg free
  1418  001548                     
  1419                           ;main.c: 461:     RCONbits.IPEN = 1;
  1420  001548  8ED0               	bsf	208,7,c	;volatile
  1421  00154A                     
  1422                           ;main.c: 462:     INTCONbits.GIEH = 1;
  1423  00154A  8EF2               	bsf	242,7,c	;volatile
  1424  00154C                     
  1425                           ;main.c: 463:     INTCONbits.GIEL = 1;
  1426  00154C  8CF2               	bsf	242,6,c	;volatile
  1427  00154E                     
  1428                           ;main.c: 466:     PIR1bits.TMR1IF = 0;
  1429  00154E  909E               	bcf	158,0,c	;volatile
  1430  001550                     
  1431                           ;main.c: 467:     PIE1bits.TMR1IE = 1;
  1432  001550  809D               	bsf	157,0,c	;volatile
  1433  001552                     
  1434                           ;main.c: 468:     IPR1bits.TMR1IP = 1;
  1435  001552  809F               	bsf	159,0,c	;volatile
  1436  001554                     
  1437                           ;main.c: 469:     T1CON = 0xd9;
  1438  001554  0ED9               	movlw	217
  1439  001556  6ECD               	movwf	205,c	;volatile
  1440  001558                     
  1441                           ;main.c: 470:     TMR1L = 0x4c;
  1442  001558  0E4C               	movlw	76
  1443  00155A  6ECE               	movwf	206,c	;volatile
  1444  00155C                     
  1445                           ;main.c: 471:     TMR1H = 0xfe;
  1446  00155C  0EFE               	movlw	254
  1447  00155E  6ECF               	movwf	207,c	;volatile
  1448  001560                     
  1449                           ;main.c: 473:     PIR2bits.TMR3IF = 0;
  1450  001560  92A1               	bcf	161,1,c	;volatile
  1451  001562                     
  1452                           ;main.c: 474:     PIE2bits.TMR3IE = 0;
  1453  001562  92A0               	bcf	160,1,c	;volatile
  1454  001564                     
  1455                           ;main.c: 475:     IPR2bits.TMR3IP = 1;
  1456  001564  82A2               	bsf	162,1,c	;volatile
  1457  001566                     
  1458                           ;main.c: 476:     T3CON = 0xd8;
  1459  001566  0ED8               	movlw	216
  1460  001568  6EB1               	movwf	177,c	;volatile
  1461  00156A                     
  1462                           ;main.c: 477:     TMR3L = 0x70;
  1463  00156A  0E70               	movlw	112
  1464  00156C  6EB2               	movwf	178,c	;volatile
  1465  00156E                     
  1466                           ;main.c: 478:     TMR3H = 0xd4;
  1467  00156E  0ED4               	movlw	212
  1468  001570  6EB3               	movwf	179,c	;volatile
  1469  001572                     
  1470                           ;main.c: 480:     T2CON = 0x01;
  1471  001572  0E01               	movlw	1
  1472  001574  6ECA               	movwf	202,c	;volatile
  1473  001576                     
  1474                           ;main.c: 481:     PIR1bits.TMR2IF = 0;
  1475  001576  929E               	bcf	158,1,c	;volatile
  1476  001578                     
  1477                           ;main.c: 482:     PIE1bits.TMR2IE = 0;
  1478  001578  929D               	bcf	157,1,c	;volatile
  1479  00157A                     
  1480                           ;main.c: 483:     IPR1bits.TMR2IP = 1;
  1481  00157A  829F               	bsf	159,1,c	;volatile
  1482  00157C                     
  1483                           ;main.c: 485:     TRISCbits.RC2 = 0;
  1484  00157C  9494               	bcf	148,2,c	;volatile
  1485  00157E                     
  1486                           ;main.c: 487:     pr_idx = 0;
  1487  00157E  0E00               	movlw	0
  1488  001580  0100               	movlb	0	; () banked
  1489  001582  6FFA               	movwf	(_pr_idx+1)& (0+255),b
  1490  001584  0E00               	movlw	0
  1491  001586  6FF9               	movwf	_pr_idx& (0+255),b
  1492  001588                     
  1493                           ; BSR set to: 0
  1494                           ;main.c: 488:     PR2 = pr_arr[pr_idx] * 2;
  1495  001588  90D8               	bcf	status,0,c
  1496  00158A  35F9               	rlcf	_pr_idx& (0+255),w,b
  1497  00158C  6ED9               	movwf	fsr2l,c
  1498  00158E  35FA               	rlcf	(_pr_idx+1)& (0+255),w,b
  1499  001590  6EDA               	movwf	fsr2h,c
  1500  001592  0E2C               	movlw	low _pr_arr
  1501  001594  26D9               	addwf	fsr2l,f,c
  1502  001596  0E04               	movlw	high _pr_arr
  1503  001598  22DA               	addwfc	fsr2h,f,c
  1504  00159A  50DF               	movf	indf2,w,c
  1505  00159C  6FCB               	movwf	??_main& (0+255),b
  1506  00159E  90D8               	bcf	status,0,c
  1507  0015A0  35CB               	rlcf	??_main& (0+255),w,b
  1508  0015A2  6ECB               	movwf	203,c	;volatile
  1509  0015A4                     
  1510                           ; BSR set to: 0
  1511                           ;main.c: 489:     CCP1CON = 0x0f;
  1512  0015A4  0E0F               	movlw	15
  1513  0015A6  6EBD               	movwf	189,c	;volatile
  1514  0015A8                     
  1515                           ; BSR set to: 0
  1516                           ;main.c: 490:     CCPR1L = pr_arr[pr_idx];
  1517  0015A8  90D8               	bcf	status,0,c
  1518  0015AA  35F9               	rlcf	_pr_idx& (0+255),w,b
  1519  0015AC  6ED9               	movwf	fsr2l,c
  1520  0015AE  35FA               	rlcf	(_pr_idx+1)& (0+255),w,b
  1521  0015B0  6EDA               	movwf	fsr2h,c
  1522  0015B2  0E2C               	movlw	low _pr_arr
  1523  0015B4  26D9               	addwf	fsr2l,f,c
  1524  0015B6  0E04               	movlw	high _pr_arr
  1525  0015B8  22DA               	addwfc	fsr2h,f,c
  1526  0015BA  50DF               	movf	indf2,w,c
  1527  0015BC  6EBE               	movwf	190,c	;volatile
  1528  0015BE                     
  1529                           ; BSR set to: 0
  1530                           ;main.c: 492:     INTCONbits.TMR0IE = 0;
  1531  0015BE  9AF2               	bcf	242,5,c	;volatile
  1532  0015C0                     
  1533                           ; BSR set to: 0
  1534                           ;main.c: 493:     INTCONbits.TMR0IF = 0;
  1535  0015C0  94F2               	bcf	242,2,c	;volatile
  1536  0015C2                     
  1537                           ; BSR set to: 0
  1538                           ;main.c: 494:     INTCON2bits.TMR0IP = 1;
  1539  0015C2  84F1               	bsf	241,2,c	;volatile
  1540  0015C4                     
  1541                           ; BSR set to: 0
  1542                           ;main.c: 495:     T0CON = 0x08;
  1543  0015C4  0E08               	movlw	8
  1544  0015C6  6ED5               	movwf	213,c	;volatile
  1545  0015C8                     
  1546                           ; BSR set to: 0
  1547                           ;main.c: 496:     TMR0 = 49036;
  1548  0015C8  0EBF               	movlw	191
  1549  0015CA  6ED7               	movwf	215,c	;volatile
  1550  0015CC  0E8C               	movlw	140
  1551  0015CE  6ED6               	movwf	214,c	;volatile
  1552  0015D0                     
  1553                           ; BSR set to: 0
  1554                           ;main.c: 499:     srand(time(((void*)0)));
  1555  0015D0  0E00               	movlw	0
  1556  0015D2  6F80               	movwf	time@t& (0+255),b
  1557  0015D4  0E00               	movlw	0
  1558  0015D6  6F81               	movwf	(time@t+1)& (0+255),b
  1559  0015D8  ECDA  F015         	call	_time	;wreg free
  1560  0015DC  C080  F0CB         	movff	?_time,??_main
  1561  0015E0  C081  F0CC         	movff	?_time+1,??_main+1
  1562  0015E4  C082  F0CD         	movff	?_time+2,??_main+2
  1563  0015E8  C083  F0CE         	movff	?_time+3,??_main+3
  1564  0015EC  C084  F0CF         	movff	?_time+4,??_main+4
  1565  0015F0  C085  F0D0         	movff	?_time+5,??_main+5
  1566  0015F4  C086  F0D1         	movff	?_time+6,??_main+6
  1567  0015F8  C087  F0D2         	movff	?_time+7,??_main+7
  1568  0015FC  C0CB  F088         	movff	??_main,srand@s
  1569  001600  C0CD  F089         	movff	??_main+2,srand@s+1
  1570  001604  EC1F  F016         	call	_srand	;wreg free
  1571  001608                     l4204:
  1572                           
  1573                           ;main.c: 501:         start();
  1574  001608  EC67  F010         	call	_start	;wreg free
  1575  00160C                     
  1576                           ;main.c: 502:         running();
  1577  00160C  EC5D  F005         	call	_running	;wreg free
  1578  001610                     l4208:
  1579                           
  1580                           ;main.c: 504:             int temp = 0;
  1581  001610  0E00               	movlw	0
  1582  001612  0101               	movlb	1	; () banked
  1583  001614  6FF7               	movwf	(main@temp+1)& (0+255),b
  1584  001616  0E00               	movlw	0
  1585  001618  6FF6               	movwf	main@temp& (0+255),b
  1586  00161A                     
  1587                           ; BSR set to: 1
  1588                           ;main.c: 505:             int access = 0;
  1589  00161A  0E00               	movlw	0
  1590  00161C  6FF9               	movwf	(main@access+1)& (0+255),b
  1591  00161E  0E00               	movlw	0
  1592  001620  6FF8               	movwf	main@access& (0+255),b
  1593                           
  1594                           ;main.c: 506:             while(temp<20){
  1595  001622  EF8C  F00B         	goto	l4252
  1596  001626                     l4212:
  1597                           
  1598                           ; BSR set to: 1
  1599                           ;main.c: 507:                 time_count = 0;
  1600  001626  0E00               	movlw	0
  1601  001628  0100               	movlb	0	; () banked
  1602  00162A  6FF4               	movwf	(_time_count+1)& (0+255),b
  1603  00162C  0E00               	movlw	0
  1604  00162E  6FF3               	movwf	_time_count& (0+255),b
  1605  001630                     
  1606                           ; BSR set to: 0
  1607                           ;main.c: 508:                 LATCbits.LATC4 = 1;
  1608  001630  888B               	bsf	139,4,c	;volatile
  1609                           
  1610                           ;main.c: 509:                 while(time_count < 3) time_count++;
  1611  001632  EF1D  F00B         	goto	l4218
  1612  001636                     l4216:
  1613                           
  1614                           ; BSR set to: 0
  1615  001636  4BF3               	infsnz	_time_count& (0+255),f,b
  1616  001638  2BF4               	incf	(_time_count+1)& (0+255),f,b
  1617  00163A                     l4218:
  1618                           
  1619                           ; BSR set to: 0
  1620  00163A  BFF4               	btfsc	(_time_count+1)& (0+255),7,b
  1621  00163C  EF29  F00B         	goto	u3651
  1622  001640  51F4               	movf	(_time_count+1)& (0+255),w,b
  1623  001642  E109               	bnz	u3650
  1624  001644  0E03               	movlw	3
  1625  001646  5DF3               	subwf	_time_count& (0+255),w,b
  1626  001648  A0D8               	btfss	status,0,c
  1627  00164A  EF29  F00B         	goto	u3651
  1628  00164E  EF2B  F00B         	goto	u3650
  1629  001652                     u3651:
  1630  001652  EF1B  F00B         	goto	l4216
  1631  001656                     u3650:
  1632  001656                     
  1633                           ; BSR set to: 0
  1634                           ;main.c: 510:                 time_count = 0;
  1635  001656  0E00               	movlw	0
  1636  001658  6FF4               	movwf	(_time_count+1)& (0+255),b
  1637  00165A  0E00               	movlw	0
  1638  00165C  6FF3               	movwf	_time_count& (0+255),b
  1639  00165E                     
  1640                           ; BSR set to: 0
  1641                           ;main.c: 511:                 LATCbits.LATC4 = 0;
  1642  00165E  988B               	bcf	139,4,c	;volatile
  1643                           
  1644                           ;main.c: 512:                 while(time_count < 3) time_count++;
  1645  001660  EF34  F00B         	goto	l4226
  1646  001664                     l4224:
  1647                           
  1648                           ; BSR set to: 0
  1649  001664  4BF3               	infsnz	_time_count& (0+255),f,b
  1650  001666  2BF4               	incf	(_time_count+1)& (0+255),f,b
  1651  001668                     l4226:
  1652                           
  1653                           ; BSR set to: 0
  1654  001668  BFF4               	btfsc	(_time_count+1)& (0+255),7,b
  1655  00166A  EF40  F00B         	goto	u3661
  1656  00166E  51F4               	movf	(_time_count+1)& (0+255),w,b
  1657  001670  E109               	bnz	u3660
  1658  001672  0E03               	movlw	3
  1659  001674  5DF3               	subwf	_time_count& (0+255),w,b
  1660  001676  A0D8               	btfss	status,0,c
  1661  001678  EF40  F00B         	goto	u3661
  1662  00167C  EF42  F00B         	goto	u3660
  1663  001680                     u3661:
  1664  001680  EF32  F00B         	goto	l4224
  1665  001684                     u3660:
  1666  001684                     
  1667                           ; BSR set to: 0
  1668                           ;main.c: 513:                 time_count = 0;
  1669  001684  0E00               	movlw	0
  1670  001686  6FF4               	movwf	(_time_count+1)& (0+255),b
  1671  001688  0E00               	movlw	0
  1672  00168A  6FF3               	movwf	_time_count& (0+255),b
  1673                           
  1674                           ;main.c: 514:                 while(time_count < 15 && PORTCbits.RC5 == 1) {
  1675  00168C  EF66  F00B         	goto	l4242
  1676  001690                     l4230:
  1677                           
  1678                           ; BSR set to: 0
  1679                           ;main.c: 515:                     time_count++;
  1680  001690  4BF3               	infsnz	_time_count& (0+255),f,b
  1681  001692  2BF4               	incf	(_time_count+1)& (0+255),f,b
  1682  001694                     
  1683                           ; BSR set to: 0
  1684                           ;main.c: 516:                     if(PORTCbits.RC5 == 0){
  1685  001694  BA82               	btfsc	130,5,c	;volatile
  1686  001696  EF4F  F00B         	goto	u3671
  1687  00169A  EF51  F00B         	goto	u3670
  1688  00169E                     u3671:
  1689  00169E  EF53  F00B         	goto	l4238
  1690  0016A2                     u3670:
  1691  0016A2  EF7B  F00B         	goto	l4246
  1692  0016A6                     l4238:
  1693                           
  1694                           ; BSR set to: 0
  1695  0016A6  BFF4               	btfsc	(_time_count+1)& (0+255),7,b
  1696  0016A8  EF5F  F00B         	goto	u3681
  1697  0016AC  51F4               	movf	(_time_count+1)& (0+255),w,b
  1698  0016AE  E109               	bnz	u3680
  1699  0016B0  0E0A               	movlw	10
  1700  0016B2  5DF3               	subwf	_time_count& (0+255),w,b
  1701  0016B4  A0D8               	btfss	status,0,c
  1702  0016B6  EF5F  F00B         	goto	u3681
  1703  0016BA  EF61  F00B         	goto	u3680
  1704  0016BE                     u3681:
  1705  0016BE  EF66  F00B         	goto	l4242
  1706  0016C2                     u3680:
  1707  0016C2                     
  1708                           ; BSR set to: 0
  1709                           ;main.c: 520:                         access++;
  1710  0016C2  0101               	movlb	1	; () banked
  1711  0016C4  4BF8               	infsnz	main@access& (0+255),f,b
  1712  0016C6  2BF9               	incf	(main@access+1)& (0+255),f,b
  1713                           
  1714                           ;main.c: 521:                         break;
  1715  0016C8  EF7B  F00B         	goto	l4246
  1716  0016CC                     l4242:
  1717                           
  1718                           ; BSR set to: 0
  1719                           ;main.c: 514:                 while(time_count < 15 && PORTCbits.RC5 == 1) {
  1720  0016CC  BFF4               	btfsc	(_time_count+1)& (0+255),7,b
  1721  0016CE  EF74  F00B         	goto	u3690
  1722  0016D2  51F4               	movf	(_time_count+1)& (0+255),w,b
  1723  0016D4  E107               	bnz	u3691
  1724  0016D6  0E0F               	movlw	15
  1725  0016D8  5DF3               	subwf	_time_count& (0+255),w,b
  1726  0016DA  B0D8               	btfsc	status,0,c
  1727  0016DC  EF72  F00B         	goto	u3691
  1728  0016E0  EF74  F00B         	goto	u3690
  1729  0016E4                     u3691:
  1730  0016E4  EF7B  F00B         	goto	l4246
  1731  0016E8                     u3690:
  1732  0016E8                     
  1733                           ; BSR set to: 0
  1734  0016E8  BA82               	btfsc	130,5,c	;volatile
  1735  0016EA  EF79  F00B         	goto	u3701
  1736  0016EE  EF7B  F00B         	goto	u3700
  1737  0016F2                     u3701:
  1738  0016F2  EF48  F00B         	goto	l4230
  1739  0016F6                     u3700:
  1740  0016F6                     l4246:
  1741                           
  1742                           ;main.c: 524:                 _delay((unsigned long)((100)*(1000000/4000.0)));
  1743  0016F6  0E21               	movlw	33
  1744  0016F8  0100               	movlb	0	; () banked
  1745  0016FA  6FCB               	movwf	??_main& (0+255),b
  1746  0016FC  0E76               	movlw	118
  1747  0016FE                     u3847:
  1748  0016FE  2EE8               	decfsz	wreg,f,c
  1749  001700  D7FE               	bra	u3847
  1750  001702  2FCB               	decfsz	??_main& (0+255),f,b
  1751  001704  D7FC               	bra	u3847
  1752  001706  F000               	nop	
  1753  001708                     
  1754                           ;main.c: 525:                 time_count = 0;
  1755  001708  0E00               	movlw	0
  1756  00170A  0100               	movlb	0	; () banked
  1757  00170C  6FF4               	movwf	(_time_count+1)& (0+255),b
  1758  00170E  0E00               	movlw	0
  1759  001710  6FF3               	movwf	_time_count& (0+255),b
  1760  001712                     
  1761                           ; BSR set to: 0
  1762                           ;main.c: 526:                 temp++;
  1763  001712  0101               	movlb	1	; () banked
  1764  001714  4BF6               	infsnz	main@temp& (0+255),f,b
  1765  001716  2BF7               	incf	(main@temp+1)& (0+255),f,b
  1766  001718                     l4252:
  1767                           
  1768                           ; BSR set to: 1
  1769                           ;main.c: 506:             while(temp<20){
  1770  001718  BFF7               	btfsc	(main@temp+1)& (0+255),7,b
  1771  00171A  EF98  F00B         	goto	u3711
  1772  00171E  51F7               	movf	(main@temp+1)& (0+255),w,b
  1773  001720  E109               	bnz	u3710
  1774  001722  0E14               	movlw	20
  1775  001724  5DF6               	subwf	main@temp& (0+255),w,b
  1776  001726  A0D8               	btfss	status,0,c
  1777  001728  EF98  F00B         	goto	u3711
  1778  00172C  EF9A  F00B         	goto	u3710
  1779  001730                     u3711:
  1780  001730  EF13  F00B         	goto	l4212
  1781  001734                     u3710:
  1782  001734                     
  1783                           ; BSR set to: 1
  1784                           ;main.c: 528:             int nothing = 0;
  1785  001734  0E00               	movlw	0
  1786  001736  6FF5               	movwf	(main@nothing+1)& (0+255),b
  1787  001738  0E00               	movlw	0
  1788  00173A  6FF4               	movwf	main@nothing& (0+255),b
  1789  00173C                     
  1790                           ; BSR set to: 1
  1791                           ;main.c: 530:             if(access >= 1){
  1792  00173C  BFF9               	btfsc	(main@access+1)& (0+255),7,b
  1793  00173E  EFA9  F00B         	goto	u3721
  1794  001742  51F9               	movf	(main@access+1)& (0+255),w,b
  1795  001744  E108               	bnz	u3720
  1796  001746  05F8               	decf	main@access& (0+255),w,b
  1797  001748  A0D8               	btfss	status,0,c
  1798  00174A  EFA9  F00B         	goto	u3721
  1799  00174E  EFAB  F00B         	goto	u3720
  1800  001752                     u3721:
  1801  001752  EFDB  F00B         	goto	l4272
  1802  001756                     u3720:
  1803  001756                     
  1804                           ; BSR set to: 1
  1805                           ;main.c: 531:                 for(int i = 0;i<8;i++){
  1806  001756  0E00               	movlw	0
  1807  001758  6FFB               	movwf	(main@i+1)& (0+255),b
  1808  00175A  0E00               	movlw	0
  1809  00175C  6FFA               	movwf	main@i& (0+255),b
  1810  00175E                     l4264:
  1811                           
  1812                           ; BSR set to: 1
  1813                           ;main.c: 532:                     row[i] = 0;
  1814  00175E  0ED3               	movlw	low _row
  1815  001760  0100               	movlb	0	; () banked
  1816  001762  6FCB               	movwf	??_main& (0+255),b
  1817  001764  0E00               	movlw	high _row
  1818  001766  6FCC               	movwf	(??_main+1)& (0+255),b
  1819  001768  90D8               	bcf	status,0,c
  1820  00176A  0101               	movlb	1	; () banked
  1821  00176C  35FA               	rlcf	main@i& (0+255),w,b
  1822  00176E  6ED9               	movwf	fsr2l,c
  1823  001770  35FB               	rlcf	(main@i+1)& (0+255),w,b
  1824  001772  6EDA               	movwf	fsr2h,c
  1825  001774  90D8               	bcf	status,0,c
  1826  001776  36D9               	rlcf	fsr2l,f,c
  1827  001778  36DA               	rlcf	fsr2h,f,c
  1828  00177A  0100               	movlb	0	; () banked
  1829  00177C  51CB               	movf	??_main& (0+255),w,b
  1830  00177E  26D9               	addwf	fsr2l,f,c
  1831  001780  51CC               	movf	(??_main+1)& (0+255),w,b
  1832  001782  22DA               	addwfc	fsr2h,f,c
  1833  001784  6ADE               	clrf	postinc2,c
  1834  001786  6ADE               	clrf	postinc2,c
  1835  001788  6ADE               	clrf	postinc2,c
  1836  00178A  6ADD               	clrf	postdec2,c
  1837  00178C                     
  1838                           ; BSR set to: 0
  1839                           ;main.c: 533:                     nothing = 1;
  1840  00178C  0E00               	movlw	0
  1841  00178E  0101               	movlb	1	; () banked
  1842  001790  6FF5               	movwf	(main@nothing+1)& (0+255),b
  1843  001792  0E01               	movlw	1
  1844  001794  6FF4               	movwf	main@nothing& (0+255),b
  1845  001796                     
  1846                           ; BSR set to: 1
  1847                           ;main.c: 534:                 }
  1848  001796  4BFA               	infsnz	main@i& (0+255),f,b
  1849  001798  2BFB               	incf	(main@i+1)& (0+255),f,b
  1850  00179A                     
  1851                           ; BSR set to: 1
  1852  00179A  BFFB               	btfsc	(main@i+1)& (0+255),7,b
  1853  00179C  EFD9  F00B         	goto	u3731
  1854  0017A0  51FB               	movf	(main@i+1)& (0+255),w,b
  1855  0017A2  E109               	bnz	u3730
  1856  0017A4  0E08               	movlw	8
  1857  0017A6  5DFA               	subwf	main@i& (0+255),w,b
  1858  0017A8  A0D8               	btfss	status,0,c
  1859  0017AA  EFD9  F00B         	goto	u3731
  1860  0017AE  EFDB  F00B         	goto	u3730
  1861  0017B2                     u3731:
  1862  0017B2  EFAF  F00B         	goto	l4264
  1863  0017B6                     u3730:
  1864  0017B6                     l4272:
  1865                           
  1866                           ; BSR set to: 1
  1867                           ;main.c: 536:             if(nothing == 1){
  1868  0017B6  05F4               	decf	main@nothing& (0+255),w,b
  1869  0017B8  11F5               	iorwf	(main@nothing+1)& (0+255),w,b
  1870  0017BA  A4D8               	btfss	status,2,c
  1871  0017BC  EFE2  F00B         	goto	u3741
  1872  0017C0  EFE4  F00B         	goto	u3740
  1873  0017C4                     u3741:
  1874  0017C4  EF08  F00B         	goto	l4208
  1875  0017C8                     u3740:
  1876  0017C8                     
  1877                           ; BSR set to: 1
  1878                           ;main.c: 537:                 _delay((unsigned long)((1000)*(1000000/4000.0)));
  1879  0017C8  0E02               	movlw	2
  1880  0017CA  0100               	movlb	0	; () banked
  1881  0017CC  6FCC               	movwf	(??_main+1)& (0+255),b
  1882  0017CE  0E45               	movlw	69
  1883  0017D0  6FCB               	movwf	??_main& (0+255),b
  1884  0017D2  0EA9               	movlw	169
  1885  0017D4                     u3857:
  1886  0017D4  2EE8               	decfsz	wreg,f,c
  1887  0017D6  D7FE               	bra	u3857
  1888  0017D8  2FCB               	decfsz	??_main& (0+255),f,b
  1889  0017DA  D7FC               	bra	u3857
  1890  0017DC  2FCC               	decfsz	(??_main+1)& (0+255),f,b
  1891  0017DE  D7FA               	bra	u3857
  1892  0017E0  D000               	nop2	
  1893  0017E2                     l4276:
  1894                           
  1895                           ;main.c: 539:                     temp = 0;
  1896  0017E2  0E00               	movlw	0
  1897  0017E4  0101               	movlb	1	; () banked
  1898  0017E6  6FF7               	movwf	(main@temp+1)& (0+255),b
  1899  0017E8  0E00               	movlw	0
  1900  0017EA  6FF6               	movwf	main@temp& (0+255),b
  1901  0017EC                     
  1902                           ; BSR set to: 1
  1903                           ;main.c: 540:                     access = 0;
  1904  0017EC  0E00               	movlw	0
  1905  0017EE  6FF9               	movwf	(main@access+1)& (0+255),b
  1906  0017F0  0E00               	movlw	0
  1907  0017F2  6FF8               	movwf	main@access& (0+255),b
  1908                           
  1909                           ;main.c: 541:                     while(temp<20){
  1910  0017F4  EF75  F00C         	goto	l4320
  1911  0017F8                     l4280:
  1912                           
  1913                           ; BSR set to: 1
  1914                           ;main.c: 542:                         time_count = 0;
  1915  0017F8  0E00               	movlw	0
  1916  0017FA  0100               	movlb	0	; () banked
  1917  0017FC  6FF4               	movwf	(_time_count+1)& (0+255),b
  1918  0017FE  0E00               	movlw	0
  1919  001800  6FF3               	movwf	_time_count& (0+255),b
  1920  001802                     
  1921                           ; BSR set to: 0
  1922                           ;main.c: 543:                         LATCbits.LATC4 = 1;
  1923  001802  888B               	bsf	139,4,c	;volatile
  1924                           
  1925                           ;main.c: 544:                         while(time_count < 3) time_count++;
  1926  001804  EF06  F00C         	goto	l4286
  1927  001808                     l4284:
  1928                           
  1929                           ; BSR set to: 0
  1930  001808  4BF3               	infsnz	_time_count& (0+255),f,b
  1931  00180A  2BF4               	incf	(_time_count+1)& (0+255),f,b
  1932  00180C                     l4286:
  1933                           
  1934                           ; BSR set to: 0
  1935  00180C  BFF4               	btfsc	(_time_count+1)& (0+255),7,b
  1936  00180E  EF12  F00C         	goto	u3751
  1937  001812  51F4               	movf	(_time_count+1)& (0+255),w,b
  1938  001814  E109               	bnz	u3750
  1939  001816  0E03               	movlw	3
  1940  001818  5DF3               	subwf	_time_count& (0+255),w,b
  1941  00181A  A0D8               	btfss	status,0,c
  1942  00181C  EF12  F00C         	goto	u3751
  1943  001820  EF14  F00C         	goto	u3750
  1944  001824                     u3751:
  1945  001824  EF04  F00C         	goto	l4284
  1946  001828                     u3750:
  1947  001828                     
  1948                           ; BSR set to: 0
  1949                           ;main.c: 545:                         time_count = 0;
  1950  001828  0E00               	movlw	0
  1951  00182A  6FF4               	movwf	(_time_count+1)& (0+255),b
  1952  00182C  0E00               	movlw	0
  1953  00182E  6FF3               	movwf	_time_count& (0+255),b
  1954  001830                     
  1955                           ; BSR set to: 0
  1956                           ;main.c: 546:                         LATCbits.LATC4 = 0;
  1957  001830  988B               	bcf	139,4,c	;volatile
  1958                           
  1959                           ;main.c: 547:                         while(time_count < 3) time_count++;
  1960  001832  EF1D  F00C         	goto	l4294
  1961  001836                     l4292:
  1962                           
  1963                           ; BSR set to: 0
  1964  001836  4BF3               	infsnz	_time_count& (0+255),f,b
  1965  001838  2BF4               	incf	(_time_count+1)& (0+255),f,b
  1966  00183A                     l4294:
  1967                           
  1968                           ; BSR set to: 0
  1969  00183A  BFF4               	btfsc	(_time_count+1)& (0+255),7,b
  1970  00183C  EF29  F00C         	goto	u3761
  1971  001840  51F4               	movf	(_time_count+1)& (0+255),w,b
  1972  001842  E109               	bnz	u3760
  1973  001844  0E03               	movlw	3
  1974  001846  5DF3               	subwf	_time_count& (0+255),w,b
  1975  001848  A0D8               	btfss	status,0,c
  1976  00184A  EF29  F00C         	goto	u3761
  1977  00184E  EF2B  F00C         	goto	u3760
  1978  001852                     u3761:
  1979  001852  EF1B  F00C         	goto	l4292
  1980  001856                     u3760:
  1981  001856                     
  1982                           ; BSR set to: 0
  1983                           ;main.c: 548:                         time_count = 0;
  1984  001856  0E00               	movlw	0
  1985  001858  6FF4               	movwf	(_time_count+1)& (0+255),b
  1986  00185A  0E00               	movlw	0
  1987  00185C  6FF3               	movwf	_time_count& (0+255),b
  1988                           
  1989                           ;main.c: 549:                         while(time_count < 15 && PORTCbits.RC5 == 1) {
  1990  00185E  EF4F  F00C         	goto	l4310
  1991  001862                     l4298:
  1992                           
  1993                           ; BSR set to: 0
  1994                           ;main.c: 550:                             time_count++;
  1995  001862  4BF3               	infsnz	_time_count& (0+255),f,b
  1996  001864  2BF4               	incf	(_time_count+1)& (0+255),f,b
  1997  001866                     
  1998                           ; BSR set to: 0
  1999                           ;main.c: 551:                             if(PORTCbits.RC5 == 0){
  2000  001866  BA82               	btfsc	130,5,c	;volatile
  2001  001868  EF38  F00C         	goto	u3771
  2002  00186C  EF3A  F00C         	goto	u3770
  2003  001870                     u3771:
  2004  001870  EF3C  F00C         	goto	l4306
  2005  001874                     u3770:
  2006  001874  EF64  F00C         	goto	l4314
  2007  001878                     l4306:
  2008                           
  2009                           ; BSR set to: 0
  2010  001878  BFF4               	btfsc	(_time_count+1)& (0+255),7,b
  2011  00187A  EF48  F00C         	goto	u3781
  2012  00187E  51F4               	movf	(_time_count+1)& (0+255),w,b
  2013  001880  E109               	bnz	u3780
  2014  001882  0E0A               	movlw	10
  2015  001884  5DF3               	subwf	_time_count& (0+255),w,b
  2016  001886  A0D8               	btfss	status,0,c
  2017  001888  EF48  F00C         	goto	u3781
  2018  00188C  EF4A  F00C         	goto	u3780
  2019  001890                     u3781:
  2020  001890  EF4F  F00C         	goto	l4310
  2021  001894                     u3780:
  2022  001894                     
  2023                           ; BSR set to: 0
  2024                           ;main.c: 555:                                 access++;
  2025  001894  0101               	movlb	1	; () banked
  2026  001896  4BF8               	infsnz	main@access& (0+255),f,b
  2027  001898  2BF9               	incf	(main@access+1)& (0+255),f,b
  2028                           
  2029                           ;main.c: 556:                                 break;
  2030  00189A  EF64  F00C         	goto	l4314
  2031  00189E                     l4310:
  2032                           
  2033                           ; BSR set to: 0
  2034                           ;main.c: 549:                         while(time_count < 15 && PORTCbits.RC5 == 1) {
  2035  00189E  BFF4               	btfsc	(_time_count+1)& (0+255),7,b
  2036  0018A0  EF5D  F00C         	goto	u3790
  2037  0018A4  51F4               	movf	(_time_count+1)& (0+255),w,b
  2038  0018A6  E107               	bnz	u3791
  2039  0018A8  0E0F               	movlw	15
  2040  0018AA  5DF3               	subwf	_time_count& (0+255),w,b
  2041  0018AC  B0D8               	btfsc	status,0,c
  2042  0018AE  EF5B  F00C         	goto	u3791
  2043  0018B2  EF5D  F00C         	goto	u3790
  2044  0018B6                     u3791:
  2045  0018B6  EF64  F00C         	goto	l4314
  2046  0018BA                     u3790:
  2047  0018BA                     
  2048                           ; BSR set to: 0
  2049  0018BA  BA82               	btfsc	130,5,c	;volatile
  2050  0018BC  EF62  F00C         	goto	u3801
  2051  0018C0  EF64  F00C         	goto	u3800
  2052  0018C4                     u3801:
  2053  0018C4  EF31  F00C         	goto	l4298
  2054  0018C8                     u3800:
  2055  0018C8                     l4314:
  2056                           
  2057                           ;main.c: 559:                         _delay((unsigned long)((100)*(1000000/4000.0)));
  2058  0018C8  0E21               	movlw	33
  2059  0018CA  0100               	movlb	0	; () banked
  2060  0018CC  6FCB               	movwf	??_main& (0+255),b
  2061  0018CE  0E76               	movlw	118
  2062  0018D0                     u3867:
  2063  0018D0  2EE8               	decfsz	wreg,f,c
  2064  0018D2  D7FE               	bra	u3867
  2065  0018D4  2FCB               	decfsz	??_main& (0+255),f,b
  2066  0018D6  D7FC               	bra	u3867
  2067  0018D8  F000               	nop	
  2068  0018DA                     
  2069                           ;main.c: 560:                         time_count = 0;
  2070  0018DA  0E00               	movlw	0
  2071  0018DC  0100               	movlb	0	; () banked
  2072  0018DE  6FF4               	movwf	(_time_count+1)& (0+255),b
  2073  0018E0  0E00               	movlw	0
  2074  0018E2  6FF3               	movwf	_time_count& (0+255),b
  2075  0018E4                     
  2076                           ; BSR set to: 0
  2077                           ;main.c: 561:                         temp++;
  2078  0018E4  0101               	movlb	1	; () banked
  2079  0018E6  4BF6               	infsnz	main@temp& (0+255),f,b
  2080  0018E8  2BF7               	incf	(main@temp+1)& (0+255),f,b
  2081  0018EA                     l4320:
  2082                           
  2083                           ; BSR set to: 1
  2084                           ;main.c: 541:                     while(temp<20){
  2085  0018EA  BFF7               	btfsc	(main@temp+1)& (0+255),7,b
  2086  0018EC  EF81  F00C         	goto	u3811
  2087  0018F0  51F7               	movf	(main@temp+1)& (0+255),w,b
  2088  0018F2  E109               	bnz	u3810
  2089  0018F4  0E14               	movlw	20
  2090  0018F6  5DF6               	subwf	main@temp& (0+255),w,b
  2091  0018F8  A0D8               	btfss	status,0,c
  2092  0018FA  EF81  F00C         	goto	u3811
  2093  0018FE  EF83  F00C         	goto	u3810
  2094  001902                     u3811:
  2095  001902  EFFC  F00B         	goto	l4280
  2096  001906                     u3810:
  2097  001906                     
  2098                           ; BSR set to: 1
  2099                           ;main.c: 563:                     if(access == 0){
  2100  001906  51F8               	movf	main@access& (0+255),w,b
  2101  001908  11F9               	iorwf	(main@access+1)& (0+255),w,b
  2102  00190A  A4D8               	btfss	status,2,c
  2103  00190C  EF8A  F00C         	goto	u3821
  2104  001910  EF8C  F00C         	goto	u3820
  2105  001914                     u3821:
  2106  001914  EFF1  F00B         	goto	l4276
  2107  001918                     u3820:
  2108  001918                     
  2109                           ; BSR set to: 1
  2110                           ;main.c: 564:                         score = 0;
  2111  001918  0E00               	movlw	0
  2112  00191A  0100               	movlb	0	; () banked
  2113  00191C  6FF8               	movwf	(_score+1)& (0+255),b
  2114  00191E  0E00               	movlw	0
  2115  001920  6FF7               	movwf	_score& (0+255),b
  2116                           
  2117                           ;main.c: 565:                         timer3_count = 0;
  2118  001922  0E00               	movlw	0
  2119  001924  6E56               	movwf	(_timer3_count+1)^0,c
  2120  001926  0E00               	movlw	0
  2121  001928  6E55               	movwf	_timer3_count^0,c
  2122                           
  2123                           ;main.c: 566:                         for(int i=0;i<8;i++){
  2124  00192A  0E00               	movlw	0
  2125  00192C  0101               	movlb	1	; () banked
  2126  00192E  6FFD               	movwf	(main@i_1000+1)& (0+255),b
  2127  001930  0E00               	movlw	0
  2128  001932  6FFC               	movwf	main@i_1000& (0+255),b
  2129  001934                     l4330:
  2130                           
  2131                           ; BSR set to: 1
  2132                           ;main.c: 567:                             obj[i] = 0;
  2133  001934  0EC0               	movlw	low _obj
  2134  001936  0100               	movlb	0	; () banked
  2135  001938  6FCB               	movwf	??_main& (0+255),b
  2136  00193A  0E01               	movlw	high _obj
  2137  00193C  6FCC               	movwf	(??_main+1)& (0+255),b
  2138  00193E  90D8               	bcf	status,0,c
  2139  001940  0101               	movlb	1	; () banked
  2140  001942  35FC               	rlcf	main@i_1000& (0+255),w,b
  2141  001944  6ED9               	movwf	fsr2l,c
  2142  001946  35FD               	rlcf	(main@i_1000+1)& (0+255),w,b
  2143  001948  6EDA               	movwf	fsr2h,c
  2144  00194A  90D8               	bcf	status,0,c
  2145  00194C  36D9               	rlcf	fsr2l,f,c
  2146  00194E  36DA               	rlcf	fsr2h,f,c
  2147  001950  0100               	movlb	0	; () banked
  2148  001952  51CB               	movf	??_main& (0+255),w,b
  2149  001954  26D9               	addwf	fsr2l,f,c
  2150  001956  51CC               	movf	(??_main+1)& (0+255),w,b
  2151  001958  22DA               	addwfc	fsr2h,f,c
  2152  00195A  6ADE               	clrf	postinc2,c
  2153  00195C  6ADE               	clrf	postinc2,c
  2154  00195E  6ADE               	clrf	postinc2,c
  2155  001960  6ADD               	clrf	postdec2,c
  2156                           
  2157                           ;main.c: 568:                             row[i] = 0;
  2158  001962  0ED3               	movlw	low _row
  2159  001964  6FCB               	movwf	??_main& (0+255),b
  2160  001966  0E00               	movlw	high _row
  2161  001968  6FCC               	movwf	(??_main+1)& (0+255),b
  2162  00196A  90D8               	bcf	status,0,c
  2163  00196C  0101               	movlb	1	; () banked
  2164  00196E  35FC               	rlcf	main@i_1000& (0+255),w,b
  2165  001970  6ED9               	movwf	fsr2l,c
  2166  001972  35FD               	rlcf	(main@i_1000+1)& (0+255),w,b
  2167  001974  6EDA               	movwf	fsr2h,c
  2168  001976  90D8               	bcf	status,0,c
  2169  001978  36D9               	rlcf	fsr2l,f,c
  2170  00197A  36DA               	rlcf	fsr2h,f,c
  2171  00197C  0100               	movlb	0	; () banked
  2172  00197E  51CB               	movf	??_main& (0+255),w,b
  2173  001980  26D9               	addwf	fsr2l,f,c
  2174  001982  51CC               	movf	(??_main+1)& (0+255),w,b
  2175  001984  22DA               	addwfc	fsr2h,f,c
  2176  001986  6ADE               	clrf	postinc2,c
  2177  001988  6ADE               	clrf	postinc2,c
  2178  00198A  6ADE               	clrf	postinc2,c
  2179  00198C  6ADD               	clrf	postdec2,c
  2180  00198E                     
  2181                           ; BSR set to: 0
  2182                           ;main.c: 569:                         }
  2183  00198E  0101               	movlb	1	; () banked
  2184  001990  4BFC               	infsnz	main@i_1000& (0+255),f,b
  2185  001992  2BFD               	incf	(main@i_1000+1)& (0+255),f,b
  2186  001994                     
  2187                           ; BSR set to: 1
  2188  001994  BFFD               	btfsc	(main@i_1000+1)& (0+255),7,b
  2189  001996  EFD6  F00C         	goto	u3831
  2190  00199A  51FD               	movf	(main@i_1000+1)& (0+255),w,b
  2191  00199C  E109               	bnz	u3830
  2192  00199E  0E08               	movlw	8
  2193  0019A0  5DFC               	subwf	main@i_1000& (0+255),w,b
  2194  0019A2  A0D8               	btfss	status,0,c
  2195  0019A4  EFD6  F00C         	goto	u3831
  2196  0019A8  EFD8  F00C         	goto	u3830
  2197  0019AC                     u3831:
  2198  0019AC  EF9A  F00C         	goto	l4330
  2199  0019B0                     u3830:
  2200  0019B0                     
  2201                           ; BSR set to: 1
  2202                           ;main.c: 570:                         create = 0;
  2203  0019B0  0E00               	movlw	0
  2204  0019B2  6E54               	movwf	(_create+1)^0,c
  2205  0019B4  0E00               	movlw	0
  2206  0019B6  6E53               	movwf	_create^0,c
  2207                           
  2208                           ;main.c: 571:                         running_flag = 0;
  2209  0019B8  0E00               	movlw	0
  2210  0019BA  6E5C               	movwf	(_running_flag+1)^0,c
  2211  0019BC  0E00               	movlw	0
  2212  0019BE  6E5B               	movwf	_running_flag^0,c
  2213                           
  2214                           ;main.c: 572:                         break;
  2215  0019C0  EF04  F00B         	goto	l4204
  2216  0019C4  EF07  F000         	goto	start
  2217  0019C8                     __end_of_main:
  2218                           	opt callstack 0
  2219                           
  2220 ;; *************** function _time *****************
  2221 ;; Defined at:
  2222 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\time.c"
  2223 ;; Parameters:    Size  Location     Type
  2224 ;;  t               2    0[BANK0 ] PTR long long 
  2225 ;;		 -> NULL(0), 
  2226 ;; Auto vars:     Size  Location     Type
  2227 ;;		None
  2228 ;; Return value:  Size  Location     Type
  2229 ;;                  8    0[BANK0 ] long long 
  2230 ;; Registers used:
  2231 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2232 ;; Tracked objects:
  2233 ;;		On entry : 0/0
  2234 ;;		On exit  : 0/0
  2235 ;;		Unchanged: 0/0
  2236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2237 ;;      Params:         0       8       0       0       0       0       0
  2238 ;;      Locals:         0       0       0       0       0       0       0
  2239 ;;      Temps:          0       0       0       0       0       0       0
  2240 ;;      Totals:         0       8       0       0       0       0       0
  2241 ;;Total ram usage:        8 bytes
  2242 ;; Hardware stack levels used:    1
  2243 ;; Hardware stack levels required when called:    3
  2244 ;; This function calls:
  2245 ;;		Nothing
  2246 ;; This function is called by:
  2247 ;;		_main
  2248 ;; This function uses a non-reentrant model
  2249 ;;
  2250                           
  2251                           	psect	text1
  2252  002BB4                     __ptext1:
  2253                           	opt callstack 0
  2254  002BB4                     _time:
  2255                           	opt callstack 27
  2256  002BB4  0100               	movlb	0	; () banked
  2257  002BB6  5180               	movf	time@t& (0+255),w,b
  2258  002BB8  1181               	iorwf	(time@t+1)& (0+255),w,b
  2259  002BBA  B4D8               	btfsc	status,2,c
  2260  002BBC  EFE2  F015         	goto	u3641
  2261  002BC0  EFE4  F015         	goto	u3640
  2262  002BC4                     u3641:
  2263  002BC4  EFF8  F015         	goto	l4136
  2264  002BC8                     u3640:
  2265  002BC8                     
  2266                           ; BSR set to: 0
  2267  002BC8  C080  FFD9         	movff	time@t,fsr2l
  2268  002BCC  C081  FFDA         	movff	time@t+1,fsr2h
  2269  002BD0  0EFF               	movlw	255
  2270  002BD2  6EDE               	movwf	postinc2,c
  2271  002BD4  0EFF               	movlw	255
  2272  002BD6  6EDE               	movwf	postinc2,c
  2273  002BD8  0EFF               	movlw	255
  2274  002BDA  6EDE               	movwf	postinc2,c
  2275  002BDC  0EFF               	movlw	255
  2276  002BDE  6EDE               	movwf	postinc2,c
  2277  002BE0  0EFF               	movlw	255
  2278  002BE2  6EDE               	movwf	postinc2,c
  2279  002BE4  0EFF               	movlw	255
  2280  002BE6  6EDE               	movwf	postinc2,c
  2281  002BE8  0EFF               	movlw	255
  2282  002BEA  6EDE               	movwf	postinc2,c
  2283  002BEC  0EFF               	movlw	255
  2284  002BEE  6EDD               	movwf	postdec2,c
  2285  002BF0                     l4136:
  2286                           
  2287                           ; BSR set to: 0
  2288  002BF0  6980               	setf	?_time& (0+255),b
  2289  002BF2  6981               	setf	(?_time+1)& (0+255),b
  2290  002BF4  6982               	setf	(?_time+2)& (0+255),b
  2291  002BF6  6983               	setf	(?_time+3)& (0+255),b
  2292  002BF8  6984               	setf	(?_time+4)& (0+255),b
  2293  002BFA  6985               	setf	(?_time+5)& (0+255),b
  2294  002BFC  6986               	setf	(?_time+6)& (0+255),b
  2295  002BFE  6987               	setf	(?_time+7)& (0+255),b
  2296  002C00                     
  2297                           ; BSR set to: 0
  2298  002C00  0012               	return		;funcret
  2299  002C02                     __end_of_time:
  2300                           	opt callstack 0
  2301                           
  2302 ;; *************** function _start *****************
  2303 ;; Defined at:
  2304 ;;		line 183 in file "main.c"
  2305 ;; Parameters:    Size  Location     Type
  2306 ;;		None
  2307 ;; Auto vars:     Size  Location     Type
  2308 ;;  i               2   20[BANK0 ] int 
  2309 ;;  i               2   18[BANK0 ] int 
  2310 ;;  sum             2   16[BANK0 ] int 
  2311 ;;  nzero           2   14[BANK0 ] int 
  2312 ;;  temp            2   12[BANK0 ] int 
  2313 ;; Return value:  Size  Location     Type
  2314 ;;                  1    wreg      void 
  2315 ;; Registers used:
  2316 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2317 ;; Tracked objects:
  2318 ;;		On entry : 0/0
  2319 ;;		On exit  : 0/0
  2320 ;;		Unchanged: 0/0
  2321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2322 ;;      Params:         0       0       0       0       0       0       0
  2323 ;;      Locals:         0      10       0       0       0       0       0
  2324 ;;      Temps:          0       4       0       0       0       0       0
  2325 ;;      Totals:         0      14       0       0       0       0       0
  2326 ;;Total ram usage:       14 bytes
  2327 ;; Hardware stack levels used:    1
  2328 ;; Hardware stack levels required when called:    4
  2329 ;; This function calls:
  2330 ;;		___awdiv
  2331 ;;		___awmod
  2332 ;; This function is called by:
  2333 ;;		_main
  2334 ;; This function uses a non-reentrant model
  2335 ;;
  2336                           
  2337                           	psect	text2
  2338  0020CE                     __ptext2:
  2339                           	opt callstack 0
  2340  0020CE                     _start:
  2341                           	opt callstack 26
  2342  0020CE                     
  2343                           ;main.c: 184:     _delay((unsigned long)((2000)*(1000000/4000.0)));
  2344  0020CE  0E03               	movlw	3
  2345  0020D0  0100               	movlb	0	; () banked
  2346  0020D2  6F89               	movwf	(??_start+1)& (0+255),b
  2347  0020D4  0E8A               	movlw	138
  2348  0020D6  6F88               	movwf	??_start& (0+255),b
  2349  0020D8  0E55               	movlw	85
  2350  0020DA                     u3877:
  2351  0020DA  2EE8               	decfsz	wreg,f,c
  2352  0020DC  D7FE               	bra	u3877
  2353  0020DE  2F88               	decfsz	??_start& (0+255),f,b
  2354  0020E0  D7FC               	bra	u3877
  2355  0020E2  2F89               	decfsz	(??_start+1)& (0+255),f,b
  2356  0020E4  D7FA               	bra	u3877
  2357  0020E6  D000               	nop2	
  2358  0020E8                     
  2359                           ;main.c: 187:     for(int i=0;i<8;i++){
  2360  0020E8  0E00               	movlw	0
  2361  0020EA  0100               	movlb	0	; () banked
  2362  0020EC  6F93               	movwf	(start@i+1)& (0+255),b
  2363  0020EE  0E00               	movlw	0
  2364  0020F0  6F92               	movwf	start@i& (0+255),b
  2365  0020F2                     l3786:
  2366                           
  2367                           ; BSR set to: 0
  2368                           ;main.c: 188:         row[i] = hold[i];
  2369  0020F2  0E40               	movlw	low _hold
  2370  0020F4  6F88               	movwf	??_start& (0+255),b
  2371  0020F6  0E02               	movlw	high _hold
  2372  0020F8  6F89               	movwf	(??_start+1)& (0+255),b
  2373  0020FA  90D8               	bcf	status,0,c
  2374  0020FC  3592               	rlcf	start@i& (0+255),w,b
  2375  0020FE  6ED9               	movwf	fsr2l,c
  2376  002100  3593               	rlcf	(start@i+1)& (0+255),w,b
  2377  002102  6EDA               	movwf	fsr2h,c
  2378  002104  90D8               	bcf	status,0,c
  2379  002106  36D9               	rlcf	fsr2l,f,c
  2380  002108  36DA               	rlcf	fsr2h,f,c
  2381  00210A  5188               	movf	??_start& (0+255),w,b
  2382  00210C  26D9               	addwf	fsr2l,f,c
  2383  00210E  5189               	movf	(??_start+1)& (0+255),w,b
  2384  002110  22DA               	addwfc	fsr2h,f,c
  2385  002112  0ED3               	movlw	low _row
  2386  002114  6F8A               	movwf	(??_start+2)& (0+255),b
  2387  002116  0E00               	movlw	high _row
  2388  002118  6F8B               	movwf	(??_start+3)& (0+255),b
  2389  00211A  90D8               	bcf	status,0,c
  2390  00211C  3592               	rlcf	start@i& (0+255),w,b
  2391  00211E  6EE1               	movwf	fsr1l,c
  2392  002120  3593               	rlcf	(start@i+1)& (0+255),w,b
  2393  002122  6EE2               	movwf	fsr1h,c
  2394  002124  90D8               	bcf	status,0,c
  2395  002126  36E1               	rlcf	fsr1l,f,c
  2396  002128  36E2               	rlcf	fsr1h,f,c
  2397  00212A  518A               	movf	(??_start+2)& (0+255),w,b
  2398  00212C  26E1               	addwf	fsr1l,f,c
  2399  00212E  518B               	movf	(??_start+3)& (0+255),w,b
  2400  002130  22E2               	addwfc	fsr1h,f,c
  2401  002132  CFDE FFE6          	movff	postinc2,postinc1
  2402  002136  CFDE FFE6          	movff	postinc2,postinc1
  2403  00213A  CFDE FFE6          	movff	postinc2,postinc1
  2404  00213E  CFDE FFE6          	movff	postinc2,postinc1
  2405  002142                     
  2406                           ; BSR set to: 0
  2407                           ;main.c: 189:     }
  2408  002142  4B92               	infsnz	start@i& (0+255),f,b
  2409  002144  2B93               	incf	(start@i+1)& (0+255),f,b
  2410  002146                     
  2411                           ; BSR set to: 0
  2412  002146  BF93               	btfsc	(start@i+1)& (0+255),7,b
  2413  002148  EFAF  F010         	goto	u3161
  2414  00214C  5193               	movf	(start@i+1)& (0+255),w,b
  2415  00214E  E109               	bnz	u3160
  2416  002150  0E08               	movlw	8
  2417  002152  5D92               	subwf	start@i& (0+255),w,b
  2418  002154  A0D8               	btfss	status,0,c
  2419  002156  EFAF  F010         	goto	u3161
  2420  00215A  EFB1  F010         	goto	u3160
  2421  00215E                     u3161:
  2422  00215E  EF79  F010         	goto	l3786
  2423  002162                     u3160:
  2424  002162                     
  2425                           ; BSR set to: 0
  2426                           ;main.c: 193:         int temp = 0;
  2427  002162  0E00               	movlw	0
  2428  002164  6F8D               	movwf	(start@temp+1)& (0+255),b
  2429  002166  0E00               	movlw	0
  2430  002168  6F8C               	movwf	start@temp& (0+255),b
  2431                           
  2432                           ;main.c: 194:         while(temp<1000){
  2433  00216A  EF2B  F011         	goto	l3828
  2434  00216E                     l3794:
  2435                           
  2436                           ; BSR set to: 0
  2437                           ;main.c: 195:             time_count = 0;
  2438  00216E  0E00               	movlw	0
  2439  002170  6FF4               	movwf	(_time_count+1)& (0+255),b
  2440  002172  0E00               	movlw	0
  2441  002174  6FF3               	movwf	_time_count& (0+255),b
  2442  002176                     
  2443                           ; BSR set to: 0
  2444                           ;main.c: 196:             LATCbits.LATC4 = 1;
  2445  002176  888B               	bsf	139,4,c	;volatile
  2446                           
  2447                           ;main.c: 197:             while(time_count < 3) time_count++;
  2448  002178  EFC0  F010         	goto	l3800
  2449  00217C                     l3798:
  2450                           
  2451                           ; BSR set to: 0
  2452  00217C  4BF3               	infsnz	_time_count& (0+255),f,b
  2453  00217E  2BF4               	incf	(_time_count+1)& (0+255),f,b
  2454  002180                     l3800:
  2455                           
  2456                           ; BSR set to: 0
  2457  002180  BFF4               	btfsc	(_time_count+1)& (0+255),7,b
  2458  002182  EFCC  F010         	goto	u3171
  2459  002186  51F4               	movf	(_time_count+1)& (0+255),w,b
  2460  002188  E109               	bnz	u3170
  2461  00218A  0E03               	movlw	3
  2462  00218C  5DF3               	subwf	_time_count& (0+255),w,b
  2463  00218E  A0D8               	btfss	status,0,c
  2464  002190  EFCC  F010         	goto	u3171
  2465  002194  EFCE  F010         	goto	u3170
  2466  002198                     u3171:
  2467  002198  EFBE  F010         	goto	l3798
  2468  00219C                     u3170:
  2469  00219C                     
  2470                           ; BSR set to: 0
  2471                           ;main.c: 198:             time_count = 0;
  2472  00219C  0E00               	movlw	0
  2473  00219E  6FF4               	movwf	(_time_count+1)& (0+255),b
  2474  0021A0  0E00               	movlw	0
  2475  0021A2  6FF3               	movwf	_time_count& (0+255),b
  2476  0021A4                     
  2477                           ; BSR set to: 0
  2478                           ;main.c: 199:             LATCbits.LATC4 = 0;
  2479  0021A4  988B               	bcf	139,4,c	;volatile
  2480                           
  2481                           ;main.c: 200:             while(time_count < 3) time_count++;
  2482  0021A6  EFD7  F010         	goto	l3808
  2483  0021AA                     l3806:
  2484                           
  2485                           ; BSR set to: 0
  2486  0021AA  4BF3               	infsnz	_time_count& (0+255),f,b
  2487  0021AC  2BF4               	incf	(_time_count+1)& (0+255),f,b
  2488  0021AE                     l3808:
  2489                           
  2490                           ; BSR set to: 0
  2491  0021AE  BFF4               	btfsc	(_time_count+1)& (0+255),7,b
  2492  0021B0  EFE3  F010         	goto	u3181
  2493  0021B4  51F4               	movf	(_time_count+1)& (0+255),w,b
  2494  0021B6  E109               	bnz	u3180
  2495  0021B8  0E03               	movlw	3
  2496  0021BA  5DF3               	subwf	_time_count& (0+255),w,b
  2497  0021BC  A0D8               	btfss	status,0,c
  2498  0021BE  EFE3  F010         	goto	u3181
  2499  0021C2  EFE5  F010         	goto	u3180
  2500  0021C6                     u3181:
  2501  0021C6  EFD5  F010         	goto	l3806
  2502  0021CA                     u3180:
  2503  0021CA                     
  2504                           ; BSR set to: 0
  2505                           ;main.c: 201:             time_count = 0;
  2506  0021CA  0E00               	movlw	0
  2507  0021CC  6FF4               	movwf	(_time_count+1)& (0+255),b
  2508  0021CE  0E00               	movlw	0
  2509  0021D0  6FF3               	movwf	_time_count& (0+255),b
  2510                           
  2511                           ;main.c: 202:             while(time_count < 15 && PORTCbits.RC5 == 1) {
  2512  0021D2  EF10  F011         	goto	l3820
  2513  0021D6                     l3812:
  2514                           
  2515                           ; BSR set to: 0
  2516                           ;main.c: 203:                 time_count++;
  2517  0021D6  4BF3               	infsnz	_time_count& (0+255),f,b
  2518  0021D8  2BF4               	incf	(_time_count+1)& (0+255),f,b
  2519  0021DA                     
  2520                           ; BSR set to: 0
  2521                           ;main.c: 204:                 if(PORTCbits.RC5 == 0){
  2522  0021DA  BA82               	btfsc	130,5,c	;volatile
  2523  0021DC  EFF2  F010         	goto	u3191
  2524  0021E0  EFF4  F010         	goto	u3190
  2525  0021E4                     u3191:
  2526  0021E4  EF10  F011         	goto	l3820
  2527  0021E8                     u3190:
  2528  0021E8                     
  2529                           ; BSR set to: 0
  2530                           ;main.c: 205:                     detect[(det_i)%10] = time_count;
  2531  0021E8  C049  F080         	movff	_det_i,___awmod@dividend
  2532  0021EC  C04A  F081         	movff	_det_i+1,___awmod@dividend+1
  2533  0021F0  0E00               	movlw	0
  2534  0021F2  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  2535  0021F4  0E0A               	movlw	10
  2536  0021F6  6F82               	movwf	___awmod@divisor& (0+255),b
  2537  0021F8  EC5C  F013         	call	___awmod	;wreg free
  2538  0021FC  90D8               	bcf	status,0,c
  2539  0021FE  0100               	movlb	0	; () banked
  2540  002200  3780               	rlcf	?___awmod& (0+255),f,b
  2541  002202  3781               	rlcf	(?___awmod+1)& (0+255),f,b
  2542  002204  0EE0               	movlw	low _detect
  2543  002206  2580               	addwf	?___awmod& (0+255),w,b
  2544  002208  6ED9               	movwf	fsr2l,c
  2545  00220A  0E01               	movlw	high _detect
  2546  00220C  2181               	addwfc	(?___awmod+1)& (0+255),w,b
  2547  00220E  6EDA               	movwf	fsr2h,c
  2548  002210  C0F3  FFDE         	movff	_time_count,postinc2
  2549  002214  C0F4  FFDD         	movff	_time_count+1,postdec2
  2550  002218                     
  2551                           ; BSR set to: 0
  2552                           ;main.c: 206:                     det_i ++;
  2553  002218  4A49               	infsnz	_det_i^0,f,c
  2554  00221A  2A4A               	incf	(_det_i+1)^0,f,c
  2555                           
  2556                           ;main.c: 207:                     break;
  2557  00221C  EF25  F011         	goto	l3824
  2558  002220                     l3820:
  2559                           
  2560                           ; BSR set to: 0
  2561                           ;main.c: 202:             while(time_count < 15 && PORTCbits.RC5 == 1) {
  2562  002220  BFF4               	btfsc	(_time_count+1)& (0+255),7,b
  2563  002222  EF1E  F011         	goto	u3200
  2564  002226  51F4               	movf	(_time_count+1)& (0+255),w,b
  2565  002228  E107               	bnz	u3201
  2566  00222A  0E0F               	movlw	15
  2567  00222C  5DF3               	subwf	_time_count& (0+255),w,b
  2568  00222E  B0D8               	btfsc	status,0,c
  2569  002230  EF1C  F011         	goto	u3201
  2570  002234  EF1E  F011         	goto	u3200
  2571  002238                     u3201:
  2572  002238  EF25  F011         	goto	l3824
  2573  00223C                     u3200:
  2574  00223C                     
  2575                           ; BSR set to: 0
  2576  00223C  BA82               	btfsc	130,5,c	;volatile
  2577  00223E  EF23  F011         	goto	u3211
  2578  002242  EF25  F011         	goto	u3210
  2579  002246                     u3211:
  2580  002246  EFEB  F010         	goto	l3812
  2581  00224A                     u3210:
  2582  00224A                     l3824:
  2583                           
  2584                           ; BSR set to: 0
  2585                           ;main.c: 210:             time_count = 0;
  2586  00224A  0E00               	movlw	0
  2587  00224C  6FF4               	movwf	(_time_count+1)& (0+255),b
  2588  00224E  0E00               	movlw	0
  2589  002250  6FF3               	movwf	_time_count& (0+255),b
  2590  002252                     
  2591                           ; BSR set to: 0
  2592                           ;main.c: 211:             temp++;
  2593  002252  4B8C               	infsnz	start@temp& (0+255),f,b
  2594  002254  2B8D               	incf	(start@temp+1)& (0+255),f,b
  2595  002256                     l3828:
  2596                           
  2597                           ; BSR set to: 0
  2598                           ;main.c: 194:         while(temp<1000){
  2599  002256  BF8D               	btfsc	(start@temp+1)& (0+255),7,b
  2600  002258  EF37  F011         	goto	u3221
  2601  00225C  0EE8               	movlw	232
  2602  00225E  5D8C               	subwf	start@temp& (0+255),w,b
  2603  002260  0E03               	movlw	3
  2604  002262  598D               	subwfb	(start@temp+1)& (0+255),w,b
  2605  002264  A0D8               	btfss	status,0,c
  2606  002266  EF37  F011         	goto	u3221
  2607  00226A  EF39  F011         	goto	u3220
  2608  00226E                     u3221:
  2609  00226E  EFB7  F010         	goto	l3794
  2610  002272                     u3220:
  2611  002272                     
  2612                           ; BSR set to: 0
  2613                           ;main.c: 215:         int sum = 0;
  2614  002272  0E00               	movlw	0
  2615  002274  6F91               	movwf	(start@sum+1)& (0+255),b
  2616  002276  0E00               	movlw	0
  2617  002278  6F90               	movwf	start@sum& (0+255),b
  2618                           
  2619                           ;main.c: 216:         int nzero = 0;
  2620  00227A  0E00               	movlw	0
  2621  00227C  6F8F               	movwf	(start@nzero+1)& (0+255),b
  2622  00227E  0E00               	movlw	0
  2623  002280  6F8E               	movwf	start@nzero& (0+255),b
  2624                           
  2625                           ;main.c: 217:         for(int i=0;i<10;i++){
  2626  002282  0E00               	movlw	0
  2627  002284  6F95               	movwf	(start@i_871+1)& (0+255),b
  2628  002286  0E00               	movlw	0
  2629  002288  6F94               	movwf	start@i_871& (0+255),b
  2630  00228A                     l3836:
  2631                           
  2632                           ; BSR set to: 0
  2633                           ;main.c: 218:             if(detect[i] != 0 && detect[i] >= 3){
  2634  00228A  90D8               	bcf	status,0,c
  2635  00228C  3594               	rlcf	start@i_871& (0+255),w,b
  2636  00228E  6ED9               	movwf	fsr2l,c
  2637  002290  3595               	rlcf	(start@i_871+1)& (0+255),w,b
  2638  002292  6EDA               	movwf	fsr2h,c
  2639  002294  0EE0               	movlw	low _detect
  2640  002296  26D9               	addwf	fsr2l,f,c
  2641  002298  0E01               	movlw	high _detect
  2642  00229A  22DA               	addwfc	fsr2h,f,c
  2643  00229C  50DE               	movf	postinc2,w,c
  2644  00229E  10DE               	iorwf	postinc2,w,c
  2645  0022A0  B4D8               	btfsc	status,2,c
  2646  0022A2  EF55  F011         	goto	u3231
  2647  0022A6  EF57  F011         	goto	u3230
  2648  0022AA                     u3231:
  2649  0022AA  EF85  F011         	goto	l3844
  2650  0022AE                     u3230:
  2651  0022AE                     
  2652                           ; BSR set to: 0
  2653  0022AE  90D8               	bcf	status,0,c
  2654  0022B0  3594               	rlcf	start@i_871& (0+255),w,b
  2655  0022B2  6ED9               	movwf	fsr2l,c
  2656  0022B4  3595               	rlcf	(start@i_871+1)& (0+255),w,b
  2657  0022B6  6EDA               	movwf	fsr2h,c
  2658  0022B8  0EE0               	movlw	low _detect
  2659  0022BA  26D9               	addwf	fsr2l,f,c
  2660  0022BC  0E01               	movlw	high _detect
  2661  0022BE  22DA               	addwfc	fsr2h,f,c
  2662  0022C0  0E01               	movlw	1
  2663  0022C2  BEDB               	btfsc	plusw2,7,c
  2664  0022C4  EF6E  F011         	goto	u3241
  2665  0022C8  0E01               	movlw	1
  2666  0022CA  50DB               	movf	plusw2,w,c
  2667  0022CC  E109               	bnz	u3240
  2668  0022CE  0E03               	movlw	3
  2669  0022D0  5CDE               	subwf	postinc2,w,c
  2670  0022D2  A0D8               	btfss	status,0,c
  2671  0022D4  EF6E  F011         	goto	u3241
  2672  0022D8  EF70  F011         	goto	u3240
  2673  0022DC                     u3241:
  2674  0022DC  EF85  F011         	goto	l3844
  2675  0022E0                     u3240:
  2676  0022E0                     
  2677                           ; BSR set to: 0
  2678                           ;main.c: 219:                 nzero ++;
  2679  0022E0  4B8E               	infsnz	start@nzero& (0+255),f,b
  2680  0022E2  2B8F               	incf	(start@nzero+1)& (0+255),f,b
  2681  0022E4                     
  2682                           ; BSR set to: 0
  2683                           ;main.c: 220:                 sum = sum + detect[i];
  2684  0022E4  90D8               	bcf	status,0,c
  2685  0022E6  3594               	rlcf	start@i_871& (0+255),w,b
  2686  0022E8  6ED9               	movwf	fsr2l,c
  2687  0022EA  3595               	rlcf	(start@i_871+1)& (0+255),w,b
  2688  0022EC  6EDA               	movwf	fsr2h,c
  2689  0022EE  0EE0               	movlw	low _detect
  2690  0022F0  26D9               	addwf	fsr2l,f,c
  2691  0022F2  0E01               	movlw	high _detect
  2692  0022F4  22DA               	addwfc	fsr2h,f,c
  2693  0022F6  CFDE F088          	movff	postinc2,??_start
  2694  0022FA  CFDD F089          	movff	postdec2,??_start+1
  2695  0022FE  5190               	movf	start@sum& (0+255),w,b
  2696  002300  2588               	addwf	??_start& (0+255),w,b
  2697  002302  6F90               	movwf	start@sum& (0+255),b
  2698  002304  5191               	movf	(start@sum+1)& (0+255),w,b
  2699  002306  2189               	addwfc	(??_start+1)& (0+255),w,b
  2700  002308  6F91               	movwf	(start@sum+1)& (0+255),b
  2701  00230A                     l3844:
  2702                           
  2703                           ; BSR set to: 0
  2704                           ;main.c: 222:         }
  2705  00230A  4B94               	infsnz	start@i_871& (0+255),f,b
  2706  00230C  2B95               	incf	(start@i_871+1)& (0+255),f,b
  2707  00230E                     
  2708                           ; BSR set to: 0
  2709  00230E  BF95               	btfsc	(start@i_871+1)& (0+255),7,b
  2710  002310  EF93  F011         	goto	u3251
  2711  002314  5195               	movf	(start@i_871+1)& (0+255),w,b
  2712  002316  E109               	bnz	u3250
  2713  002318  0E0A               	movlw	10
  2714  00231A  5D94               	subwf	start@i_871& (0+255),w,b
  2715  00231C  A0D8               	btfss	status,0,c
  2716  00231E  EF93  F011         	goto	u3251
  2717  002322  EF95  F011         	goto	u3250
  2718  002326                     u3251:
  2719  002326  EF45  F011         	goto	l3836
  2720  00232A                     u3250:
  2721  00232A                     
  2722                           ; BSR set to: 0
  2723                           ;main.c: 223:         dis_avr = sum/nzero;
  2724  00232A  C090  F080         	movff	start@sum,___awdiv@dividend
  2725  00232E  C091  F081         	movff	start@sum+1,___awdiv@dividend+1
  2726  002332  C08E  F082         	movff	start@nzero,___awdiv@divisor
  2727  002336  C08F  F083         	movff	start@nzero+1,___awdiv@divisor+1
  2728  00233A  ECF9  F012         	call	___awdiv	;wreg free
  2729  00233E  C080  F04B         	movff	?___awdiv,_dis_avr
  2730  002342  C081  F04C         	movff	?___awdiv+1,_dis_avr+1
  2731  002346                     
  2732                           ;main.c: 225:     _delay((unsigned long)((1000)*(1000000/4000.0)));
  2733  002346  0E02               	movlw	2
  2734  002348  0100               	movlb	0	; () banked
  2735  00234A  6F89               	movwf	(??_start+1)& (0+255),b
  2736  00234C  0E45               	movlw	69
  2737  00234E  6F88               	movwf	??_start& (0+255),b
  2738  002350  0EA9               	movlw	169
  2739  002352                     u3887:
  2740  002352  2EE8               	decfsz	wreg,f,c
  2741  002354  D7FE               	bra	u3887
  2742  002356  2F88               	decfsz	??_start& (0+255),f,b
  2743  002358  D7FC               	bra	u3887
  2744  00235A  2F89               	decfsz	(??_start+1)& (0+255),f,b
  2745  00235C  D7FA               	bra	u3887
  2746  00235E  D000               	nop2	
  2747  002360  0012               	return		;funcret
  2748  002362                     __end_of_start:
  2749                           	opt callstack 0
  2750                           
  2751 ;; *************** function ___awmod *****************
  2752 ;; Defined at:
  2753 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  2754 ;; Parameters:    Size  Location     Type
  2755 ;;  dividend        2    0[BANK0 ] int 
  2756 ;;  divisor         2    2[BANK0 ] int 
  2757 ;; Auto vars:     Size  Location     Type
  2758 ;;  sign            1    5[BANK0 ] unsigned char 
  2759 ;;  counter         1    4[BANK0 ] unsigned char 
  2760 ;; Return value:  Size  Location     Type
  2761 ;;                  2    0[BANK0 ] int 
  2762 ;; Registers used:
  2763 ;;		wreg, status,2, status,0
  2764 ;; Tracked objects:
  2765 ;;		On entry : 0/0
  2766 ;;		On exit  : 0/0
  2767 ;;		Unchanged: 0/0
  2768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2769 ;;      Params:         0       4       0       0       0       0       0
  2770 ;;      Locals:         0       2       0       0       0       0       0
  2771 ;;      Temps:          0       0       0       0       0       0       0
  2772 ;;      Totals:         0       6       0       0       0       0       0
  2773 ;;Total ram usage:        6 bytes
  2774 ;; Hardware stack levels used:    1
  2775 ;; Hardware stack levels required when called:    3
  2776 ;; This function calls:
  2777 ;;		Nothing
  2778 ;; This function is called by:
  2779 ;;		_start
  2780 ;; This function uses a non-reentrant model
  2781 ;;
  2782                           
  2783                           	psect	text3
  2784  0026B8                     __ptext3:
  2785                           	opt callstack 0
  2786  0026B8                     ___awmod:
  2787                           	opt callstack 26
  2788  0026B8  0E00               	movlw	0
  2789  0026BA  0100               	movlb	0	; () banked
  2790  0026BC  6F85               	movwf	___awmod@sign& (0+255),b
  2791  0026BE                     
  2792                           ; BSR set to: 0
  2793  0026BE  BF81               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  2794  0026C0  EF66  F013         	goto	u3090
  2795  0026C4  EF64  F013         	goto	u3091
  2796  0026C8                     u3091:
  2797  0026C8  EF6C  F013         	goto	l3732
  2798  0026CC                     u3090:
  2799  0026CC                     
  2800                           ; BSR set to: 0
  2801  0026CC  6D80               	negf	___awmod@dividend& (0+255),b
  2802  0026CE  1F81               	comf	(___awmod@dividend+1)& (0+255),f,b
  2803  0026D0  B0D8               	btfsc	status,0,c
  2804  0026D2  2B81               	incf	(___awmod@dividend+1)& (0+255),f,b
  2805  0026D4                     
  2806                           ; BSR set to: 0
  2807  0026D4  0E01               	movlw	1
  2808  0026D6  6F85               	movwf	___awmod@sign& (0+255),b
  2809  0026D8                     l3732:
  2810                           
  2811                           ; BSR set to: 0
  2812  0026D8  BF83               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  2813  0026DA  EF73  F013         	goto	u3100
  2814  0026DE  EF71  F013         	goto	u3101
  2815  0026E2                     u3101:
  2816  0026E2  EF77  F013         	goto	l3736
  2817  0026E6                     u3100:
  2818  0026E6                     
  2819                           ; BSR set to: 0
  2820  0026E6  6D82               	negf	___awmod@divisor& (0+255),b
  2821  0026E8  1F83               	comf	(___awmod@divisor+1)& (0+255),f,b
  2822  0026EA  B0D8               	btfsc	status,0,c
  2823  0026EC  2B83               	incf	(___awmod@divisor+1)& (0+255),f,b
  2824  0026EE                     l3736:
  2825                           
  2826                           ; BSR set to: 0
  2827  0026EE  5182               	movf	___awmod@divisor& (0+255),w,b
  2828  0026F0  1183               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  2829  0026F2  B4D8               	btfsc	status,2,c
  2830  0026F4  EF7E  F013         	goto	u3111
  2831  0026F8  EF80  F013         	goto	u3110
  2832  0026FC                     u3111:
  2833  0026FC  EFA4  F013         	goto	l3752
  2834  002700                     u3110:
  2835  002700                     
  2836                           ; BSR set to: 0
  2837  002700  0E01               	movlw	1
  2838  002702  6F84               	movwf	___awmod@counter& (0+255),b
  2839  002704  EF88  F013         	goto	l3742
  2840  002708                     l3740:
  2841                           
  2842                           ; BSR set to: 0
  2843  002708  90D8               	bcf	status,0,c
  2844  00270A  3782               	rlcf	___awmod@divisor& (0+255),f,b
  2845  00270C  3783               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  2846  00270E  2B84               	incf	___awmod@counter& (0+255),f,b
  2847  002710                     l3742:
  2848                           
  2849                           ; BSR set to: 0
  2850  002710  AF83               	btfss	(___awmod@divisor+1)& (0+255),7,b
  2851  002712  EF8D  F013         	goto	u3121
  2852  002716  EF8F  F013         	goto	u3120
  2853  00271A                     u3121:
  2854  00271A  EF84  F013         	goto	l3740
  2855  00271E                     u3120:
  2856  00271E                     l3744:
  2857                           
  2858                           ; BSR set to: 0
  2859  00271E  5182               	movf	___awmod@divisor& (0+255),w,b
  2860  002720  5D80               	subwf	___awmod@dividend& (0+255),w,b
  2861  002722  5183               	movf	(___awmod@divisor+1)& (0+255),w,b
  2862  002724  5981               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  2863  002726  A0D8               	btfss	status,0,c
  2864  002728  EF98  F013         	goto	u3131
  2865  00272C  EF9A  F013         	goto	u3130
  2866  002730                     u3131:
  2867  002730  EF9E  F013         	goto	l3748
  2868  002734                     u3130:
  2869  002734                     
  2870                           ; BSR set to: 0
  2871  002734  5182               	movf	___awmod@divisor& (0+255),w,b
  2872  002736  5F80               	subwf	___awmod@dividend& (0+255),f,b
  2873  002738  5183               	movf	(___awmod@divisor+1)& (0+255),w,b
  2874  00273A  5B81               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  2875  00273C                     l3748:
  2876                           
  2877                           ; BSR set to: 0
  2878  00273C  90D8               	bcf	status,0,c
  2879  00273E  3383               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  2880  002740  3382               	rrcf	___awmod@divisor& (0+255),f,b
  2881  002742                     
  2882                           ; BSR set to: 0
  2883  002742  2F84               	decfsz	___awmod@counter& (0+255),f,b
  2884  002744  EF8F  F013         	goto	l3744
  2885  002748                     l3752:
  2886                           
  2887                           ; BSR set to: 0
  2888  002748  5185               	movf	___awmod@sign& (0+255),w,b
  2889  00274A  B4D8               	btfsc	status,2,c
  2890  00274C  EFAA  F013         	goto	u3141
  2891  002750  EFAC  F013         	goto	u3140
  2892  002754                     u3141:
  2893  002754  EFB0  F013         	goto	l3756
  2894  002758                     u3140:
  2895  002758                     
  2896                           ; BSR set to: 0
  2897  002758  6D80               	negf	___awmod@dividend& (0+255),b
  2898  00275A  1F81               	comf	(___awmod@dividend+1)& (0+255),f,b
  2899  00275C  B0D8               	btfsc	status,0,c
  2900  00275E  2B81               	incf	(___awmod@dividend+1)& (0+255),f,b
  2901  002760                     l3756:
  2902                           
  2903                           ; BSR set to: 0
  2904  002760  C080  F080         	movff	___awmod@dividend,?___awmod
  2905  002764  C081  F081         	movff	___awmod@dividend+1,?___awmod+1
  2906  002768                     
  2907                           ; BSR set to: 0
  2908  002768  0012               	return		;funcret
  2909  00276A                     __end_of___awmod:
  2910                           	opt callstack 0
  2911                           
  2912 ;; *************** function ___awdiv *****************
  2913 ;; Defined at:
  2914 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  2915 ;; Parameters:    Size  Location     Type
  2916 ;;  dividend        2    0[BANK0 ] int 
  2917 ;;  divisor         2    2[BANK0 ] int 
  2918 ;; Auto vars:     Size  Location     Type
  2919 ;;  quotient        2    6[BANK0 ] int 
  2920 ;;  sign            1    5[BANK0 ] unsigned char 
  2921 ;;  counter         1    4[BANK0 ] unsigned char 
  2922 ;; Return value:  Size  Location     Type
  2923 ;;                  2    0[BANK0 ] int 
  2924 ;; Registers used:
  2925 ;;		wreg, status,2, status,0
  2926 ;; Tracked objects:
  2927 ;;		On entry : 0/0
  2928 ;;		On exit  : 0/0
  2929 ;;		Unchanged: 0/0
  2930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2931 ;;      Params:         0       4       0       0       0       0       0
  2932 ;;      Locals:         0       4       0       0       0       0       0
  2933 ;;      Temps:          0       0       0       0       0       0       0
  2934 ;;      Totals:         0       8       0       0       0       0       0
  2935 ;;Total ram usage:        8 bytes
  2936 ;; Hardware stack levels used:    1
  2937 ;; Hardware stack levels required when called:    3
  2938 ;; This function calls:
  2939 ;;		Nothing
  2940 ;; This function is called by:
  2941 ;;		_start
  2942 ;; This function uses a non-reentrant model
  2943 ;;
  2944                           
  2945                           	psect	text4
  2946  0025F2                     __ptext4:
  2947                           	opt callstack 0
  2948  0025F2                     ___awdiv:
  2949                           	opt callstack 26
  2950  0025F2  0E00               	movlw	0
  2951  0025F4  0100               	movlb	0	; () banked
  2952  0025F6  6F85               	movwf	___awdiv@sign& (0+255),b
  2953  0025F8                     
  2954                           ; BSR set to: 0
  2955  0025F8  BF83               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  2956  0025FA  EF03  F013         	goto	u3030
  2957  0025FE  EF01  F013         	goto	u3031
  2958  002602                     u3031:
  2959  002602  EF09  F013         	goto	l3688
  2960  002606                     u3030:
  2961  002606                     
  2962                           ; BSR set to: 0
  2963  002606  6D82               	negf	___awdiv@divisor& (0+255),b
  2964  002608  1F83               	comf	(___awdiv@divisor+1)& (0+255),f,b
  2965  00260A  B0D8               	btfsc	status,0,c
  2966  00260C  2B83               	incf	(___awdiv@divisor+1)& (0+255),f,b
  2967  00260E                     
  2968                           ; BSR set to: 0
  2969  00260E  0E01               	movlw	1
  2970  002610  6F85               	movwf	___awdiv@sign& (0+255),b
  2971  002612                     l3688:
  2972                           
  2973                           ; BSR set to: 0
  2974  002612  BF81               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  2975  002614  EF10  F013         	goto	u3040
  2976  002618  EF0E  F013         	goto	u3041
  2977  00261C                     u3041:
  2978  00261C  EF16  F013         	goto	l3694
  2979  002620                     u3040:
  2980  002620                     
  2981                           ; BSR set to: 0
  2982  002620  6D80               	negf	___awdiv@dividend& (0+255),b
  2983  002622  1F81               	comf	(___awdiv@dividend+1)& (0+255),f,b
  2984  002624  B0D8               	btfsc	status,0,c
  2985  002626  2B81               	incf	(___awdiv@dividend+1)& (0+255),f,b
  2986  002628                     
  2987                           ; BSR set to: 0
  2988  002628  0E01               	movlw	1
  2989  00262A  1B85               	xorwf	___awdiv@sign& (0+255),f,b
  2990  00262C                     l3694:
  2991                           
  2992                           ; BSR set to: 0
  2993  00262C  0E00               	movlw	0
  2994  00262E  6F87               	movwf	(___awdiv@quotient+1)& (0+255),b
  2995  002630  0E00               	movlw	0
  2996  002632  6F86               	movwf	___awdiv@quotient& (0+255),b
  2997  002634                     
  2998                           ; BSR set to: 0
  2999  002634  5182               	movf	___awdiv@divisor& (0+255),w,b
  3000  002636  1183               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  3001  002638  B4D8               	btfsc	status,2,c
  3002  00263A  EF21  F013         	goto	u3051
  3003  00263E  EF23  F013         	goto	u3050
  3004  002642                     u3051:
  3005  002642  EF4B  F013         	goto	l3716
  3006  002646                     u3050:
  3007  002646                     
  3008                           ; BSR set to: 0
  3009  002646  0E01               	movlw	1
  3010  002648  6F84               	movwf	___awdiv@counter& (0+255),b
  3011  00264A  EF2B  F013         	goto	l3702
  3012  00264E                     l3700:
  3013                           
  3014                           ; BSR set to: 0
  3015  00264E  90D8               	bcf	status,0,c
  3016  002650  3782               	rlcf	___awdiv@divisor& (0+255),f,b
  3017  002652  3783               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  3018  002654  2B84               	incf	___awdiv@counter& (0+255),f,b
  3019  002656                     l3702:
  3020                           
  3021                           ; BSR set to: 0
  3022  002656  AF83               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  3023  002658  EF30  F013         	goto	u3061
  3024  00265C  EF32  F013         	goto	u3060
  3025  002660                     u3061:
  3026  002660  EF27  F013         	goto	l3700
  3027  002664                     u3060:
  3028  002664                     l3704:
  3029                           
  3030                           ; BSR set to: 0
  3031  002664  90D8               	bcf	status,0,c
  3032  002666  3786               	rlcf	___awdiv@quotient& (0+255),f,b
  3033  002668  3787               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  3034  00266A                     
  3035                           ; BSR set to: 0
  3036  00266A  5182               	movf	___awdiv@divisor& (0+255),w,b
  3037  00266C  5D80               	subwf	___awdiv@dividend& (0+255),w,b
  3038  00266E  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3039  002670  5981               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  3040  002672  A0D8               	btfss	status,0,c
  3041  002674  EF3E  F013         	goto	u3071
  3042  002678  EF40  F013         	goto	u3070
  3043  00267C                     u3071:
  3044  00267C  EF45  F013         	goto	l3712
  3045  002680                     u3070:
  3046  002680                     
  3047                           ; BSR set to: 0
  3048  002680  5182               	movf	___awdiv@divisor& (0+255),w,b
  3049  002682  5F80               	subwf	___awdiv@dividend& (0+255),f,b
  3050  002684  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3051  002686  5B81               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  3052  002688                     
  3053                           ; BSR set to: 0
  3054  002688  8186               	bsf	___awdiv@quotient& (0+255),0,b
  3055  00268A                     l3712:
  3056                           
  3057                           ; BSR set to: 0
  3058  00268A  90D8               	bcf	status,0,c
  3059  00268C  3383               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  3060  00268E  3382               	rrcf	___awdiv@divisor& (0+255),f,b
  3061  002690                     
  3062                           ; BSR set to: 0
  3063  002690  2F84               	decfsz	___awdiv@counter& (0+255),f,b
  3064  002692  EF32  F013         	goto	l3704
  3065  002696                     l3716:
  3066                           
  3067                           ; BSR set to: 0
  3068  002696  5185               	movf	___awdiv@sign& (0+255),w,b
  3069  002698  B4D8               	btfsc	status,2,c
  3070  00269A  EF51  F013         	goto	u3081
  3071  00269E  EF53  F013         	goto	u3080
  3072  0026A2                     u3081:
  3073  0026A2  EF57  F013         	goto	l3720
  3074  0026A6                     u3080:
  3075  0026A6                     
  3076                           ; BSR set to: 0
  3077  0026A6  6D86               	negf	___awdiv@quotient& (0+255),b
  3078  0026A8  1F87               	comf	(___awdiv@quotient+1)& (0+255),f,b
  3079  0026AA  B0D8               	btfsc	status,0,c
  3080  0026AC  2B87               	incf	(___awdiv@quotient+1)& (0+255),f,b
  3081  0026AE                     l3720:
  3082                           
  3083                           ; BSR set to: 0
  3084  0026AE  C086  F080         	movff	___awdiv@quotient,?___awdiv
  3085  0026B2  C087  F081         	movff	___awdiv@quotient+1,?___awdiv+1
  3086  0026B6                     
  3087                           ; BSR set to: 0
  3088  0026B6  0012               	return		;funcret
  3089  0026B8                     __end_of___awdiv:
  3090                           	opt callstack 0
  3091                           
  3092 ;; *************** function _srand *****************
  3093 ;; Defined at:
  3094 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\rand.c"
  3095 ;; Parameters:    Size  Location     Type
  3096 ;;  s               2    8[BANK0 ] unsigned int 
  3097 ;; Auto vars:     Size  Location     Type
  3098 ;;		None
  3099 ;; Return value:  Size  Location     Type
  3100 ;;                  1    wreg      void 
  3101 ;; Registers used:
  3102 ;;		wreg, status,2, status,0
  3103 ;; Tracked objects:
  3104 ;;		On entry : 0/0
  3105 ;;		On exit  : 0/0
  3106 ;;		Unchanged: 0/0
  3107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3108 ;;      Params:         0       2       0       0       0       0       0
  3109 ;;      Locals:         0       0       0       0       0       0       0
  3110 ;;      Temps:          0       4       0       0       0       0       0
  3111 ;;      Totals:         0       6       0       0       0       0       0
  3112 ;;Total ram usage:        6 bytes
  3113 ;; Hardware stack levels used:    1
  3114 ;; Hardware stack levels required when called:    3
  3115 ;; This function calls:
  3116 ;;		Nothing
  3117 ;; This function is called by:
  3118 ;;		_main
  3119 ;; This function uses a non-reentrant model
  3120 ;;
  3121                           
  3122                           	psect	text5
  3123  002C3E                     __ptext5:
  3124                           	opt callstack 0
  3125  002C3E                     _srand:
  3126                           	opt callstack 27
  3127  002C3E  0EFF               	movlw	255
  3128  002C40  0100               	movlb	0	; () banked
  3129  002C42  6F8A               	movwf	??_srand& (0+255),b
  3130  002C44  0EFF               	movlw	255
  3131  002C46  6F8B               	movwf	(??_srand+1)& (0+255),b
  3132  002C48  C088  F08C         	movff	srand@s,??_srand+2
  3133  002C4C  C089  F08D         	movff	srand@s+1,??_srand+3
  3134  002C50  518A               	movf	??_srand& (0+255),w,b
  3135  002C52  278C               	addwf	(??_srand+2)& (0+255),f,b
  3136  002C54  518B               	movf	(??_srand+1)& (0+255),w,b
  3137  002C56  238D               	addwfc	(??_srand+3)& (0+255),f,b
  3138  002C58  C08C  F05F         	movff	??_srand+2,_seed
  3139  002C5C  C08D  F060         	movff	??_srand+3,_seed+1
  3140  002C60  6A61               	clrf	(_seed+2)^0,c
  3141  002C62  6A62               	clrf	(_seed+3)^0,c
  3142  002C64  6A63               	clrf	(_seed+4)^0,c
  3143  002C66  6A64               	clrf	(_seed+5)^0,c
  3144  002C68  6A65               	clrf	(_seed+6)^0,c
  3145  002C6A  6A66               	clrf	(_seed+7)^0,c
  3146  002C6C                     
  3147                           ; BSR set to: 0
  3148  002C6C  0012               	return		;funcret
  3149  002C6E                     __end_of_srand:
  3150                           	opt callstack 0
  3151                           
  3152 ;; *************** function _running *****************
  3153 ;; Defined at:
  3154 ;;		line 311 in file "main.c"
  3155 ;; Parameters:    Size  Location     Type
  3156 ;;		None
  3157 ;; Auto vars:     Size  Location     Type
  3158 ;;  i               2   73[BANK0 ] int 
  3159 ;;  i               2   71[BANK0 ] int 
  3160 ;;  i               2   67[BANK0 ] int 
  3161 ;;  i               2   69[BANK0 ] int 
  3162 ;;  digital         4   63[BANK0 ] unsigned long 
  3163 ;; Return value:  Size  Location     Type
  3164 ;;                  1    wreg      void 
  3165 ;; Registers used:
  3166 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3167 ;; Tracked objects:
  3168 ;;		On entry : 0/0
  3169 ;;		On exit  : 0/0
  3170 ;;		Unchanged: 0/0
  3171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3172 ;;      Params:         0       0       0       0       0       0       0
  3173 ;;      Locals:         0      12       0       0       0       0       0
  3174 ;;      Temps:          0      14       0       0       0       0       0
  3175 ;;      Totals:         0      26       0       0       0       0       0
  3176 ;;Total ram usage:       26 bytes
  3177 ;; Hardware stack levels used:    1
  3178 ;; Hardware stack levels required when called:    5
  3179 ;; This function calls:
  3180 ;;		_ADC_Read
  3181 ;;		___lmul
  3182 ;;		_end
  3183 ;; This function is called by:
  3184 ;;		_main
  3185 ;; This function uses a non-reentrant model
  3186 ;;
  3187                           
  3188                           	psect	text6
  3189  000ABA                     __ptext6:
  3190                           	opt callstack 0
  3191  000ABA                     _running:
  3192                           	opt callstack 25
  3193  000ABA                     
  3194                           ;main.c: 312:     running_flag = 1;
  3195  000ABA  0E00               	movlw	0
  3196  000ABC  6E5C               	movwf	(_running_flag+1)^0,c
  3197  000ABE  0E01               	movlw	1
  3198  000AC0  6E5B               	movwf	_running_flag^0,c
  3199                           
  3200                           ;main.c: 313:     for(int i=0;i<8;i++)
  3201  000AC2  0E00               	movlw	0
  3202  000AC4  0100               	movlb	0	; () banked
  3203  000AC6  6FC6               	movwf	(running@i+1)& (0+255),b
  3204  000AC8  0E00               	movlw	0
  3205  000ACA  6FC5               	movwf	running@i& (0+255),b
  3206  000ACC                     l3858:
  3207                           
  3208                           ; BSR set to: 0
  3209                           ;main.c: 314:     {;main.c: 315:         timer3_count = 0;
  3210  000ACC  0E00               	movlw	0
  3211  000ACE  6E56               	movwf	(_timer3_count+1)^0,c
  3212  000AD0  0E00               	movlw	0
  3213  000AD2  6E55               	movwf	_timer3_count^0,c
  3214  000AD4                     
  3215                           ; BSR set to: 0
  3216                           ;main.c: 316:         obj[i] = 0;
  3217  000AD4  0EC0               	movlw	low _obj
  3218  000AD6  6FB1               	movwf	??_running& (0+255),b
  3219  000AD8  0E01               	movlw	high _obj
  3220  000ADA  6FB2               	movwf	(??_running+1)& (0+255),b
  3221  000ADC  90D8               	bcf	status,0,c
  3222  000ADE  35C5               	rlcf	running@i& (0+255),w,b
  3223  000AE0  6ED9               	movwf	fsr2l,c
  3224  000AE2  35C6               	rlcf	(running@i+1)& (0+255),w,b
  3225  000AE4  6EDA               	movwf	fsr2h,c
  3226  000AE6  90D8               	bcf	status,0,c
  3227  000AE8  36D9               	rlcf	fsr2l,f,c
  3228  000AEA  36DA               	rlcf	fsr2h,f,c
  3229  000AEC  51B1               	movf	??_running& (0+255),w,b
  3230  000AEE  26D9               	addwf	fsr2l,f,c
  3231  000AF0  51B2               	movf	(??_running+1)& (0+255),w,b
  3232  000AF2  22DA               	addwfc	fsr2h,f,c
  3233  000AF4  6ADE               	clrf	postinc2,c
  3234  000AF6  6ADE               	clrf	postinc2,c
  3235  000AF8  6ADE               	clrf	postinc2,c
  3236  000AFA  6ADD               	clrf	postdec2,c
  3237  000AFC                     
  3238                           ; BSR set to: 0
  3239                           ;main.c: 317:         row[i] = 0;
  3240  000AFC  0ED3               	movlw	low _row
  3241  000AFE  6FB1               	movwf	??_running& (0+255),b
  3242  000B00  0E00               	movlw	high _row
  3243  000B02  6FB2               	movwf	(??_running+1)& (0+255),b
  3244  000B04  90D8               	bcf	status,0,c
  3245  000B06  35C5               	rlcf	running@i& (0+255),w,b
  3246  000B08  6ED9               	movwf	fsr2l,c
  3247  000B0A  35C6               	rlcf	(running@i+1)& (0+255),w,b
  3248  000B0C  6EDA               	movwf	fsr2h,c
  3249  000B0E  90D8               	bcf	status,0,c
  3250  000B10  36D9               	rlcf	fsr2l,f,c
  3251  000B12  36DA               	rlcf	fsr2h,f,c
  3252  000B14  51B1               	movf	??_running& (0+255),w,b
  3253  000B16  26D9               	addwf	fsr2l,f,c
  3254  000B18  51B2               	movf	(??_running+1)& (0+255),w,b
  3255  000B1A  22DA               	addwfc	fsr2h,f,c
  3256  000B1C  6ADE               	clrf	postinc2,c
  3257  000B1E  6ADE               	clrf	postinc2,c
  3258  000B20  6ADE               	clrf	postinc2,c
  3259  000B22  6ADD               	clrf	postdec2,c
  3260                           
  3261                           ;main.c: 318:         create = 0;
  3262  000B24  0E00               	movlw	0
  3263  000B26  6E54               	movwf	(_create+1)^0,c
  3264  000B28  0E00               	movlw	0
  3265  000B2A  6E53               	movwf	_create^0,c
  3266  000B2C                     
  3267                           ; BSR set to: 0
  3268                           ;main.c: 319:     }
  3269  000B2C  4BC5               	infsnz	running@i& (0+255),f,b
  3270  000B2E  2BC6               	incf	(running@i+1)& (0+255),f,b
  3271  000B30                     
  3272                           ; BSR set to: 0
  3273  000B30  BFC6               	btfsc	(running@i+1)& (0+255),7,b
  3274  000B32  EFA4  F005         	goto	u3261
  3275  000B36  51C6               	movf	(running@i+1)& (0+255),w,b
  3276  000B38  E109               	bnz	u3260
  3277  000B3A  0E08               	movlw	8
  3278  000B3C  5DC5               	subwf	running@i& (0+255),w,b
  3279  000B3E  A0D8               	btfss	status,0,c
  3280  000B40  EFA4  F005         	goto	u3261
  3281  000B44  EFA6  F005         	goto	u3260
  3282  000B48                     u3261:
  3283  000B48  EF66  F005         	goto	l3858
  3284  000B4C                     u3260:
  3285  000B4C                     
  3286                           ; BSR set to: 0
  3287                           ;main.c: 321:     for(int i=0;i<8;i++){
  3288  000B4C  0E00               	movlw	0
  3289  000B4E  6FC4               	movwf	(running@i_890+1)& (0+255),b
  3290  000B50  0E00               	movlw	0
  3291  000B52  6FC3               	movwf	running@i_890& (0+255),b
  3292  000B54                     l3874:
  3293                           
  3294                           ; BSR set to: 0
  3295                           ;main.c: 322:         row[i] = 0;
  3296  000B54  0ED3               	movlw	low _row
  3297  000B56  6FB1               	movwf	??_running& (0+255),b
  3298  000B58  0E00               	movlw	high _row
  3299  000B5A  6FB2               	movwf	(??_running+1)& (0+255),b
  3300  000B5C  90D8               	bcf	status,0,c
  3301  000B5E  35C3               	rlcf	running@i_890& (0+255),w,b
  3302  000B60  6ED9               	movwf	fsr2l,c
  3303  000B62  35C4               	rlcf	(running@i_890+1)& (0+255),w,b
  3304  000B64  6EDA               	movwf	fsr2h,c
  3305  000B66  90D8               	bcf	status,0,c
  3306  000B68  36D9               	rlcf	fsr2l,f,c
  3307  000B6A  36DA               	rlcf	fsr2h,f,c
  3308  000B6C  51B1               	movf	??_running& (0+255),w,b
  3309  000B6E  26D9               	addwf	fsr2l,f,c
  3310  000B70  51B2               	movf	(??_running+1)& (0+255),w,b
  3311  000B72  22DA               	addwfc	fsr2h,f,c
  3312  000B74  6ADE               	clrf	postinc2,c
  3313  000B76  6ADE               	clrf	postinc2,c
  3314  000B78  6ADE               	clrf	postinc2,c
  3315  000B7A  6ADD               	clrf	postdec2,c
  3316  000B7C                     
  3317                           ; BSR set to: 0
  3318                           ;main.c: 323:     }
  3319  000B7C  4BC3               	infsnz	running@i_890& (0+255),f,b
  3320  000B7E  2BC4               	incf	(running@i_890+1)& (0+255),f,b
  3321  000B80                     
  3322                           ; BSR set to: 0
  3323  000B80  BFC4               	btfsc	(running@i_890+1)& (0+255),7,b
  3324  000B82  EFCC  F005         	goto	u3271
  3325  000B86  51C4               	movf	(running@i_890+1)& (0+255),w,b
  3326  000B88  E109               	bnz	u3270
  3327  000B8A  0E08               	movlw	8
  3328  000B8C  5DC3               	subwf	running@i_890& (0+255),w,b
  3329  000B8E  A0D8               	btfss	status,0,c
  3330  000B90  EFCC  F005         	goto	u3271
  3331  000B94  EFCE  F005         	goto	u3270
  3332  000B98                     u3271:
  3333  000B98  EFAA  F005         	goto	l3874
  3334  000B9C                     u3270:
  3335  000B9C                     
  3336                           ; BSR set to: 0
  3337                           ;main.c: 324:     _delay((unsigned long)((1500)*(1000000/4000.0)));
  3338  000B9C  0E02               	movlw	2
  3339  000B9E  0100               	movlb	0	; () banked
  3340  000BA0  6FB2               	movwf	(??_running+1)& (0+255),b
  3341  000BA2  0EE7               	movlw	231
  3342  000BA4  6FB1               	movwf	??_running& (0+255),b
  3343  000BA6  0E00               	movlw	0
  3344  000BA8                     u3897:
  3345  000BA8  2EE8               	decfsz	wreg,f,c
  3346  000BAA  D7FE               	bra	u3897
  3347  000BAC  2FB1               	decfsz	??_running& (0+255),f,b
  3348  000BAE  D7FC               	bra	u3897
  3349  000BB0  2FB2               	decfsz	(??_running+1)& (0+255),f,b
  3350  000BB2  D7FA               	bra	u3897
  3351  000BB4  F000               	nop	
  3352  000BB6                     
  3353                           ;main.c: 327:     for(int i=0;i<8;i++){
  3354  000BB6  0E00               	movlw	0
  3355  000BB8  0100               	movlb	0	; () banked
  3356  000BBA  6FC8               	movwf	(running@i_891+1)& (0+255),b
  3357  000BBC  0E00               	movlw	0
  3358  000BBE  6FC7               	movwf	running@i_891& (0+255),b
  3359  000BC0                     l3888:
  3360                           
  3361                           ; BSR set to: 0
  3362                           ;main.c: 328:         row[i] = go[i];
  3363  000BC0  0E20               	movlw	low _go
  3364  000BC2  6FB1               	movwf	??_running& (0+255),b
  3365  000BC4  0E02               	movlw	high _go
  3366  000BC6  6FB2               	movwf	(??_running+1)& (0+255),b
  3367  000BC8  90D8               	bcf	status,0,c
  3368  000BCA  35C7               	rlcf	running@i_891& (0+255),w,b
  3369  000BCC  6ED9               	movwf	fsr2l,c
  3370  000BCE  35C8               	rlcf	(running@i_891+1)& (0+255),w,b
  3371  000BD0  6EDA               	movwf	fsr2h,c
  3372  000BD2  90D8               	bcf	status,0,c
  3373  000BD4  36D9               	rlcf	fsr2l,f,c
  3374  000BD6  36DA               	rlcf	fsr2h,f,c
  3375  000BD8  51B1               	movf	??_running& (0+255),w,b
  3376  000BDA  26D9               	addwf	fsr2l,f,c
  3377  000BDC  51B2               	movf	(??_running+1)& (0+255),w,b
  3378  000BDE  22DA               	addwfc	fsr2h,f,c
  3379  000BE0  0ED3               	movlw	low _row
  3380  000BE2  6FB3               	movwf	(??_running+2)& (0+255),b
  3381  000BE4  0E00               	movlw	high _row
  3382  000BE6  6FB4               	movwf	(??_running+3)& (0+255),b
  3383  000BE8  90D8               	bcf	status,0,c
  3384  000BEA  35C7               	rlcf	running@i_891& (0+255),w,b
  3385  000BEC  6EE1               	movwf	fsr1l,c
  3386  000BEE  35C8               	rlcf	(running@i_891+1)& (0+255),w,b
  3387  000BF0  6EE2               	movwf	fsr1h,c
  3388  000BF2  90D8               	bcf	status,0,c
  3389  000BF4  36E1               	rlcf	fsr1l,f,c
  3390  000BF6  36E2               	rlcf	fsr1h,f,c
  3391  000BF8  51B3               	movf	(??_running+2)& (0+255),w,b
  3392  000BFA  26E1               	addwf	fsr1l,f,c
  3393  000BFC  51B4               	movf	(??_running+3)& (0+255),w,b
  3394  000BFE  22E2               	addwfc	fsr1h,f,c
  3395  000C00  CFDE FFE6          	movff	postinc2,postinc1
  3396  000C04  CFDE FFE6          	movff	postinc2,postinc1
  3397  000C08  CFDE FFE6          	movff	postinc2,postinc1
  3398  000C0C  CFDE FFE6          	movff	postinc2,postinc1
  3399  000C10                     
  3400                           ; BSR set to: 0
  3401                           ;main.c: 329:     }
  3402  000C10  4BC7               	infsnz	running@i_891& (0+255),f,b
  3403  000C12  2BC8               	incf	(running@i_891+1)& (0+255),f,b
  3404  000C14                     
  3405                           ; BSR set to: 0
  3406  000C14  BFC8               	btfsc	(running@i_891+1)& (0+255),7,b
  3407  000C16  EF16  F006         	goto	u3281
  3408  000C1A  51C8               	movf	(running@i_891+1)& (0+255),w,b
  3409  000C1C  E109               	bnz	u3280
  3410  000C1E  0E08               	movlw	8
  3411  000C20  5DC7               	subwf	running@i_891& (0+255),w,b
  3412  000C22  A0D8               	btfss	status,0,c
  3413  000C24  EF16  F006         	goto	u3281
  3414  000C28  EF18  F006         	goto	u3280
  3415  000C2C                     u3281:
  3416  000C2C  EFE0  F005         	goto	l3888
  3417  000C30                     u3280:
  3418  000C30                     
  3419                           ; BSR set to: 0
  3420                           ;main.c: 330:     _delay((unsigned long)((500)*(1000000/4000.0)));
  3421  000C30  0EA3               	movlw	163
  3422  000C32  0100               	movlb	0	; () banked
  3423  000C34  6FB1               	movwf	??_running& (0+255),b
  3424  000C36  0E55               	movlw	85
  3425  000C38                     u3907:
  3426  000C38  2EE8               	decfsz	wreg,f,c
  3427  000C3A  D7FE               	bra	u3907
  3428  000C3C  2FB1               	decfsz	??_running& (0+255),f,b
  3429  000C3E  D7FC               	bra	u3907
  3430  000C40                     
  3431                           ;main.c: 331:     PIE2bits.TMR3IE = 1;
  3432  000C40  82A0               	bsf	160,1,c	;volatile
  3433  000C42                     
  3434                           ;main.c: 332:     INTCONbits.TMR0IE = 1;
  3435  000C42  8AF2               	bsf	242,5,c	;volatile
  3436  000C44                     
  3437                           ;main.c: 333:     PIE1bits.TMR2IE = 1;
  3438  000C44  829D               	bsf	157,1,c	;volatile
  3439  000C46                     
  3440                           ;main.c: 334:     T0CONbits.TMR0ON = 1;
  3441  000C46  8ED5               	bsf	213,7,c	;volatile
  3442  000C48                     
  3443                           ;main.c: 335:     T2CONbits.TMR2ON = 1;
  3444  000C48  84CA               	bsf	202,2,c	;volatile
  3445  000C4A                     
  3446                           ;main.c: 336:     T3CONbits.TMR3ON = 1;
  3447  000C4A  80B1               	bsf	177,0,c	;volatile
  3448  000C4C                     l3910:
  3449                           
  3450                           ;main.c: 341:         digital = ADC_Read();
  3451  000C4C  EC01  F016         	call	_ADC_Read	;wreg free
  3452  000C50  0100               	movlb	0	; () banked
  3453  000C52  C080  F0BF         	movff	?_ADC_Read,running@digital
  3454  000C56  C081  F0C0         	movff	?_ADC_Read+1,running@digital+1
  3455  000C5A  0E00               	movlw	0
  3456  000C5C  BFC0               	btfsc	(running@digital+1)& (0+255),7,b
  3457  000C5E  0EFF               	movlw	-1
  3458  000C60  6FC1               	movwf	(running@digital+2)& (0+255),b
  3459  000C62  6FC2               	movwf	(running@digital+3)& (0+255),b
  3460  000C64                     
  3461                           ; BSR set to: 0
  3462                           ;main.c: 342:         digital *= 10;
  3463  000C64  C0BF  F080         	movff	running@digital,___lmul@multiplier
  3464  000C68  C0C0  F081         	movff	running@digital+1,___lmul@multiplier+1
  3465  000C6C  C0C1  F082         	movff	running@digital+2,___lmul@multiplier+2
  3466  000C70  C0C2  F083         	movff	running@digital+3,___lmul@multiplier+3
  3467  000C74  0E0A               	movlw	10
  3468  000C76  6F84               	movwf	___lmul@multiplicand& (0+255),b
  3469  000C78  0E00               	movlw	0
  3470  000C7A  6F85               	movwf	(___lmul@multiplicand+1)& (0+255),b
  3471  000C7C  0E00               	movlw	0
  3472  000C7E  6F86               	movwf	(___lmul@multiplicand+2)& (0+255),b
  3473  000C80  0E00               	movlw	0
  3474  000C82  6F87               	movwf	(___lmul@multiplicand+3)& (0+255),b
  3475  000C84  EC3F  F015         	call	___lmul	;wreg free
  3476  000C88  C080  F0BF         	movff	?___lmul,running@digital
  3477  000C8C  C081  F0C0         	movff	?___lmul+1,running@digital+1
  3478  000C90  C082  F0C1         	movff	?___lmul+2,running@digital+2
  3479  000C94  C083  F0C2         	movff	?___lmul+3,running@digital+3
  3480  000C98                     
  3481                           ;main.c: 343:         timer3_val = digital + 47000;
  3482  000C98  0E98               	movlw	152
  3483  000C9A  0100               	movlb	0	; () banked
  3484  000C9C  25BF               	addwf	running@digital& (0+255),w,b
  3485  000C9E  6E67               	movwf	_timer3_val^0,c
  3486  000CA0  0EB7               	movlw	183
  3487  000CA2  21C0               	addwfc	(running@digital+1)& (0+255),w,b
  3488  000CA4  6E68               	movwf	(_timer3_val+1)^0,c
  3489  000CA6  0E00               	movlw	0
  3490  000CA8  21C1               	addwfc	(running@digital+2)& (0+255),w,b
  3491  000CAA  6E69               	movwf	(_timer3_val+2)^0,c
  3492  000CAC  0E00               	movlw	0
  3493  000CAE  21C2               	addwfc	(running@digital+3)& (0+255),w,b
  3494  000CB0  6E6A               	movwf	(_timer3_val+3)^0,c
  3495  000CB2                     
  3496                           ; BSR set to: 0
  3497                           ;main.c: 345:         time_count = 0;
  3498  000CB2  0E00               	movlw	0
  3499  000CB4  6FF4               	movwf	(_time_count+1)& (0+255),b
  3500  000CB6  0E00               	movlw	0
  3501  000CB8  6FF3               	movwf	_time_count& (0+255),b
  3502  000CBA                     
  3503                           ; BSR set to: 0
  3504                           ;main.c: 346:         LATCbits.LATC4 = 1;
  3505  000CBA  888B               	bsf	139,4,c	;volatile
  3506                           
  3507                           ;main.c: 347:         while(time_count < 3) time_count++;
  3508  000CBC  EF62  F006         	goto	l3922
  3509  000CC0                     l3920:
  3510                           
  3511                           ; BSR set to: 0
  3512  000CC0  4BF3               	infsnz	_time_count& (0+255),f,b
  3513  000CC2  2BF4               	incf	(_time_count+1)& (0+255),f,b
  3514  000CC4                     l3922:
  3515                           
  3516                           ; BSR set to: 0
  3517  000CC4  BFF4               	btfsc	(_time_count+1)& (0+255),7,b
  3518  000CC6  EF6E  F006         	goto	u3291
  3519  000CCA  51F4               	movf	(_time_count+1)& (0+255),w,b
  3520  000CCC  E109               	bnz	u3290
  3521  000CCE  0E03               	movlw	3
  3522  000CD0  5DF3               	subwf	_time_count& (0+255),w,b
  3523  000CD2  A0D8               	btfss	status,0,c
  3524  000CD4  EF6E  F006         	goto	u3291
  3525  000CD8  EF70  F006         	goto	u3290
  3526  000CDC                     u3291:
  3527  000CDC  EF60  F006         	goto	l3920
  3528  000CE0                     u3290:
  3529  000CE0                     
  3530                           ; BSR set to: 0
  3531                           ;main.c: 348:         time_count = 0;
  3532  000CE0  0E00               	movlw	0
  3533  000CE2  6FF4               	movwf	(_time_count+1)& (0+255),b
  3534  000CE4  0E00               	movlw	0
  3535  000CE6  6FF3               	movwf	_time_count& (0+255),b
  3536  000CE8                     
  3537                           ; BSR set to: 0
  3538                           ;main.c: 349:         LATCbits.LATC4 = 0;
  3539  000CE8  988B               	bcf	139,4,c	;volatile
  3540                           
  3541                           ;main.c: 350:         while(time_count < 3) time_count++;
  3542  000CEA  EF79  F006         	goto	l3930
  3543  000CEE                     l3928:
  3544                           
  3545                           ; BSR set to: 0
  3546  000CEE  4BF3               	infsnz	_time_count& (0+255),f,b
  3547  000CF0  2BF4               	incf	(_time_count+1)& (0+255),f,b
  3548  000CF2                     l3930:
  3549                           
  3550                           ; BSR set to: 0
  3551  000CF2  BFF4               	btfsc	(_time_count+1)& (0+255),7,b
  3552  000CF4  EF85  F006         	goto	u3301
  3553  000CF8  51F4               	movf	(_time_count+1)& (0+255),w,b
  3554  000CFA  E109               	bnz	u3300
  3555  000CFC  0E03               	movlw	3
  3556  000CFE  5DF3               	subwf	_time_count& (0+255),w,b
  3557  000D00  A0D8               	btfss	status,0,c
  3558  000D02  EF85  F006         	goto	u3301
  3559  000D06  EF87  F006         	goto	u3300
  3560  000D0A                     u3301:
  3561  000D0A  EF77  F006         	goto	l3928
  3562  000D0E                     u3300:
  3563  000D0E                     
  3564                           ; BSR set to: 0
  3565                           ;main.c: 351:         time_count = 0;
  3566  000D0E  0E00               	movlw	0
  3567  000D10  6FF4               	movwf	(_time_count+1)& (0+255),b
  3568  000D12  0E00               	movlw	0
  3569  000D14  6FF3               	movwf	_time_count& (0+255),b
  3570                           
  3571                           ;main.c: 354:         while(time_count < 15 && PORTCbits.RC5 == 1) {
  3572  000D16  EFD5  F006         	goto	l3948
  3573  000D1A                     l3934:
  3574                           
  3575                           ; BSR set to: 0
  3576                           ;main.c: 355:             time_count++;
  3577  000D1A  4BF3               	infsnz	_time_count& (0+255),f,b
  3578  000D1C  2BF4               	incf	(_time_count+1)& (0+255),f,b
  3579  000D1E                     
  3580                           ; BSR set to: 0
  3581                           ;main.c: 356:             if(PORTCbits.RC5 == 0 && time_count <= dis_avr-2){
  3582  000D1E  BA82               	btfsc	130,5,c	;volatile
  3583  000D20  EF94  F006         	goto	u3311
  3584  000D24  EF96  F006         	goto	u3310
  3585  000D28                     u3311:
  3586  000D28  EFB5  F006         	goto	l287
  3587  000D2C                     u3310:
  3588  000D2C                     
  3589                           ; BSR set to: 0
  3590  000D2C  0EFE               	movlw	254
  3591  000D2E  6FB1               	movwf	??_running& (0+255),b
  3592  000D30  0EFF               	movlw	255
  3593  000D32  6FB2               	movwf	(??_running+1)& (0+255),b
  3594  000D34  C04B  F0B3         	movff	_dis_avr,??_running+2
  3595  000D38  C04C  F0B4         	movff	_dis_avr+1,??_running+3
  3596  000D3C  51B1               	movf	??_running& (0+255),w,b
  3597  000D3E  27B3               	addwf	(??_running+2)& (0+255),f,b
  3598  000D40  51B2               	movf	(??_running+1)& (0+255),w,b
  3599  000D42  23B4               	addwfc	(??_running+3)& (0+255),f,b
  3600  000D44  51F3               	movf	_time_count& (0+255),w,b
  3601  000D46  5DB3               	subwf	(??_running+2)& (0+255),w,b
  3602  000D48  51B4               	movf	(??_running+3)& (0+255),w,b
  3603  000D4A  0A80               	xorlw	128
  3604  000D4C  6FB5               	movwf	(??_running+4)& (0+255),b
  3605  000D4E  51F4               	movf	(_time_count+1)& (0+255),w,b
  3606  000D50  0A80               	xorlw	128
  3607  000D52  59B5               	subwfb	(??_running+4)& (0+255),w,b
  3608  000D54  A0D8               	btfss	status,0,c
  3609  000D56  EFAF  F006         	goto	u3321
  3610  000D5A  EFB1  F006         	goto	u3320
  3611  000D5E                     u3321:
  3612  000D5E  EFB5  F006         	goto	l287
  3613  000D62                     u3320:
  3614  000D62                     
  3615                           ; BSR set to: 0
  3616                           ;main.c: 357:                 test1++;
  3617  000D62  4A51               	infsnz	_test1^0,f,c
  3618  000D64  2A52               	incf	(_test1+1)^0,f,c
  3619                           
  3620                           ;main.c: 358:                 break;
  3621  000D66  EFEA  F006         	goto	l3952
  3622  000D6A                     l287:
  3623                           
  3624                           ; BSR set to: 0
  3625  000D6A  BA82               	btfsc	130,5,c	;volatile
  3626  000D6C  EFBA  F006         	goto	u3331
  3627  000D70  EFBC  F006         	goto	u3330
  3628  000D74                     u3331:
  3629  000D74  EFD5  F006         	goto	l3948
  3630  000D78                     u3330:
  3631  000D78                     
  3632                           ; BSR set to: 0
  3633  000D78  0E02               	movlw	2
  3634  000D7A  244B               	addwf	_dis_avr^0,w,c
  3635  000D7C  6FB1               	movwf	??_running& (0+255),b
  3636  000D7E  0E00               	movlw	0
  3637  000D80  204C               	addwfc	(_dis_avr+1)^0,w,c
  3638  000D82  6FB2               	movwf	(??_running+1)& (0+255),b
  3639  000D84  51B1               	movf	??_running& (0+255),w,b
  3640  000D86  5DF3               	subwf	_time_count& (0+255),w,b
  3641  000D88  51F4               	movf	(_time_count+1)& (0+255),w,b
  3642  000D8A  0A80               	xorlw	128
  3643  000D8C  6FB3               	movwf	(??_running+2)& (0+255),b
  3644  000D8E  51B2               	movf	(??_running+1)& (0+255),w,b
  3645  000D90  0A80               	xorlw	128
  3646  000D92  59B3               	subwfb	(??_running+2)& (0+255),w,b
  3647  000D94  A0D8               	btfss	status,0,c
  3648  000D96  EFCF  F006         	goto	u3341
  3649  000D9A  EFD1  F006         	goto	u3340
  3650  000D9E                     u3341:
  3651  000D9E  EFD5  F006         	goto	l3948
  3652  000DA2                     u3340:
  3653  000DA2                     
  3654                           ; BSR set to: 0
  3655                           ;main.c: 361:                 test2++;
  3656  000DA2  4A4F               	infsnz	_test2^0,f,c
  3657  000DA4  2A50               	incf	(_test2+1)^0,f,c
  3658                           
  3659                           ;main.c: 362:                 break;
  3660  000DA6  EFEA  F006         	goto	l3952
  3661  000DAA                     l3948:
  3662                           
  3663                           ; BSR set to: 0
  3664                           ;main.c: 354:         while(time_count < 15 && PORTCbits.RC5 == 1) {
  3665  000DAA  BFF4               	btfsc	(_time_count+1)& (0+255),7,b
  3666  000DAC  EFE3  F006         	goto	u3350
  3667  000DB0  51F4               	movf	(_time_count+1)& (0+255),w,b
  3668  000DB2  E107               	bnz	u3351
  3669  000DB4  0E0F               	movlw	15
  3670  000DB6  5DF3               	subwf	_time_count& (0+255),w,b
  3671  000DB8  B0D8               	btfsc	status,0,c
  3672  000DBA  EFE1  F006         	goto	u3351
  3673  000DBE  EFE3  F006         	goto	u3350
  3674  000DC2                     u3351:
  3675  000DC2  EFEA  F006         	goto	l3952
  3676  000DC6                     u3350:
  3677  000DC6                     
  3678                           ; BSR set to: 0
  3679  000DC6  BA82               	btfsc	130,5,c	;volatile
  3680  000DC8  EFE8  F006         	goto	u3361
  3681  000DCC  EFEA  F006         	goto	u3360
  3682  000DD0                     u3361:
  3683  000DD0  EF8D  F006         	goto	l3934
  3684  000DD4                     u3360:
  3685  000DD4                     l3952:
  3686                           
  3687                           ; BSR set to: 0
  3688                           ;main.c: 365:         time_count = 0;
  3689  000DD4  0E00               	movlw	0
  3690  000DD6  6FF4               	movwf	(_time_count+1)& (0+255),b
  3691  000DD8  0E00               	movlw	0
  3692  000DDA  6FF3               	movwf	_time_count& (0+255),b
  3693  000DDC                     
  3694                           ; BSR set to: 0
  3695                           ;main.c: 368:         if(test1 > 0){
  3696  000DDC  BE52               	btfsc	(_test1+1)^0,7,c
  3697  000DDE  EFF9  F006         	goto	u3371
  3698  000DE2  5052               	movf	(_test1+1)^0,w,c
  3699  000DE4  E108               	bnz	u3370
  3700  000DE6  0451               	decf	_test1^0,w,c
  3701  000DE8  A0D8               	btfss	status,0,c
  3702  000DEA  EFF9  F006         	goto	u3371
  3703  000DEE  EFFB  F006         	goto	u3370
  3704  000DF2                     u3371:
  3705  000DF2  EF10  F007         	goto	l3960
  3706  000DF6                     u3370:
  3707  000DF6                     
  3708                           ; BSR set to: 0
  3709                           ;main.c: 369:             if(fall_flag != 1){
  3710  000DF6  05F5               	decf	_fall_flag& (0+255),w,b
  3711  000DF8  11F6               	iorwf	(_fall_flag+1)& (0+255),w,b
  3712  000DFA  B4D8               	btfsc	status,2,c
  3713  000DFC  EF02  F007         	goto	u3381
  3714  000E00  EF04  F007         	goto	u3380
  3715  000E04                     u3381:
  3716  000E04  EF10  F007         	goto	l3960
  3717  000E08                     u3380:
  3718  000E08                     
  3719                           ; BSR set to: 0
  3720                           ;main.c: 370:                 jump_flag = 1;
  3721  000E08  0E00               	movlw	0
  3722  000E0A  6E5A               	movwf	(_jump_flag+1)^0,c
  3723  000E0C  0E01               	movlw	1
  3724  000E0E  6E59               	movwf	_jump_flag^0,c
  3725                           
  3726                           ;main.c: 371:                 test1=0;
  3727  000E10  0E00               	movlw	0
  3728  000E12  6E52               	movwf	(_test1+1)^0,c
  3729  000E14  0E00               	movlw	0
  3730  000E16  6E51               	movwf	_test1^0,c
  3731                           
  3732                           ;main.c: 372:                 test2=0;
  3733  000E18  0E00               	movlw	0
  3734  000E1A  6E50               	movwf	(_test2+1)^0,c
  3735  000E1C  0E00               	movlw	0
  3736  000E1E  6E4F               	movwf	_test2^0,c
  3737  000E20                     l3960:
  3738                           
  3739                           ; BSR set to: 0
  3740                           ;main.c: 377:         if(test2 > 0){
  3741  000E20  BE50               	btfsc	(_test2+1)^0,7,c
  3742  000E22  EF1B  F007         	goto	u3391
  3743  000E26  5050               	movf	(_test2+1)^0,w,c
  3744  000E28  E108               	bnz	u3390
  3745  000E2A  044F               	decf	_test2^0,w,c
  3746  000E2C  A0D8               	btfss	status,0,c
  3747  000E2E  EF1B  F007         	goto	u3391
  3748  000E32  EF1D  F007         	goto	u3390
  3749  000E36                     u3391:
  3750  000E36  EF32  F007         	goto	l295
  3751  000E3A                     u3390:
  3752  000E3A                     
  3753                           ; BSR set to: 0
  3754                           ;main.c: 378:             if(fall_flag != 1){
  3755  000E3A  05F5               	decf	_fall_flag& (0+255),w,b
  3756  000E3C  11F6               	iorwf	(_fall_flag+1)& (0+255),w,b
  3757  000E3E  B4D8               	btfsc	status,2,c
  3758  000E40  EF24  F007         	goto	u3401
  3759  000E44  EF26  F007         	goto	u3400
  3760  000E48                     u3401:
  3761  000E48  EF32  F007         	goto	l295
  3762  000E4C                     u3400:
  3763  000E4C                     
  3764                           ; BSR set to: 0
  3765                           ;main.c: 379:                 dun_flag = 1;
  3766  000E4C  0E00               	movlw	0
  3767  000E4E  6E58               	movwf	(_dun_flag+1)^0,c
  3768  000E50  0E01               	movlw	1
  3769  000E52  6E57               	movwf	_dun_flag^0,c
  3770                           
  3771                           ;main.c: 380:                 test1=0;
  3772  000E54  0E00               	movlw	0
  3773  000E56  6E52               	movwf	(_test1+1)^0,c
  3774  000E58  0E00               	movlw	0
  3775  000E5A  6E51               	movwf	_test1^0,c
  3776                           
  3777                           ;main.c: 381:                 test2=0;
  3778  000E5C  0E00               	movlw	0
  3779  000E5E  6E50               	movwf	(_test2+1)^0,c
  3780  000E60  0E00               	movlw	0
  3781  000E62  6E4F               	movwf	_test2^0,c
  3782  000E64                     l295:
  3783                           
  3784                           ; BSR set to: 0
  3785                           ;main.c: 386:         int i=0;
  3786  000E64  0E00               	movlw	0
  3787  000E66  6FCA               	movwf	(running@i_934+1)& (0+255),b
  3788  000E68  0E00               	movlw	0
  3789  000E6A  6FC9               	movwf	running@i_934& (0+255),b
  3790  000E6C                     
  3791                           ; BSR set to: 0
  3792                           ;main.c: 387:         if(jump_time == 0){
  3793  000E6C  51FB               	movf	_jump_time& (0+255),w,b
  3794  000E6E  11FC               	iorwf	(_jump_time+1)& (0+255),w,b
  3795  000E70  A4D8               	btfss	status,2,c
  3796  000E72  EF3D  F007         	goto	u3411
  3797  000E76  EF3F  F007         	goto	u3410
  3798  000E7A                     u3411:
  3799  000E7A  EF6D  F007         	goto	l3980
  3800  000E7E                     u3410:
  3801  000E7E                     
  3802                           ; BSR set to: 0
  3803                           ;main.c: 388:             for(i=0;i<8;i++){
  3804  000E7E  0E00               	movlw	0
  3805  000E80  6FCA               	movwf	(running@i_934+1)& (0+255),b
  3806  000E82  0E00               	movlw	0
  3807  000E84  6FC9               	movwf	running@i_934& (0+255),b
  3808  000E86                     l3970:
  3809                           
  3810                           ; BSR set to: 0
  3811  000E86  BFCA               	btfsc	(running@i_934+1)& (0+255),7,b
  3812  000E88  EF4F  F007         	goto	u3421
  3813  000E8C  51CA               	movf	(running@i_934+1)& (0+255),w,b
  3814  000E8E  E109               	bnz	u3420
  3815  000E90  0E08               	movlw	8
  3816  000E92  5DC9               	subwf	running@i_934& (0+255),w,b
  3817  000E94  A0D8               	btfss	status,0,c
  3818  000E96  EF4F  F007         	goto	u3421
  3819  000E9A  EF51  F007         	goto	u3420
  3820  000E9E                     u3421:
  3821  000E9E  EF53  F007         	goto	l3974
  3822  000EA2                     u3420:
  3823  000EA2  EF6D  F007         	goto	l3980
  3824  000EA6                     l3974:
  3825                           
  3826                           ; BSR set to: 0
  3827                           ;main.c: 389:                 din[i]=din_dun[i];
  3828  000EA6  90D8               	bcf	status,0,c
  3829  000EA8  35C9               	rlcf	running@i_934& (0+255),w,b
  3830  000EAA  6ED9               	movwf	fsr2l,c
  3831  000EAC  35CA               	rlcf	(running@i_934+1)& (0+255),w,b
  3832  000EAE  6EDA               	movwf	fsr2h,c
  3833  000EB0  0E80               	movlw	low _din_dun
  3834  000EB2  26D9               	addwf	fsr2l,f,c
  3835  000EB4  0E01               	movlw	high _din_dun
  3836  000EB6  22DA               	addwfc	fsr2h,f,c
  3837  000EB8  90D8               	bcf	status,0,c
  3838  000EBA  35C9               	rlcf	running@i_934& (0+255),w,b
  3839  000EBC  6EE1               	movwf	fsr1l,c
  3840  000EBE  35CA               	rlcf	(running@i_934+1)& (0+255),w,b
  3841  000EC0  6EE2               	movwf	fsr1h,c
  3842  000EC2  0E39               	movlw	low _din
  3843  000EC4  26E1               	addwf	fsr1l,f,c
  3844  000EC6  0E00               	movlw	high _din
  3845  000EC8  22E2               	addwfc	fsr1h,f,c
  3846  000ECA  CFDE FFE6          	movff	postinc2,postinc1
  3847  000ECE  CFDD FFE5          	movff	postdec2,postdec1
  3848  000ED2                     
  3849                           ; BSR set to: 0
  3850                           ;main.c: 390:             }
  3851  000ED2  4BC9               	infsnz	running@i_934& (0+255),f,b
  3852  000ED4  2BCA               	incf	(running@i_934+1)& (0+255),f,b
  3853  000ED6  EF43  F007         	goto	l3970
  3854  000EDA                     l3980:
  3855                           
  3856                           ; BSR set to: 0
  3857                           ;main.c: 392:         if(jump_time == 1){
  3858  000EDA  05FB               	decf	_jump_time& (0+255),w,b
  3859  000EDC  11FC               	iorwf	(_jump_time+1)& (0+255),w,b
  3860  000EDE  A4D8               	btfss	status,2,c
  3861  000EE0  EF74  F007         	goto	u3431
  3862  000EE4  EF76  F007         	goto	u3430
  3863  000EE8                     u3431:
  3864  000EE8  EFA4  F007         	goto	l3994
  3865  000EEC                     u3430:
  3866  000EEC                     
  3867                           ; BSR set to: 0
  3868                           ;main.c: 393:             for(i=0;i<8;i++){
  3869  000EEC  0E00               	movlw	0
  3870  000EEE  6FCA               	movwf	(running@i_934+1)& (0+255),b
  3871  000EF0  0E00               	movlw	0
  3872  000EF2  6FC9               	movwf	running@i_934& (0+255),b
  3873  000EF4                     l3984:
  3874                           
  3875                           ; BSR set to: 0
  3876  000EF4  BFCA               	btfsc	(running@i_934+1)& (0+255),7,b
  3877  000EF6  EF86  F007         	goto	u3441
  3878  000EFA  51CA               	movf	(running@i_934+1)& (0+255),w,b
  3879  000EFC  E109               	bnz	u3440
  3880  000EFE  0E08               	movlw	8
  3881  000F00  5DC9               	subwf	running@i_934& (0+255),w,b
  3882  000F02  A0D8               	btfss	status,0,c
  3883  000F04  EF86  F007         	goto	u3441
  3884  000F08  EF88  F007         	goto	u3440
  3885  000F0C                     u3441:
  3886  000F0C  EF8A  F007         	goto	l3988
  3887  000F10                     u3440:
  3888  000F10  EFCA  F008         	goto	l4056
  3889  000F14                     l3988:
  3890                           
  3891                           ; BSR set to: 0
  3892                           ;main.c: 394:                 din[i]=din_ori[i];
  3893  000F14  90D8               	bcf	status,0,c
  3894  000F16  35C9               	rlcf	running@i_934& (0+255),w,b
  3895  000F18  6ED9               	movwf	fsr2l,c
  3896  000F1A  35CA               	rlcf	(running@i_934+1)& (0+255),w,b
  3897  000F1C  6EDA               	movwf	fsr2h,c
  3898  000F1E  0E90               	movlw	low _din_ori
  3899  000F20  26D9               	addwf	fsr2l,f,c
  3900  000F22  0E01               	movlw	high _din_ori
  3901  000F24  22DA               	addwfc	fsr2h,f,c
  3902  000F26  90D8               	bcf	status,0,c
  3903  000F28  35C9               	rlcf	running@i_934& (0+255),w,b
  3904  000F2A  6EE1               	movwf	fsr1l,c
  3905  000F2C  35CA               	rlcf	(running@i_934+1)& (0+255),w,b
  3906  000F2E  6EE2               	movwf	fsr1h,c
  3907  000F30  0E39               	movlw	low _din
  3908  000F32  26E1               	addwf	fsr1l,f,c
  3909  000F34  0E00               	movlw	high _din
  3910  000F36  22E2               	addwfc	fsr1h,f,c
  3911  000F38  CFDE FFE6          	movff	postinc2,postinc1
  3912  000F3C  CFDD FFE5          	movff	postdec2,postdec1
  3913  000F40                     
  3914                           ; BSR set to: 0
  3915                           ;main.c: 395:             }
  3916  000F40  4BC9               	infsnz	running@i_934& (0+255),f,b
  3917  000F42  2BCA               	incf	(running@i_934+1)& (0+255),f,b
  3918  000F44  EF7A  F007         	goto	l3984
  3919  000F48                     l3994:
  3920                           
  3921                           ; BSR set to: 0
  3922  000F48  0E02               	movlw	2
  3923  000F4A  19FB               	xorwf	_jump_time& (0+255),w,b
  3924  000F4C  11FC               	iorwf	(_jump_time+1)& (0+255),w,b
  3925  000F4E  A4D8               	btfss	status,2,c
  3926  000F50  EFAC  F007         	goto	u3451
  3927  000F54  EFAE  F007         	goto	u3450
  3928  000F58                     u3451:
  3929  000F58  EFE6  F007         	goto	l4008
  3930  000F5C                     u3450:
  3931  000F5C                     
  3932                           ; BSR set to: 0
  3933                           ;main.c: 398:             for(i=0;i<8;i++){
  3934  000F5C  0E00               	movlw	0
  3935  000F5E  6FCA               	movwf	(running@i_934+1)& (0+255),b
  3936  000F60  0E00               	movlw	0
  3937  000F62  6FC9               	movwf	running@i_934& (0+255),b
  3938  000F64                     l3998:
  3939                           
  3940                           ; BSR set to: 0
  3941  000F64  BFCA               	btfsc	(running@i_934+1)& (0+255),7,b
  3942  000F66  EFBE  F007         	goto	u3461
  3943  000F6A  51CA               	movf	(running@i_934+1)& (0+255),w,b
  3944  000F6C  E109               	bnz	u3460
  3945  000F6E  0E08               	movlw	8
  3946  000F70  5DC9               	subwf	running@i_934& (0+255),w,b
  3947  000F72  A0D8               	btfss	status,0,c
  3948  000F74  EFBE  F007         	goto	u3461
  3949  000F78  EFC0  F007         	goto	u3460
  3950  000F7C                     u3461:
  3951  000F7C  EFC2  F007         	goto	l4002
  3952  000F80                     u3460:
  3953  000F80  EFCA  F008         	goto	l4056
  3954  000F84                     l4002:
  3955                           
  3956                           ; BSR set to: 0
  3957                           ;main.c: 399:                 din[i]=din_ori[(i+1)%8];
  3958  000F84  0E01               	movlw	1
  3959  000F86  25C9               	addwf	running@i_934& (0+255),w,b
  3960  000F88  6FB1               	movwf	??_running& (0+255),b
  3961  000F8A  0E00               	movlw	0
  3962  000F8C  21CA               	addwfc	(running@i_934+1)& (0+255),w,b
  3963  000F8E  6FB2               	movwf	(??_running+1)& (0+255),b
  3964  000F90  0E07               	movlw	7
  3965  000F92  17B1               	andwf	??_running& (0+255),f,b
  3966  000F94  0E00               	movlw	0
  3967  000F96  17B2               	andwf	(??_running+1)& (0+255),f,b
  3968  000F98  90D8               	bcf	status,0,c
  3969  000F9A  37B1               	rlcf	??_running& (0+255),f,b
  3970  000F9C  37B2               	rlcf	(??_running+1)& (0+255),f,b
  3971  000F9E  0E90               	movlw	low _din_ori
  3972  000FA0  25B1               	addwf	??_running& (0+255),w,b
  3973  000FA2  6ED9               	movwf	fsr2l,c
  3974  000FA4  0E01               	movlw	high _din_ori
  3975  000FA6  21B2               	addwfc	(??_running+1)& (0+255),w,b
  3976  000FA8  6EDA               	movwf	fsr2h,c
  3977  000FAA  90D8               	bcf	status,0,c
  3978  000FAC  35C9               	rlcf	running@i_934& (0+255),w,b
  3979  000FAE  6EE1               	movwf	fsr1l,c
  3980  000FB0  35CA               	rlcf	(running@i_934+1)& (0+255),w,b
  3981  000FB2  6EE2               	movwf	fsr1h,c
  3982  000FB4  0E39               	movlw	low _din
  3983  000FB6  26E1               	addwf	fsr1l,f,c
  3984  000FB8  0E00               	movlw	high _din
  3985  000FBA  22E2               	addwfc	fsr1h,f,c
  3986  000FBC  CFDE FFE6          	movff	postinc2,postinc1
  3987  000FC0  CFDD FFE5          	movff	postdec2,postdec1
  3988  000FC4                     
  3989                           ; BSR set to: 0
  3990                           ;main.c: 400:             }
  3991  000FC4  4BC9               	infsnz	running@i_934& (0+255),f,b
  3992  000FC6  2BCA               	incf	(running@i_934+1)& (0+255),f,b
  3993  000FC8  EFB2  F007         	goto	l3998
  3994  000FCC                     l4008:
  3995                           
  3996                           ; BSR set to: 0
  3997  000FCC  0E03               	movlw	3
  3998  000FCE  19FB               	xorwf	_jump_time& (0+255),w,b
  3999  000FD0  11FC               	iorwf	(_jump_time+1)& (0+255),w,b
  4000  000FD2  A4D8               	btfss	status,2,c
  4001  000FD4  EFEE  F007         	goto	u3471
  4002  000FD8  EFF0  F007         	goto	u3470
  4003  000FDC                     u3471:
  4004  000FDC  EF28  F008         	goto	l4022
  4005  000FE0                     u3470:
  4006  000FE0                     
  4007                           ; BSR set to: 0
  4008                           ;main.c: 403:             for(i=0;i<8;i++){
  4009  000FE0  0E00               	movlw	0
  4010  000FE2  6FCA               	movwf	(running@i_934+1)& (0+255),b
  4011  000FE4  0E00               	movlw	0
  4012  000FE6  6FC9               	movwf	running@i_934& (0+255),b
  4013  000FE8                     l4012:
  4014                           
  4015                           ; BSR set to: 0
  4016  000FE8  BFCA               	btfsc	(running@i_934+1)& (0+255),7,b
  4017  000FEA  EF00  F008         	goto	u3481
  4018  000FEE  51CA               	movf	(running@i_934+1)& (0+255),w,b
  4019  000FF0  E109               	bnz	u3480
  4020  000FF2  0E08               	movlw	8
  4021  000FF4  5DC9               	subwf	running@i_934& (0+255),w,b
  4022  000FF6  A0D8               	btfss	status,0,c
  4023  000FF8  EF00  F008         	goto	u3481
  4024  000FFC  EF02  F008         	goto	u3480
  4025  001000                     u3481:
  4026  001000  EF04  F008         	goto	l4016
  4027  001004                     u3480:
  4028  001004  EFCA  F008         	goto	l4056
  4029  001008                     l4016:
  4030                           
  4031                           ; BSR set to: 0
  4032                           ;main.c: 404:                 din[i]=din_ori[(i+2)%8];
  4033  001008  0E02               	movlw	2
  4034  00100A  25C9               	addwf	running@i_934& (0+255),w,b
  4035  00100C  6FB1               	movwf	??_running& (0+255),b
  4036  00100E  0E00               	movlw	0
  4037  001010  21CA               	addwfc	(running@i_934+1)& (0+255),w,b
  4038  001012  6FB2               	movwf	(??_running+1)& (0+255),b
  4039  001014  0E07               	movlw	7
  4040  001016  17B1               	andwf	??_running& (0+255),f,b
  4041  001018  0E00               	movlw	0
  4042  00101A  17B2               	andwf	(??_running+1)& (0+255),f,b
  4043  00101C  90D8               	bcf	status,0,c
  4044  00101E  37B1               	rlcf	??_running& (0+255),f,b
  4045  001020  37B2               	rlcf	(??_running+1)& (0+255),f,b
  4046  001022  0E90               	movlw	low _din_ori
  4047  001024  25B1               	addwf	??_running& (0+255),w,b
  4048  001026  6ED9               	movwf	fsr2l,c
  4049  001028  0E01               	movlw	high _din_ori
  4050  00102A  21B2               	addwfc	(??_running+1)& (0+255),w,b
  4051  00102C  6EDA               	movwf	fsr2h,c
  4052  00102E  90D8               	bcf	status,0,c
  4053  001030  35C9               	rlcf	running@i_934& (0+255),w,b
  4054  001032  6EE1               	movwf	fsr1l,c
  4055  001034  35CA               	rlcf	(running@i_934+1)& (0+255),w,b
  4056  001036  6EE2               	movwf	fsr1h,c
  4057  001038  0E39               	movlw	low _din
  4058  00103A  26E1               	addwf	fsr1l,f,c
  4059  00103C  0E00               	movlw	high _din
  4060  00103E  22E2               	addwfc	fsr1h,f,c
  4061  001040  CFDE FFE6          	movff	postinc2,postinc1
  4062  001044  CFDD FFE5          	movff	postdec2,postdec1
  4063  001048                     
  4064                           ; BSR set to: 0
  4065                           ;main.c: 405:             }
  4066  001048  4BC9               	infsnz	running@i_934& (0+255),f,b
  4067  00104A  2BCA               	incf	(running@i_934+1)& (0+255),f,b
  4068  00104C  EFF4  F007         	goto	l4012
  4069  001050                     l4022:
  4070                           
  4071                           ; BSR set to: 0
  4072  001050  0E04               	movlw	4
  4073  001052  19FB               	xorwf	_jump_time& (0+255),w,b
  4074  001054  11FC               	iorwf	(_jump_time+1)& (0+255),w,b
  4075  001056  B4D8               	btfsc	status,2,c
  4076  001058  EF30  F008         	goto	u3491
  4077  00105C  EF32  F008         	goto	u3490
  4078  001060                     u3491:
  4079  001060  EF3C  F008         	goto	l4026
  4080  001064                     u3490:
  4081  001064                     
  4082                           ; BSR set to: 0
  4083  001064  0E05               	movlw	5
  4084  001066  19FB               	xorwf	_jump_time& (0+255),w,b
  4085  001068  11FC               	iorwf	(_jump_time+1)& (0+255),w,b
  4086  00106A  A4D8               	btfss	status,2,c
  4087  00106C  EF3A  F008         	goto	u3501
  4088  001070  EF3C  F008         	goto	u3500
  4089  001074                     u3501:
  4090  001074  EF74  F008         	goto	l4038
  4091  001078                     u3500:
  4092  001078                     l4026:
  4093                           
  4094                           ; BSR set to: 0
  4095                           ;main.c: 408:             for(i=0;i<8;i++){
  4096  001078  0E00               	movlw	0
  4097  00107A  6FCA               	movwf	(running@i_934+1)& (0+255),b
  4098  00107C  0E00               	movlw	0
  4099  00107E  6FC9               	movwf	running@i_934& (0+255),b
  4100  001080                     l4028:
  4101                           
  4102                           ; BSR set to: 0
  4103  001080  BFCA               	btfsc	(running@i_934+1)& (0+255),7,b
  4104  001082  EF4C  F008         	goto	u3511
  4105  001086  51CA               	movf	(running@i_934+1)& (0+255),w,b
  4106  001088  E109               	bnz	u3510
  4107  00108A  0E08               	movlw	8
  4108  00108C  5DC9               	subwf	running@i_934& (0+255),w,b
  4109  00108E  A0D8               	btfss	status,0,c
  4110  001090  EF4C  F008         	goto	u3511
  4111  001094  EF4E  F008         	goto	u3510
  4112  001098                     u3511:
  4113  001098  EF50  F008         	goto	l4032
  4114  00109C                     u3510:
  4115  00109C  EFCA  F008         	goto	l4056
  4116  0010A0                     l4032:
  4117                           
  4118                           ; BSR set to: 0
  4119                           ;main.c: 409:                 din[i]=din_ori[(i+3)%8];
  4120  0010A0  0E03               	movlw	3
  4121  0010A2  25C9               	addwf	running@i_934& (0+255),w,b
  4122  0010A4  6FB1               	movwf	??_running& (0+255),b
  4123  0010A6  0E00               	movlw	0
  4124  0010A8  21CA               	addwfc	(running@i_934+1)& (0+255),w,b
  4125  0010AA  6FB2               	movwf	(??_running+1)& (0+255),b
  4126  0010AC  0E07               	movlw	7
  4127  0010AE  17B1               	andwf	??_running& (0+255),f,b
  4128  0010B0  0E00               	movlw	0
  4129  0010B2  17B2               	andwf	(??_running+1)& (0+255),f,b
  4130  0010B4  90D8               	bcf	status,0,c
  4131  0010B6  37B1               	rlcf	??_running& (0+255),f,b
  4132  0010B8  37B2               	rlcf	(??_running+1)& (0+255),f,b
  4133  0010BA  0E90               	movlw	low _din_ori
  4134  0010BC  25B1               	addwf	??_running& (0+255),w,b
  4135  0010BE  6ED9               	movwf	fsr2l,c
  4136  0010C0  0E01               	movlw	high _din_ori
  4137  0010C2  21B2               	addwfc	(??_running+1)& (0+255),w,b
  4138  0010C4  6EDA               	movwf	fsr2h,c
  4139  0010C6  90D8               	bcf	status,0,c
  4140  0010C8  35C9               	rlcf	running@i_934& (0+255),w,b
  4141  0010CA  6EE1               	movwf	fsr1l,c
  4142  0010CC  35CA               	rlcf	(running@i_934+1)& (0+255),w,b
  4143  0010CE  6EE2               	movwf	fsr1h,c
  4144  0010D0  0E39               	movlw	low _din
  4145  0010D2  26E1               	addwf	fsr1l,f,c
  4146  0010D4  0E00               	movlw	high _din
  4147  0010D6  22E2               	addwfc	fsr1h,f,c
  4148  0010D8  CFDE FFE6          	movff	postinc2,postinc1
  4149  0010DC  CFDD FFE5          	movff	postdec2,postdec1
  4150  0010E0                     
  4151                           ; BSR set to: 0
  4152                           ;main.c: 410:             }
  4153  0010E0  4BC9               	infsnz	running@i_934& (0+255),f,b
  4154  0010E2  2BCA               	incf	(running@i_934+1)& (0+255),f,b
  4155  0010E4  EF40  F008         	goto	l4028
  4156  0010E8                     l4038:
  4157                           
  4158                           ; BSR set to: 0
  4159  0010E8  0E08               	movlw	8
  4160  0010EA  19FB               	xorwf	_jump_time& (0+255),w,b
  4161  0010EC  11FC               	iorwf	(_jump_time+1)& (0+255),w,b
  4162  0010EE  B4D8               	btfsc	status,2,c
  4163  0010F0  EF7C  F008         	goto	u3521
  4164  0010F4  EF7E  F008         	goto	u3520
  4165  0010F8                     u3521:
  4166  0010F8  EF92  F008         	goto	l4044
  4167  0010FC                     u3520:
  4168  0010FC                     
  4169                           ; BSR set to: 0
  4170  0010FC  0E07               	movlw	7
  4171  0010FE  19FB               	xorwf	_jump_time& (0+255),w,b
  4172  001100  11FC               	iorwf	(_jump_time+1)& (0+255),w,b
  4173  001102  B4D8               	btfsc	status,2,c
  4174  001104  EF86  F008         	goto	u3531
  4175  001108  EF88  F008         	goto	u3530
  4176  00110C                     u3531:
  4177  00110C  EF92  F008         	goto	l4044
  4178  001110                     u3530:
  4179  001110                     
  4180                           ; BSR set to: 0
  4181  001110  0E06               	movlw	6
  4182  001112  19FB               	xorwf	_jump_time& (0+255),w,b
  4183  001114  11FC               	iorwf	(_jump_time+1)& (0+255),w,b
  4184  001116  A4D8               	btfss	status,2,c
  4185  001118  EF90  F008         	goto	u3541
  4186  00111C  EF92  F008         	goto	u3540
  4187  001120                     u3541:
  4188  001120  EFCA  F008         	goto	l4056
  4189  001124                     u3540:
  4190  001124                     l4044:
  4191                           
  4192                           ; BSR set to: 0
  4193                           ;main.c: 413:             for(i=0;i<8;i++){
  4194  001124  0E00               	movlw	0
  4195  001126  6FCA               	movwf	(running@i_934+1)& (0+255),b
  4196  001128  0E00               	movlw	0
  4197  00112A  6FC9               	movwf	running@i_934& (0+255),b
  4198  00112C                     l4046:
  4199                           
  4200                           ; BSR set to: 0
  4201  00112C  BFCA               	btfsc	(running@i_934+1)& (0+255),7,b
  4202  00112E  EFA2  F008         	goto	u3551
  4203  001132  51CA               	movf	(running@i_934+1)& (0+255),w,b
  4204  001134  E109               	bnz	u3550
  4205  001136  0E08               	movlw	8
  4206  001138  5DC9               	subwf	running@i_934& (0+255),w,b
  4207  00113A  A0D8               	btfss	status,0,c
  4208  00113C  EFA2  F008         	goto	u3551
  4209  001140  EFA4  F008         	goto	u3550
  4210  001144                     u3551:
  4211  001144  EFA6  F008         	goto	l4050
  4212  001148                     u3550:
  4213  001148  EFCA  F008         	goto	l4056
  4214  00114C                     l4050:
  4215                           
  4216                           ; BSR set to: 0
  4217                           ;main.c: 414:                 din[i]=din_ori[(i+4)%8];
  4218  00114C  0E04               	movlw	4
  4219  00114E  25C9               	addwf	running@i_934& (0+255),w,b
  4220  001150  6FB1               	movwf	??_running& (0+255),b
  4221  001152  0E00               	movlw	0
  4222  001154  21CA               	addwfc	(running@i_934+1)& (0+255),w,b
  4223  001156  6FB2               	movwf	(??_running+1)& (0+255),b
  4224  001158  0E07               	movlw	7
  4225  00115A  17B1               	andwf	??_running& (0+255),f,b
  4226  00115C  0E00               	movlw	0
  4227  00115E  17B2               	andwf	(??_running+1)& (0+255),f,b
  4228  001160  90D8               	bcf	status,0,c
  4229  001162  37B1               	rlcf	??_running& (0+255),f,b
  4230  001164  37B2               	rlcf	(??_running+1)& (0+255),f,b
  4231  001166  0E90               	movlw	low _din_ori
  4232  001168  25B1               	addwf	??_running& (0+255),w,b
  4233  00116A  6ED9               	movwf	fsr2l,c
  4234  00116C  0E01               	movlw	high _din_ori
  4235  00116E  21B2               	addwfc	(??_running+1)& (0+255),w,b
  4236  001170  6EDA               	movwf	fsr2h,c
  4237  001172  90D8               	bcf	status,0,c
  4238  001174  35C9               	rlcf	running@i_934& (0+255),w,b
  4239  001176  6EE1               	movwf	fsr1l,c
  4240  001178  35CA               	rlcf	(running@i_934+1)& (0+255),w,b
  4241  00117A  6EE2               	movwf	fsr1h,c
  4242  00117C  0E39               	movlw	low _din
  4243  00117E  26E1               	addwf	fsr1l,f,c
  4244  001180  0E00               	movlw	high _din
  4245  001182  22E2               	addwfc	fsr1h,f,c
  4246  001184  CFDE FFE6          	movff	postinc2,postinc1
  4247  001188  CFDD FFE5          	movff	postdec2,postdec1
  4248  00118C                     
  4249                           ; BSR set to: 0
  4250                           ;main.c: 415:             }
  4251  00118C  4BC9               	infsnz	running@i_934& (0+255),f,b
  4252  00118E  2BCA               	incf	(running@i_934+1)& (0+255),f,b
  4253  001190  EF96  F008         	goto	l4046
  4254  001194                     l4056:
  4255                           
  4256                           ; BSR set to: 0
  4257                           ;main.c: 419:         if(create == 1){
  4258  001194  0453               	decf	_create^0,w,c
  4259  001196  1054               	iorwf	(_create+1)^0,w,c
  4260  001198  A4D8               	btfss	status,2,c
  4261  00119A  EFD1  F008         	goto	u3561
  4262  00119E  EFD3  F008         	goto	u3560
  4263  0011A2                     u3561:
  4264  0011A2  EF1C  F009         	goto	l4072
  4265  0011A6                     u3560:
  4266  0011A6                     
  4267                           ; BSR set to: 0
  4268                           ;main.c: 420:             for(i=0;i<8;i++){
  4269  0011A6  0E00               	movlw	0
  4270  0011A8  6FCA               	movwf	(running@i_934+1)& (0+255),b
  4271  0011AA  0E00               	movlw	0
  4272  0011AC  6FC9               	movwf	running@i_934& (0+255),b
  4273  0011AE                     l4060:
  4274                           
  4275                           ; BSR set to: 0
  4276  0011AE  BFCA               	btfsc	(running@i_934+1)& (0+255),7,b
  4277  0011B0  EFE3  F008         	goto	u3571
  4278  0011B4  51CA               	movf	(running@i_934+1)& (0+255),w,b
  4279  0011B6  E109               	bnz	u3570
  4280  0011B8  0E08               	movlw	8
  4281  0011BA  5DC9               	subwf	running@i_934& (0+255),w,b
  4282  0011BC  A0D8               	btfss	status,0,c
  4283  0011BE  EFE3  F008         	goto	u3571
  4284  0011C2  EFE5  F008         	goto	u3570
  4285  0011C6                     u3571:
  4286  0011C6  EFE7  F008         	goto	l4064
  4287  0011CA                     u3570:
  4288  0011CA  EF16  F009         	goto	l4070
  4289  0011CE                     l4064:
  4290                           
  4291                           ; BSR set to: 0
  4292                           ;main.c: 421:                 obj[i] |= rock1[i];
  4293  0011CE  90D8               	bcf	status,0,c
  4294  0011D0  35C9               	rlcf	running@i_934& (0+255),w,b
  4295  0011D2  6ED9               	movwf	fsr2l,c
  4296  0011D4  35CA               	rlcf	(running@i_934+1)& (0+255),w,b
  4297  0011D6  6EDA               	movwf	fsr2h,c
  4298  0011D8  0E70               	movlw	low _rock1
  4299  0011DA  26D9               	addwf	fsr2l,f,c
  4300  0011DC  0E01               	movlw	high _rock1
  4301  0011DE  22DA               	addwfc	fsr2h,f,c
  4302  0011E0  CFDE F0B1          	movff	postinc2,??_running
  4303  0011E4  CFDD F0B2          	movff	postdec2,??_running+1
  4304  0011E8  51B1               	movf	??_running& (0+255),w,b
  4305  0011EA  6FB3               	movwf	(??_running+2)& (0+255),b
  4306  0011EC  51B2               	movf	(??_running+1)& (0+255),w,b
  4307  0011EE  6FB4               	movwf	(??_running+3)& (0+255),b
  4308  0011F0  6BB5               	clrf	(??_running+4)& (0+255),b
  4309  0011F2  6BB6               	clrf	(??_running+5)& (0+255),b
  4310  0011F4  0EC0               	movlw	low _obj
  4311  0011F6  6FB7               	movwf	(??_running+6)& (0+255),b
  4312  0011F8  0E01               	movlw	high _obj
  4313  0011FA  6FB8               	movwf	(??_running+7)& (0+255),b
  4314  0011FC  90D8               	bcf	status,0,c
  4315  0011FE  35C9               	rlcf	running@i_934& (0+255),w,b
  4316  001200  6ED9               	movwf	fsr2l,c
  4317  001202  35CA               	rlcf	(running@i_934+1)& (0+255),w,b
  4318  001204  6EDA               	movwf	fsr2h,c
  4319  001206  90D8               	bcf	status,0,c
  4320  001208  36D9               	rlcf	fsr2l,f,c
  4321  00120A  36DA               	rlcf	fsr2h,f,c
  4322  00120C  51B7               	movf	(??_running+6)& (0+255),w,b
  4323  00120E  26D9               	addwf	fsr2l,f,c
  4324  001210  51B8               	movf	(??_running+7)& (0+255),w,b
  4325  001212  22DA               	addwfc	fsr2h,f,c
  4326  001214  51B3               	movf	(??_running+2)& (0+255),w,b
  4327  001216  12DE               	iorwf	postinc2,f,c
  4328  001218  51B4               	movf	(??_running+3)& (0+255),w,b
  4329  00121A  12DE               	iorwf	postinc2,f,c
  4330  00121C  51B5               	movf	(??_running+4)& (0+255),w,b
  4331  00121E  12DE               	iorwf	postinc2,f,c
  4332  001220  51B6               	movf	(??_running+5)& (0+255),w,b
  4333  001222  12DE               	iorwf	postinc2,f,c
  4334  001224                     
  4335                           ; BSR set to: 0
  4336                           ;main.c: 422:             }
  4337  001224  4BC9               	infsnz	running@i_934& (0+255),f,b
  4338  001226  2BCA               	incf	(running@i_934+1)& (0+255),f,b
  4339  001228  EFD7  F008         	goto	l4060
  4340  00122C                     l4070:
  4341                           
  4342                           ; BSR set to: 0
  4343                           ;main.c: 423:             create = 0;
  4344  00122C  0E00               	movlw	0
  4345  00122E  6E54               	movwf	(_create+1)^0,c
  4346  001230  0E00               	movlw	0
  4347  001232  6E53               	movwf	_create^0,c
  4348                           
  4349                           ;main.c: 424:         }
  4350  001234  EFB6  F009         	goto	l326
  4351  001238                     l4072:
  4352                           
  4353                           ; BSR set to: 0
  4354  001238  0E02               	movlw	2
  4355  00123A  1853               	xorwf	_create^0,w,c
  4356  00123C  1054               	iorwf	(_create+1)^0,w,c
  4357  00123E  A4D8               	btfss	status,2,c
  4358  001240  EF24  F009         	goto	u3581
  4359  001244  EF26  F009         	goto	u3580
  4360  001248                     u3581:
  4361  001248  EF69  F009         	goto	l4088
  4362  00124C                     u3580:
  4363  00124C                     
  4364                           ; BSR set to: 0
  4365                           ;main.c: 426:             for(i=0;i<8;i++){
  4366  00124C  0E00               	movlw	0
  4367  00124E  6FCA               	movwf	(running@i_934+1)& (0+255),b
  4368  001250  0E00               	movlw	0
  4369  001252  6FC9               	movwf	running@i_934& (0+255),b
  4370  001254                     l4076:
  4371                           
  4372                           ; BSR set to: 0
  4373  001254  BFCA               	btfsc	(running@i_934+1)& (0+255),7,b
  4374  001256  EF36  F009         	goto	u3591
  4375  00125A  51CA               	movf	(running@i_934+1)& (0+255),w,b
  4376  00125C  E109               	bnz	u3590
  4377  00125E  0E08               	movlw	8
  4378  001260  5DC9               	subwf	running@i_934& (0+255),w,b
  4379  001262  A0D8               	btfss	status,0,c
  4380  001264  EF36  F009         	goto	u3591
  4381  001268  EF38  F009         	goto	u3590
  4382  00126C                     u3591:
  4383  00126C  EF3A  F009         	goto	l4080
  4384  001270                     u3590:
  4385  001270  EF16  F009         	goto	l4070
  4386  001274                     l4080:
  4387                           
  4388                           ; BSR set to: 0
  4389                           ;main.c: 427:                 obj[i] |= rock2[i];
  4390  001274  90D8               	bcf	status,0,c
  4391  001276  35C9               	rlcf	running@i_934& (0+255),w,b
  4392  001278  6ED9               	movwf	fsr2l,c
  4393  00127A  35CA               	rlcf	(running@i_934+1)& (0+255),w,b
  4394  00127C  6EDA               	movwf	fsr2h,c
  4395  00127E  0E60               	movlw	low _rock2
  4396  001280  26D9               	addwf	fsr2l,f,c
  4397  001282  0E01               	movlw	high _rock2
  4398  001284  22DA               	addwfc	fsr2h,f,c
  4399  001286  CFDE F0B1          	movff	postinc2,??_running
  4400  00128A  CFDD F0B2          	movff	postdec2,??_running+1
  4401  00128E  51B1               	movf	??_running& (0+255),w,b
  4402  001290  6FB3               	movwf	(??_running+2)& (0+255),b
  4403  001292  51B2               	movf	(??_running+1)& (0+255),w,b
  4404  001294  6FB4               	movwf	(??_running+3)& (0+255),b
  4405  001296  6BB5               	clrf	(??_running+4)& (0+255),b
  4406  001298  6BB6               	clrf	(??_running+5)& (0+255),b
  4407  00129A  0EC0               	movlw	low _obj
  4408  00129C  6FB7               	movwf	(??_running+6)& (0+255),b
  4409  00129E  0E01               	movlw	high _obj
  4410  0012A0  6FB8               	movwf	(??_running+7)& (0+255),b
  4411  0012A2  90D8               	bcf	status,0,c
  4412  0012A4  35C9               	rlcf	running@i_934& (0+255),w,b
  4413  0012A6  6ED9               	movwf	fsr2l,c
  4414  0012A8  35CA               	rlcf	(running@i_934+1)& (0+255),w,b
  4415  0012AA  6EDA               	movwf	fsr2h,c
  4416  0012AC  90D8               	bcf	status,0,c
  4417  0012AE  36D9               	rlcf	fsr2l,f,c
  4418  0012B0  36DA               	rlcf	fsr2h,f,c
  4419  0012B2  51B7               	movf	(??_running+6)& (0+255),w,b
  4420  0012B4  26D9               	addwf	fsr2l,f,c
  4421  0012B6  51B8               	movf	(??_running+7)& (0+255),w,b
  4422  0012B8  22DA               	addwfc	fsr2h,f,c
  4423  0012BA  51B3               	movf	(??_running+2)& (0+255),w,b
  4424  0012BC  12DE               	iorwf	postinc2,f,c
  4425  0012BE  51B4               	movf	(??_running+3)& (0+255),w,b
  4426  0012C0  12DE               	iorwf	postinc2,f,c
  4427  0012C2  51B5               	movf	(??_running+4)& (0+255),w,b
  4428  0012C4  12DE               	iorwf	postinc2,f,c
  4429  0012C6  51B6               	movf	(??_running+5)& (0+255),w,b
  4430  0012C8  12DE               	iorwf	postinc2,f,c
  4431  0012CA                     
  4432                           ; BSR set to: 0
  4433                           ;main.c: 428:             }
  4434  0012CA  4BC9               	infsnz	running@i_934& (0+255),f,b
  4435  0012CC  2BCA               	incf	(running@i_934+1)& (0+255),f,b
  4436  0012CE  EF2A  F009         	goto	l4076
  4437  0012D2                     l4088:
  4438                           
  4439                           ; BSR set to: 0
  4440  0012D2  0E03               	movlw	3
  4441  0012D4  1853               	xorwf	_create^0,w,c
  4442  0012D6  1054               	iorwf	(_create+1)^0,w,c
  4443  0012D8  A4D8               	btfss	status,2,c
  4444  0012DA  EF71  F009         	goto	u3601
  4445  0012DE  EF73  F009         	goto	u3600
  4446  0012E2                     u3601:
  4447  0012E2  EFB6  F009         	goto	l326
  4448  0012E6                     u3600:
  4449  0012E6                     
  4450                           ; BSR set to: 0
  4451                           ;main.c: 432:             for(i=0;i<8;i++){
  4452  0012E6  0E00               	movlw	0
  4453  0012E8  6FCA               	movwf	(running@i_934+1)& (0+255),b
  4454  0012EA  0E00               	movlw	0
  4455  0012EC  6FC9               	movwf	running@i_934& (0+255),b
  4456  0012EE                     l4092:
  4457                           
  4458                           ; BSR set to: 0
  4459  0012EE  BFCA               	btfsc	(running@i_934+1)& (0+255),7,b
  4460  0012F0  EF83  F009         	goto	u3611
  4461  0012F4  51CA               	movf	(running@i_934+1)& (0+255),w,b
  4462  0012F6  E109               	bnz	u3610
  4463  0012F8  0E08               	movlw	8
  4464  0012FA  5DC9               	subwf	running@i_934& (0+255),w,b
  4465  0012FC  A0D8               	btfss	status,0,c
  4466  0012FE  EF83  F009         	goto	u3611
  4467  001302  EF85  F009         	goto	u3610
  4468  001306                     u3611:
  4469  001306  EF87  F009         	goto	l4096
  4470  00130A                     u3610:
  4471  00130A  EF16  F009         	goto	l4070
  4472  00130E                     l4096:
  4473                           
  4474                           ; BSR set to: 0
  4475                           ;main.c: 433:                 obj[i] |= arrow[i];
  4476  00130E  90D8               	bcf	status,0,c
  4477  001310  35C9               	rlcf	running@i_934& (0+255),w,b
  4478  001312  6ED9               	movwf	fsr2l,c
  4479  001314  35CA               	rlcf	(running@i_934+1)& (0+255),w,b
  4480  001316  6EDA               	movwf	fsr2h,c
  4481  001318  0E50               	movlw	low _arrow
  4482  00131A  26D9               	addwf	fsr2l,f,c
  4483  00131C  0E01               	movlw	high _arrow
  4484  00131E  22DA               	addwfc	fsr2h,f,c
  4485  001320  CFDE F0B1          	movff	postinc2,??_running
  4486  001324  CFDD F0B2          	movff	postdec2,??_running+1
  4487  001328  51B1               	movf	??_running& (0+255),w,b
  4488  00132A  6FB3               	movwf	(??_running+2)& (0+255),b
  4489  00132C  51B2               	movf	(??_running+1)& (0+255),w,b
  4490  00132E  6FB4               	movwf	(??_running+3)& (0+255),b
  4491  001330  6BB5               	clrf	(??_running+4)& (0+255),b
  4492  001332  6BB6               	clrf	(??_running+5)& (0+255),b
  4493  001334  0EC0               	movlw	low _obj
  4494  001336  6FB7               	movwf	(??_running+6)& (0+255),b
  4495  001338  0E01               	movlw	high _obj
  4496  00133A  6FB8               	movwf	(??_running+7)& (0+255),b
  4497  00133C  90D8               	bcf	status,0,c
  4498  00133E  35C9               	rlcf	running@i_934& (0+255),w,b
  4499  001340  6ED9               	movwf	fsr2l,c
  4500  001342  35CA               	rlcf	(running@i_934+1)& (0+255),w,b
  4501  001344  6EDA               	movwf	fsr2h,c
  4502  001346  90D8               	bcf	status,0,c
  4503  001348  36D9               	rlcf	fsr2l,f,c
  4504  00134A  36DA               	rlcf	fsr2h,f,c
  4505  00134C  51B7               	movf	(??_running+6)& (0+255),w,b
  4506  00134E  26D9               	addwf	fsr2l,f,c
  4507  001350  51B8               	movf	(??_running+7)& (0+255),w,b
  4508  001352  22DA               	addwfc	fsr2h,f,c
  4509  001354  51B3               	movf	(??_running+2)& (0+255),w,b
  4510  001356  12DE               	iorwf	postinc2,f,c
  4511  001358  51B4               	movf	(??_running+3)& (0+255),w,b
  4512  00135A  12DE               	iorwf	postinc2,f,c
  4513  00135C  51B5               	movf	(??_running+4)& (0+255),w,b
  4514  00135E  12DE               	iorwf	postinc2,f,c
  4515  001360  51B6               	movf	(??_running+5)& (0+255),w,b
  4516  001362  12DE               	iorwf	postinc2,f,c
  4517  001364                     
  4518                           ; BSR set to: 0
  4519                           ;main.c: 434:             }
  4520  001364  4BC9               	infsnz	running@i_934& (0+255),f,b
  4521  001366  2BCA               	incf	(running@i_934+1)& (0+255),f,b
  4522  001368  EF77  F009         	goto	l4092
  4523  00136C                     l326:
  4524                           
  4525                           ; BSR set to: 0
  4526                           ;main.c: 439:         for(i=0;i<8;i++){
  4527  00136C  0E00               	movlw	0
  4528  00136E  6FCA               	movwf	(running@i_934+1)& (0+255),b
  4529  001370  0E00               	movlw	0
  4530  001372  6FC9               	movwf	running@i_934& (0+255),b
  4531  001374                     l4104:
  4532                           
  4533                           ; BSR set to: 0
  4534  001374  BFCA               	btfsc	(running@i_934+1)& (0+255),7,b
  4535  001376  EFC6  F009         	goto	u3621
  4536  00137A  51CA               	movf	(running@i_934+1)& (0+255),w,b
  4537  00137C  E109               	bnz	u3620
  4538  00137E  0E08               	movlw	8
  4539  001380  5DC9               	subwf	running@i_934& (0+255),w,b
  4540  001382  A0D8               	btfss	status,0,c
  4541  001384  EFC6  F009         	goto	u3621
  4542  001388  EFC8  F009         	goto	u3620
  4543  00138C                     u3621:
  4544  00138C  EFCA  F009         	goto	l4108
  4545  001390                     u3620:
  4546  001390  EF26  F006         	goto	l3910
  4547  001394                     l4108:
  4548                           
  4549                           ; BSR set to: 0
  4550                           ;main.c: 440:             row[i]=(obj[i]/256)^(din[i]*256);
  4551  001394  90D8               	bcf	status,0,c
  4552  001396  35C9               	rlcf	running@i_934& (0+255),w,b
  4553  001398  6ED9               	movwf	fsr2l,c
  4554  00139A  35CA               	rlcf	(running@i_934+1)& (0+255),w,b
  4555  00139C  6EDA               	movwf	fsr2h,c
  4556  00139E  0E39               	movlw	low _din
  4557  0013A0  26D9               	addwf	fsr2l,f,c
  4558  0013A2  0E00               	movlw	high _din
  4559  0013A4  22DA               	addwfc	fsr2h,f,c
  4560  0013A6  CFDE F0B1          	movff	postinc2,??_running
  4561  0013AA  CFDD F0B2          	movff	postdec2,??_running+1
  4562  0013AE  C0B1  F0B2         	movff	??_running,??_running+1
  4563  0013B2  6BB1               	clrf	??_running& (0+255),b
  4564  0013B4  0EC0               	movlw	low _obj
  4565  0013B6  6FB3               	movwf	(??_running+2)& (0+255),b
  4566  0013B8  0E01               	movlw	high _obj
  4567  0013BA  6FB4               	movwf	(??_running+3)& (0+255),b
  4568  0013BC  90D8               	bcf	status,0,c
  4569  0013BE  35C9               	rlcf	running@i_934& (0+255),w,b
  4570  0013C0  6ED9               	movwf	fsr2l,c
  4571  0013C2  35CA               	rlcf	(running@i_934+1)& (0+255),w,b
  4572  0013C4  6EDA               	movwf	fsr2h,c
  4573  0013C6  90D8               	bcf	status,0,c
  4574  0013C8  36D9               	rlcf	fsr2l,f,c
  4575  0013CA  36DA               	rlcf	fsr2h,f,c
  4576  0013CC  51B3               	movf	(??_running+2)& (0+255),w,b
  4577  0013CE  26D9               	addwf	fsr2l,f,c
  4578  0013D0  51B4               	movf	(??_running+3)& (0+255),w,b
  4579  0013D2  22DA               	addwfc	fsr2h,f,c
  4580  0013D4  CFDE F0B5          	movff	postinc2,??_running+4
  4581  0013D8  CFDE F0B6          	movff	postinc2,??_running+5
  4582  0013DC  CFDE F0B7          	movff	postinc2,??_running+6
  4583  0013E0  CFDE F0B8          	movff	postinc2,??_running+7
  4584  0013E4  C0B6  F0B5         	movff	??_running+5,??_running+4
  4585  0013E8  C0B7  F0B6         	movff	??_running+6,??_running+5
  4586  0013EC  C0B8  F0B7         	movff	??_running+7,??_running+6
  4587  0013F0  6BB8               	clrf	(??_running+7)& (0+255),b
  4588  0013F2  51B1               	movf	??_running& (0+255),w,b
  4589  0013F4  19B5               	xorwf	(??_running+4)& (0+255),w,b
  4590  0013F6  6FB9               	movwf	(??_running+8)& (0+255),b
  4591  0013F8  51B2               	movf	(??_running+1)& (0+255),w,b
  4592  0013FA  19B6               	xorwf	(??_running+5)& (0+255),w,b
  4593  0013FC  6FBA               	movwf	(??_running+9)& (0+255),b
  4594  0013FE  0E00               	movlw	0
  4595  001400  19B7               	xorwf	(??_running+6)& (0+255),w,b
  4596  001402  6FBB               	movwf	(??_running+10)& (0+255),b
  4597  001404  0E00               	movlw	0
  4598  001406  19B8               	xorwf	(??_running+7)& (0+255),w,b
  4599  001408  6FBC               	movwf	(??_running+11)& (0+255),b
  4600  00140A  0ED3               	movlw	low _row
  4601  00140C  6FBD               	movwf	(??_running+12)& (0+255),b
  4602  00140E  0E00               	movlw	high _row
  4603  001410  6FBE               	movwf	(??_running+13)& (0+255),b
  4604  001412  90D8               	bcf	status,0,c
  4605  001414  35C9               	rlcf	running@i_934& (0+255),w,b
  4606  001416  6ED9               	movwf	fsr2l,c
  4607  001418  35CA               	rlcf	(running@i_934+1)& (0+255),w,b
  4608  00141A  6EDA               	movwf	fsr2h,c
  4609  00141C  90D8               	bcf	status,0,c
  4610  00141E  36D9               	rlcf	fsr2l,f,c
  4611  001420  36DA               	rlcf	fsr2h,f,c
  4612  001422  51BD               	movf	(??_running+12)& (0+255),w,b
  4613  001424  26D9               	addwf	fsr2l,f,c
  4614  001426  51BE               	movf	(??_running+13)& (0+255),w,b
  4615  001428  22DA               	addwfc	fsr2h,f,c
  4616  00142A  C0B9  FFDE         	movff	??_running+8,postinc2
  4617  00142E  C0BA  FFDE         	movff	??_running+9,postinc2
  4618  001432  C0BB  FFDE         	movff	??_running+10,postinc2
  4619  001436  C0BC  FFDE         	movff	??_running+11,postinc2
  4620                           
  4621                           ;main.c: 441:             crush[i] = (obj[i]/256)&(din[i]*256);
  4622  00143A  90D8               	bcf	status,0,c
  4623  00143C  35C9               	rlcf	running@i_934& (0+255),w,b
  4624  00143E  6ED9               	movwf	fsr2l,c
  4625  001440  35CA               	rlcf	(running@i_934+1)& (0+255),w,b
  4626  001442  6EDA               	movwf	fsr2h,c
  4627  001444  0E39               	movlw	low _din
  4628  001446  26D9               	addwf	fsr2l,f,c
  4629  001448  0E00               	movlw	high _din
  4630  00144A  22DA               	addwfc	fsr2h,f,c
  4631  00144C  CFDE F0B1          	movff	postinc2,??_running
  4632  001450  CFDD F0B2          	movff	postdec2,??_running+1
  4633  001454  C0B1  F0B2         	movff	??_running,??_running+1
  4634  001458  6BB1               	clrf	??_running& (0+255),b
  4635  00145A  0EC0               	movlw	low _obj
  4636  00145C  6FB3               	movwf	(??_running+2)& (0+255),b
  4637  00145E  0E01               	movlw	high _obj
  4638  001460  6FB4               	movwf	(??_running+3)& (0+255),b
  4639  001462  90D8               	bcf	status,0,c
  4640  001464  35C9               	rlcf	running@i_934& (0+255),w,b
  4641  001466  6ED9               	movwf	fsr2l,c
  4642  001468  35CA               	rlcf	(running@i_934+1)& (0+255),w,b
  4643  00146A  6EDA               	movwf	fsr2h,c
  4644  00146C  90D8               	bcf	status,0,c
  4645  00146E  36D9               	rlcf	fsr2l,f,c
  4646  001470  36DA               	rlcf	fsr2h,f,c
  4647  001472  51B3               	movf	(??_running+2)& (0+255),w,b
  4648  001474  26D9               	addwf	fsr2l,f,c
  4649  001476  51B4               	movf	(??_running+3)& (0+255),w,b
  4650  001478  22DA               	addwfc	fsr2h,f,c
  4651  00147A  CFDE F0B5          	movff	postinc2,??_running+4
  4652  00147E  CFDE F0B6          	movff	postinc2,??_running+5
  4653  001482  CFDE F0B7          	movff	postinc2,??_running+6
  4654  001486  CFDE F0B8          	movff	postinc2,??_running+7
  4655  00148A  C0B6  F0B5         	movff	??_running+5,??_running+4
  4656  00148E  C0B7  F0B6         	movff	??_running+6,??_running+5
  4657  001492  C0B8  F0B7         	movff	??_running+7,??_running+6
  4658  001496  6BB8               	clrf	(??_running+7)& (0+255),b
  4659  001498  51B1               	movf	??_running& (0+255),w,b
  4660  00149A  15B5               	andwf	(??_running+4)& (0+255),w,b
  4661  00149C  6FB9               	movwf	(??_running+8)& (0+255),b
  4662  00149E  51B2               	movf	(??_running+1)& (0+255),w,b
  4663  0014A0  15B6               	andwf	(??_running+5)& (0+255),w,b
  4664  0014A2  6FBA               	movwf	(??_running+9)& (0+255),b
  4665  0014A4  0E00               	movlw	0
  4666  0014A6  15B7               	andwf	(??_running+6)& (0+255),w,b
  4667  0014A8  6FBB               	movwf	(??_running+10)& (0+255),b
  4668  0014AA  0E00               	movlw	0
  4669  0014AC  15B8               	andwf	(??_running+7)& (0+255),w,b
  4670  0014AE  6FBC               	movwf	(??_running+11)& (0+255),b
  4671  0014B0  0EA0               	movlw	low _crush
  4672  0014B2  6FBD               	movwf	(??_running+12)& (0+255),b
  4673  0014B4  0E01               	movlw	high _crush
  4674  0014B6  6FBE               	movwf	(??_running+13)& (0+255),b
  4675  0014B8  90D8               	bcf	status,0,c
  4676  0014BA  35C9               	rlcf	running@i_934& (0+255),w,b
  4677  0014BC  6ED9               	movwf	fsr2l,c
  4678  0014BE  35CA               	rlcf	(running@i_934+1)& (0+255),w,b
  4679  0014C0  6EDA               	movwf	fsr2h,c
  4680  0014C2  90D8               	bcf	status,0,c
  4681  0014C4  36D9               	rlcf	fsr2l,f,c
  4682  0014C6  36DA               	rlcf	fsr2h,f,c
  4683  0014C8  51BD               	movf	(??_running+12)& (0+255),w,b
  4684  0014CA  26D9               	addwf	fsr2l,f,c
  4685  0014CC  51BE               	movf	(??_running+13)& (0+255),w,b
  4686  0014CE  22DA               	addwfc	fsr2h,f,c
  4687  0014D0  C0B9  FFDE         	movff	??_running+8,postinc2
  4688  0014D4  C0BA  FFDE         	movff	??_running+9,postinc2
  4689  0014D8  C0BB  FFDE         	movff	??_running+10,postinc2
  4690  0014DC  C0BC  FFDE         	movff	??_running+11,postinc2
  4691                           
  4692                           ;main.c: 442:             if(crush[i] != 0){
  4693  0014E0  0EA0               	movlw	low _crush
  4694  0014E2  6FB1               	movwf	??_running& (0+255),b
  4695  0014E4  0E01               	movlw	high _crush
  4696  0014E6  6FB2               	movwf	(??_running+1)& (0+255),b
  4697  0014E8  90D8               	bcf	status,0,c
  4698  0014EA  35C9               	rlcf	running@i_934& (0+255),w,b
  4699  0014EC  6ED9               	movwf	fsr2l,c
  4700  0014EE  35CA               	rlcf	(running@i_934+1)& (0+255),w,b
  4701  0014F0  6EDA               	movwf	fsr2h,c
  4702  0014F2  90D8               	bcf	status,0,c
  4703  0014F4  36D9               	rlcf	fsr2l,f,c
  4704  0014F6  36DA               	rlcf	fsr2h,f,c
  4705  0014F8  51B1               	movf	??_running& (0+255),w,b
  4706  0014FA  26D9               	addwf	fsr2l,f,c
  4707  0014FC  51B2               	movf	(??_running+1)& (0+255),w,b
  4708  0014FE  22DA               	addwfc	fsr2h,f,c
  4709  001500  50DE               	movf	postinc2,w,c
  4710  001502  10DE               	iorwf	postinc2,w,c
  4711  001504  10DE               	iorwf	postinc2,w,c
  4712  001506  10DE               	iorwf	postinc2,w,c
  4713  001508  B4D8               	btfsc	status,2,c
  4714  00150A  EF89  F00A         	goto	u3631
  4715  00150E  EF8B  F00A         	goto	u3630
  4716  001512                     u3631:
  4717  001512  EF9D  F00A         	goto	l4128
  4718  001516                     u3630:
  4719  001516                     
  4720                           ; BSR set to: 0
  4721                           ;main.c: 443:                 running_flag = 0;
  4722  001516  0E00               	movlw	0
  4723  001518  6E5C               	movwf	(_running_flag+1)^0,c
  4724  00151A  0E00               	movlw	0
  4725  00151C  6E5B               	movwf	_running_flag^0,c
  4726                           
  4727                           ;main.c: 444:                 timer3_count = 0;
  4728  00151E  0E00               	movlw	0
  4729  001520  6E56               	movwf	(_timer3_count+1)^0,c
  4730  001522  0E00               	movlw	0
  4731  001524  6E55               	movwf	_timer3_count^0,c
  4732  001526                     
  4733                           ; BSR set to: 0
  4734                           ;main.c: 445:                 PIE2bits.TMR3IE = 0;
  4735  001526  92A0               	bcf	160,1,c	;volatile
  4736  001528                     
  4737                           ; BSR set to: 0
  4738                           ;main.c: 446:                 INTCONbits.TMR0IE = 0;
  4739  001528  9AF2               	bcf	242,5,c	;volatile
  4740  00152A                     
  4741                           ; BSR set to: 0
  4742                           ;main.c: 447:                 PIE1bits.TMR2IE = 0;
  4743  00152A  929D               	bcf	157,1,c	;volatile
  4744  00152C                     
  4745                           ; BSR set to: 0
  4746                           ;main.c: 448:                 T0CONbits.TMR0ON = 0;
  4747  00152C  9ED5               	bcf	213,7,c	;volatile
  4748  00152E                     
  4749                           ; BSR set to: 0
  4750                           ;main.c: 449:                 T2CONbits.TMR2ON = 0;
  4751  00152E  94CA               	bcf	202,2,c	;volatile
  4752  001530                     
  4753                           ; BSR set to: 0
  4754                           ;main.c: 450:                 T3CONbits.TMR3ON = 0;
  4755  001530  90B1               	bcf	177,0,c	;volatile
  4756  001532                     
  4757                           ; BSR set to: 0
  4758                           ;main.c: 451:                 end();
  4759  001532  EC09  F000         	call	_end	;wreg free
  4760  001536  EFA1  F00A         	goto	l337
  4761  00153A                     l4128:
  4762                           
  4763                           ; BSR set to: 0
  4764                           ;main.c: 454:         }
  4765  00153A  4BC9               	infsnz	running@i_934& (0+255),f,b
  4766  00153C  2BCA               	incf	(running@i_934+1)& (0+255),f,b
  4767  00153E  EFBA  F009         	goto	l4104
  4768  001542                     l337:
  4769  001542  0012               	return		;funcret
  4770  001544                     __end_of_running:
  4771                           	opt callstack 0
  4772                           
  4773 ;; *************** function _end *****************
  4774 ;; Defined at:
  4775 ;;		line 228 in file "main.c"
  4776 ;; Parameters:    Size  Location     Type
  4777 ;;		None
  4778 ;; Auto vars:     Size  Location     Type
  4779 ;;  i               2   45[BANK0 ] int 
  4780 ;;  i               2   43[BANK0 ] int 
  4781 ;;  i               2   41[BANK0 ] int 
  4782 ;;  i               2   39[BANK0 ] int 
  4783 ;;  i               2   37[BANK0 ] int 
  4784 ;;  i               2   35[BANK0 ] int 
  4785 ;;  i               2   33[BANK0 ] int 
  4786 ;;  i               2   31[BANK0 ] int 
  4787 ;;  i               2   29[BANK0 ] int 
  4788 ;;  i               2   27[BANK0 ] int 
  4789 ;;  j               2   25[BANK0 ] int 
  4790 ;;  i               2   23[BANK0 ] int 
  4791 ;;  i               2   21[BANK0 ] int 
  4792 ;;  shift           2   47[BANK0 ] int 
  4793 ;;  num             2   19[BANK0 ] int 
  4794 ;; Return value:  Size  Location     Type
  4795 ;;                  1    wreg      void 
  4796 ;; Registers used:
  4797 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4798 ;; Tracked objects:
  4799 ;;		On entry : 0/0
  4800 ;;		On exit  : 0/0
  4801 ;;		Unchanged: 0/0
  4802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4803 ;;      Params:         0       0       0       0       0       0       0
  4804 ;;      Locals:         0      30       0       0       0       0       0
  4805 ;;      Temps:          0      12       0       0       0       0       0
  4806 ;;      Totals:         0      42       0       0       0       0       0
  4807 ;;Total ram usage:       42 bytes
  4808 ;; Hardware stack levels used:    1
  4809 ;; Hardware stack levels required when called:    4
  4810 ;; This function calls:
  4811 ;;		___lwdiv
  4812 ;;		___lwmod
  4813 ;;		___wmul
  4814 ;; This function is called by:
  4815 ;;		_running
  4816 ;; This function uses a non-reentrant model
  4817 ;;
  4818                           
  4819                           	psect	text7
  4820  000012                     __ptext7:
  4821                           	opt callstack 0
  4822  000012                     _end:
  4823                           	opt callstack 25
  4824  000012                     
  4825                           ;main.c: 230:     for(int i=0;i<8;i++){
  4826  000012  0E00               	movlw	0
  4827  000014  0100               	movlb	0	; () banked
  4828  000016  6F96               	movwf	(end@i+1)& (0+255),b
  4829  000018  0E00               	movlw	0
  4830  00001A  6F95               	movwf	end@i& (0+255),b
  4831  00001C                     l3488:
  4832                           
  4833                           ; BSR set to: 0
  4834                           ;main.c: 231:         row[i] = endimg[i];
  4835  00001C  0E00               	movlw	low _endimg
  4836  00001E  6F87               	movwf	??_end& (0+255),b
  4837  000020  0E02               	movlw	high _endimg
  4838  000022  6F88               	movwf	(??_end+1)& (0+255),b
  4839  000024  90D8               	bcf	status,0,c
  4840  000026  3595               	rlcf	end@i& (0+255),w,b
  4841  000028  6ED9               	movwf	fsr2l,c
  4842  00002A  3596               	rlcf	(end@i+1)& (0+255),w,b
  4843  00002C  6EDA               	movwf	fsr2h,c
  4844  00002E  90D8               	bcf	status,0,c
  4845  000030  36D9               	rlcf	fsr2l,f,c
  4846  000032  36DA               	rlcf	fsr2h,f,c
  4847  000034  5187               	movf	??_end& (0+255),w,b
  4848  000036  26D9               	addwf	fsr2l,f,c
  4849  000038  5188               	movf	(??_end+1)& (0+255),w,b
  4850  00003A  22DA               	addwfc	fsr2h,f,c
  4851  00003C  0ED3               	movlw	low _row
  4852  00003E  6F89               	movwf	(??_end+2)& (0+255),b
  4853  000040  0E00               	movlw	high _row
  4854  000042  6F8A               	movwf	(??_end+3)& (0+255),b
  4855  000044  90D8               	bcf	status,0,c
  4856  000046  3595               	rlcf	end@i& (0+255),w,b
  4857  000048  6EE1               	movwf	fsr1l,c
  4858  00004A  3596               	rlcf	(end@i+1)& (0+255),w,b
  4859  00004C  6EE2               	movwf	fsr1h,c
  4860  00004E  90D8               	bcf	status,0,c
  4861  000050  36E1               	rlcf	fsr1l,f,c
  4862  000052  36E2               	rlcf	fsr1h,f,c
  4863  000054  5189               	movf	(??_end+2)& (0+255),w,b
  4864  000056  26E1               	addwf	fsr1l,f,c
  4865  000058  518A               	movf	(??_end+3)& (0+255),w,b
  4866  00005A  22E2               	addwfc	fsr1h,f,c
  4867  00005C  CFDE FFE6          	movff	postinc2,postinc1
  4868  000060  CFDE FFE6          	movff	postinc2,postinc1
  4869  000064  CFDE FFE6          	movff	postinc2,postinc1
  4870  000068  CFDE FFE6          	movff	postinc2,postinc1
  4871  00006C                     
  4872                           ; BSR set to: 0
  4873                           ;main.c: 232:     }
  4874  00006C  4B95               	infsnz	end@i& (0+255),f,b
  4875  00006E  2B96               	incf	(end@i+1)& (0+255),f,b
  4876  000070                     
  4877                           ; BSR set to: 0
  4878  000070  BF96               	btfsc	(end@i+1)& (0+255),7,b
  4879  000072  EF44  F000         	goto	u2841
  4880  000076  5196               	movf	(end@i+1)& (0+255),w,b
  4881  000078  E109               	bnz	u2840
  4882  00007A  0E08               	movlw	8
  4883  00007C  5D95               	subwf	end@i& (0+255),w,b
  4884  00007E  A0D8               	btfss	status,0,c
  4885  000080  EF44  F000         	goto	u2841
  4886  000084  EF46  F000         	goto	u2840
  4887  000088                     u2841:
  4888  000088  EF0E  F000         	goto	l3488
  4889  00008C                     u2840:
  4890  00008C                     
  4891                           ; BSR set to: 0
  4892                           ;main.c: 233:     _delay((unsigned long)((1500)*(1000000/4000.0)));
  4893  00008C  0E02               	movlw	2
  4894  00008E  0100               	movlb	0	; () banked
  4895  000090  6F88               	movwf	(??_end+1)& (0+255),b
  4896  000092  0EE7               	movlw	231
  4897  000094  6F87               	movwf	??_end& (0+255),b
  4898  000096  0E00               	movlw	0
  4899  000098                     u3917:
  4900  000098  2EE8               	decfsz	wreg,f,c
  4901  00009A  D7FE               	bra	u3917
  4902  00009C  2F87               	decfsz	??_end& (0+255),f,b
  4903  00009E  D7FC               	bra	u3917
  4904  0000A0  2F88               	decfsz	(??_end+1)& (0+255),f,b
  4905  0000A2  D7FA               	bra	u3917
  4906  0000A4  F000               	nop	
  4907  0000A6                     
  4908                           ;main.c: 236:     for(int i=0;i<8;i++){
  4909  0000A6  0E00               	movlw	0
  4910  0000A8  0100               	movlb	0	; () banked
  4911  0000AA  6F98               	movwf	(end@i_874+1)& (0+255),b
  4912  0000AC  0E00               	movlw	0
  4913  0000AE  6F97               	movwf	end@i_874& (0+255),b
  4914  0000B0                     l3502:
  4915                           
  4916                           ; BSR set to: 0
  4917                           ;main.c: 237:         row[i] = 0;
  4918  0000B0  0ED3               	movlw	low _row
  4919  0000B2  6F87               	movwf	??_end& (0+255),b
  4920  0000B4  0E00               	movlw	high _row
  4921  0000B6  6F88               	movwf	(??_end+1)& (0+255),b
  4922  0000B8  90D8               	bcf	status,0,c
  4923  0000BA  3597               	rlcf	end@i_874& (0+255),w,b
  4924  0000BC  6ED9               	movwf	fsr2l,c
  4925  0000BE  3598               	rlcf	(end@i_874+1)& (0+255),w,b
  4926  0000C0  6EDA               	movwf	fsr2h,c
  4927  0000C2  90D8               	bcf	status,0,c
  4928  0000C4  36D9               	rlcf	fsr2l,f,c
  4929  0000C6  36DA               	rlcf	fsr2h,f,c
  4930  0000C8  5187               	movf	??_end& (0+255),w,b
  4931  0000CA  26D9               	addwf	fsr2l,f,c
  4932  0000CC  5188               	movf	(??_end+1)& (0+255),w,b
  4933  0000CE  22DA               	addwfc	fsr2h,f,c
  4934  0000D0  6ADE               	clrf	postinc2,c
  4935  0000D2  6ADE               	clrf	postinc2,c
  4936  0000D4  6ADE               	clrf	postinc2,c
  4937  0000D6  6ADD               	clrf	postdec2,c
  4938                           
  4939                           ;main.c: 238:         obj[i] = 0;
  4940  0000D8  0EC0               	movlw	low _obj
  4941  0000DA  6F87               	movwf	??_end& (0+255),b
  4942  0000DC  0E01               	movlw	high _obj
  4943  0000DE  6F88               	movwf	(??_end+1)& (0+255),b
  4944  0000E0  90D8               	bcf	status,0,c
  4945  0000E2  3597               	rlcf	end@i_874& (0+255),w,b
  4946  0000E4  6ED9               	movwf	fsr2l,c
  4947  0000E6  3598               	rlcf	(end@i_874+1)& (0+255),w,b
  4948  0000E8  6EDA               	movwf	fsr2h,c
  4949  0000EA  90D8               	bcf	status,0,c
  4950  0000EC  36D9               	rlcf	fsr2l,f,c
  4951  0000EE  36DA               	rlcf	fsr2h,f,c
  4952  0000F0  5187               	movf	??_end& (0+255),w,b
  4953  0000F2  26D9               	addwf	fsr2l,f,c
  4954  0000F4  5188               	movf	(??_end+1)& (0+255),w,b
  4955  0000F6  22DA               	addwfc	fsr2h,f,c
  4956  0000F8  6ADE               	clrf	postinc2,c
  4957  0000FA  6ADE               	clrf	postinc2,c
  4958  0000FC  6ADE               	clrf	postinc2,c
  4959  0000FE  6ADD               	clrf	postdec2,c
  4960  000100                     
  4961                           ; BSR set to: 0
  4962                           ;main.c: 239:     }
  4963  000100  4B97               	infsnz	end@i_874& (0+255),f,b
  4964  000102  2B98               	incf	(end@i_874+1)& (0+255),f,b
  4965  000104                     
  4966                           ; BSR set to: 0
  4967  000104  BF98               	btfsc	(end@i_874+1)& (0+255),7,b
  4968  000106  EF8E  F000         	goto	u2851
  4969  00010A  5198               	movf	(end@i_874+1)& (0+255),w,b
  4970  00010C  E109               	bnz	u2850
  4971  00010E  0E08               	movlw	8
  4972  000110  5D97               	subwf	end@i_874& (0+255),w,b
  4973  000112  A0D8               	btfss	status,0,c
  4974  000114  EF8E  F000         	goto	u2851
  4975  000118  EF90  F000         	goto	u2850
  4976  00011C                     u2851:
  4977  00011C  EF58  F000         	goto	l3502
  4978  000120                     u2850:
  4979  000120                     
  4980                           ; BSR set to: 0
  4981                           ;main.c: 240:     _delay((unsigned long)((1500)*(1000000/4000.0)));
  4982  000120  0E02               	movlw	2
  4983  000122  0100               	movlb	0	; () banked
  4984  000124  6F88               	movwf	(??_end+1)& (0+255),b
  4985  000126  0EE7               	movlw	231
  4986  000128  6F87               	movwf	??_end& (0+255),b
  4987  00012A  0E00               	movlw	0
  4988  00012C                     u3927:
  4989  00012C  2EE8               	decfsz	wreg,f,c
  4990  00012E  D7FE               	bra	u3927
  4991  000130  2F87               	decfsz	??_end& (0+255),f,b
  4992  000132  D7FC               	bra	u3927
  4993  000134  2F88               	decfsz	(??_end+1)& (0+255),f,b
  4994  000136  D7FA               	bra	u3927
  4995  000138  F000               	nop	
  4996  00013A                     
  4997                           ;main.c: 243:     int num;;main.c: 244:     int shift;;main.c: 245:     score /= 5;
  4998  00013A  C0F7  F080         	movff	_score,___lwdiv@dividend
  4999  00013E  C0F8  F081         	movff	_score+1,___lwdiv@dividend+1
  5000  000142  0E00               	movlw	0
  5001  000144  0100               	movlb	0	; () banked
  5002  000146  6F83               	movwf	(___lwdiv@divisor+1)& (0+255),b
  5003  000148  0E05               	movlw	5
  5004  00014A  6F82               	movwf	___lwdiv@divisor& (0+255),b
  5005  00014C  EC04  F015         	call	___lwdiv	;wreg free
  5006  000150  C080  F0F7         	movff	?___lwdiv,_score
  5007  000154  C081  F0F8         	movff	?___lwdiv+1,_score+1
  5008  000158                     
  5009                           ;main.c: 246:     for(int j=0;j<3;j++){
  5010  000158  0E00               	movlw	0
  5011  00015A  0100               	movlb	0	; () banked
  5012  00015C  6F9A               	movwf	(end@j+1)& (0+255),b
  5013  00015E  0E00               	movlw	0
  5014  000160  6F99               	movwf	end@j& (0+255),b
  5015  000162                     l3518:
  5016                           
  5017                           ; BSR set to: 0
  5018                           ;main.c: 247:         num = score%10;
  5019  000162  C0F7  F080         	movff	_score,___lwmod@dividend
  5020  000166  C0F8  F081         	movff	_score+1,___lwmod@dividend+1
  5021  00016A  0E00               	movlw	0
  5022  00016C  6F83               	movwf	(___lwmod@divisor+1)& (0+255),b
  5023  00016E  0E0A               	movlw	10
  5024  000170  6F82               	movwf	___lwmod@divisor& (0+255),b
  5025  000172  EC75  F015         	call	___lwmod	;wreg free
  5026  000176  C080  F093         	movff	?___lwmod,end@num
  5027  00017A  C081  F094         	movff	?___lwmod+1,end@num+1
  5028  00017E                     
  5029                           ;main.c: 248:         if(j == 0) shift = 2;
  5030  00017E  0100               	movlb	0	; () banked
  5031  000180  5199               	movf	end@j& (0+255),w,b
  5032  000182  119A               	iorwf	(end@j+1)& (0+255),w,b
  5033  000184  A4D8               	btfss	status,2,c
  5034  000186  EFC7  F000         	goto	u2861
  5035  00018A  EFC9  F000         	goto	u2860
  5036  00018E                     u2861:
  5037  00018E  EFCF  F000         	goto	l3524
  5038  000192                     u2860:
  5039  000192                     
  5040                           ; BSR set to: 0
  5041  000192  0E00               	movlw	0
  5042  000194  6FB0               	movwf	(end@shift+1)& (0+255),b
  5043  000196  0E02               	movlw	2
  5044  000198  6FAF               	movwf	end@shift& (0+255),b
  5045  00019A  EFFC  F004         	goto	l3654
  5046  00019E                     l3524:
  5047                           
  5048                           ; BSR set to: 0
  5049  00019E  0599               	decf	end@j& (0+255),w,b
  5050  0001A0  119A               	iorwf	(end@j+1)& (0+255),w,b
  5051  0001A2  A4D8               	btfss	status,2,c
  5052  0001A4  EFD6  F000         	goto	u2871
  5053  0001A8  EFD8  F000         	goto	u2870
  5054  0001AC                     u2871:
  5055  0001AC  EFDE  F000         	goto	l3528
  5056  0001B0                     u2870:
  5057  0001B0                     
  5058                           ; BSR set to: 0
  5059  0001B0  0E00               	movlw	0
  5060  0001B2  6FB0               	movwf	(end@shift+1)& (0+255),b
  5061  0001B4  0E40               	movlw	64
  5062  0001B6  6FAF               	movwf	end@shift& (0+255),b
  5063  0001B8  EFFC  F004         	goto	l3654
  5064  0001BC                     l3528:
  5065                           
  5066                           ; BSR set to: 0
  5067  0001BC  0E02               	movlw	2
  5068  0001BE  1999               	xorwf	end@j& (0+255),w,b
  5069  0001C0  119A               	iorwf	(end@j+1)& (0+255),w,b
  5070  0001C2  A4D8               	btfss	status,2,c
  5071  0001C4  EFE6  F000         	goto	u2881
  5072  0001C8  EFE8  F000         	goto	u2880
  5073  0001CC                     u2881:
  5074  0001CC  EFEE  F000         	goto	l232
  5075  0001D0                     u2880:
  5076  0001D0                     
  5077                           ; BSR set to: 0
  5078  0001D0  0E08               	movlw	8
  5079  0001D2  6FB0               	movwf	(end@shift+1)& (0+255),b
  5080  0001D4  0E00               	movlw	0
  5081  0001D6  6FAF               	movwf	end@shift& (0+255),b
  5082  0001D8  EFFC  F004         	goto	l3654
  5083  0001DC                     l232:
  5084                           
  5085                           ; BSR set to: 0
  5086                           ;main.c: 251:         switch(num){
  5087  0001DC  EFFC  F004         	goto	l3654
  5088  0001E0                     l3532:
  5089                           
  5090                           ; BSR set to: 0
  5091                           ;main.c: 253:                 for(int i=0;i<8;i++){
  5092  0001E0  0E00               	movlw	0
  5093  0001E2  6F9C               	movwf	(end@i_878+1)& (0+255),b
  5094  0001E4  0E00               	movlw	0
  5095  0001E6  6F9B               	movwf	end@i_878& (0+255),b
  5096  0001E8                     l3538:
  5097                           
  5098                           ; BSR set to: 0
  5099                           ;main.c: 254:                     row[i] = row[i]|(num1[i]*shift);
  5100  0001E8  0ED3               	movlw	low _row
  5101  0001EA  6F87               	movwf	??_end& (0+255),b
  5102  0001EC  0E00               	movlw	high _row
  5103  0001EE  6F88               	movwf	(??_end+1)& (0+255),b
  5104  0001F0  90D8               	bcf	status,0,c
  5105  0001F2  359B               	rlcf	end@i_878& (0+255),w,b
  5106  0001F4  6ED9               	movwf	fsr2l,c
  5107  0001F6  359C               	rlcf	(end@i_878+1)& (0+255),w,b
  5108  0001F8  6EDA               	movwf	fsr2h,c
  5109  0001FA  90D8               	bcf	status,0,c
  5110  0001FC  36D9               	rlcf	fsr2l,f,c
  5111  0001FE  36DA               	rlcf	fsr2h,f,c
  5112  000200  5187               	movf	??_end& (0+255),w,b
  5113  000202  26D9               	addwf	fsr2l,f,c
  5114  000204  5188               	movf	(??_end+1)& (0+255),w,b
  5115  000206  22DA               	addwfc	fsr2h,f,c
  5116  000208  CFDE F089          	movff	postinc2,??_end+2
  5117  00020C  CFDE F08A          	movff	postinc2,??_end+3
  5118  000210  CFDE F08B          	movff	postinc2,??_end+4
  5119  000214  CFDE F08C          	movff	postinc2,??_end+5
  5120  000218  90D8               	bcf	status,0,c
  5121  00021A  359B               	rlcf	end@i_878& (0+255),w,b
  5122  00021C  6ED9               	movwf	fsr2l,c
  5123  00021E  359C               	rlcf	(end@i_878+1)& (0+255),w,b
  5124  000220  6EDA               	movwf	fsr2h,c
  5125  000222  0E40               	movlw	low _num1
  5126  000224  26D9               	addwf	fsr2l,f,c
  5127  000226  0E01               	movlw	high _num1
  5128  000228  22DA               	addwfc	fsr2h,f,c
  5129  00022A  CFDE F080          	movff	postinc2,___wmul@multiplier
  5130  00022E  CFDD F081          	movff	postdec2,___wmul@multiplier+1
  5131  000232  C0AF  F082         	movff	end@shift,___wmul@multiplicand
  5132  000236  C0B0  F083         	movff	end@shift+1,___wmul@multiplicand+1
  5133  00023A  EC37  F016         	call	___wmul	;wreg free
  5134  00023E  0100               	movlb	0	; () banked
  5135  000240  5180               	movf	?___wmul& (0+255),w,b
  5136  000242  1189               	iorwf	(??_end+2)& (0+255),w,b
  5137  000244  6F8D               	movwf	(??_end+6)& (0+255),b
  5138  000246  5181               	movf	(?___wmul+1)& (0+255),w,b
  5139  000248  118A               	iorwf	(??_end+3)& (0+255),w,b
  5140  00024A  6F8E               	movwf	(??_end+7)& (0+255),b
  5141  00024C  0E00               	movlw	0
  5142  00024E  118B               	iorwf	(??_end+4)& (0+255),w,b
  5143  000250  6F8F               	movwf	(??_end+8)& (0+255),b
  5144  000252  0E00               	movlw	0
  5145  000254  118C               	iorwf	(??_end+5)& (0+255),w,b
  5146  000256  6F90               	movwf	(??_end+9)& (0+255),b
  5147  000258  0ED3               	movlw	low _row
  5148  00025A  6F91               	movwf	(??_end+10)& (0+255),b
  5149  00025C  0E00               	movlw	high _row
  5150  00025E  6F92               	movwf	(??_end+11)& (0+255),b
  5151  000260  90D8               	bcf	status,0,c
  5152  000262  359B               	rlcf	end@i_878& (0+255),w,b
  5153  000264  6ED9               	movwf	fsr2l,c
  5154  000266  359C               	rlcf	(end@i_878+1)& (0+255),w,b
  5155  000268  6EDA               	movwf	fsr2h,c
  5156  00026A  90D8               	bcf	status,0,c
  5157  00026C  36D9               	rlcf	fsr2l,f,c
  5158  00026E  36DA               	rlcf	fsr2h,f,c
  5159  000270  5191               	movf	(??_end+10)& (0+255),w,b
  5160  000272  26D9               	addwf	fsr2l,f,c
  5161  000274  5192               	movf	(??_end+11)& (0+255),w,b
  5162  000276  22DA               	addwfc	fsr2h,f,c
  5163  000278  C08D  FFDE         	movff	??_end+6,postinc2
  5164  00027C  C08E  FFDE         	movff	??_end+7,postinc2
  5165  000280  C08F  FFDE         	movff	??_end+8,postinc2
  5166  000284  C090  FFDE         	movff	??_end+9,postinc2
  5167  000288                     
  5168                           ; BSR set to: 0
  5169                           ;main.c: 255:                 }
  5170  000288  4B9B               	infsnz	end@i_878& (0+255),f,b
  5171  00028A  2B9C               	incf	(end@i_878+1)& (0+255),f,b
  5172  00028C                     
  5173                           ; BSR set to: 0
  5174  00028C  BF9C               	btfsc	(end@i_878+1)& (0+255),7,b
  5175  00028E  EF52  F001         	goto	u2891
  5176  000292  519C               	movf	(end@i_878+1)& (0+255),w,b
  5177  000294  E109               	bnz	u2890
  5178  000296  0E08               	movlw	8
  5179  000298  5D9B               	subwf	end@i_878& (0+255),w,b
  5180  00029A  A0D8               	btfss	status,0,c
  5181  00029C  EF52  F001         	goto	u2891
  5182  0002A0  EF54  F001         	goto	u2890
  5183  0002A4                     u2891:
  5184  0002A4  EFF4  F000         	goto	l3538
  5185  0002A8                     u2890:
  5186  0002A8  EF32  F005         	goto	l3656
  5187  0002AC                     l3544:
  5188                           
  5189                           ; BSR set to: 0
  5190                           ;main.c: 258:                 for(int i=0;i<8;i++){
  5191  0002AC  0E00               	movlw	0
  5192  0002AE  6F9E               	movwf	(end@i_879+1)& (0+255),b
  5193  0002B0  0E00               	movlw	0
  5194  0002B2  6F9D               	movwf	end@i_879& (0+255),b
  5195  0002B4                     l3550:
  5196                           
  5197                           ; BSR set to: 0
  5198                           ;main.c: 259:                     row[i] = row[i]|(num2[i]*shift);
  5199  0002B4  0ED3               	movlw	low _row
  5200  0002B6  6F87               	movwf	??_end& (0+255),b
  5201  0002B8  0E00               	movlw	high _row
  5202  0002BA  6F88               	movwf	(??_end+1)& (0+255),b
  5203  0002BC  90D8               	bcf	status,0,c
  5204  0002BE  359D               	rlcf	end@i_879& (0+255),w,b
  5205  0002C0  6ED9               	movwf	fsr2l,c
  5206  0002C2  359E               	rlcf	(end@i_879+1)& (0+255),w,b
  5207  0002C4  6EDA               	movwf	fsr2h,c
  5208  0002C6  90D8               	bcf	status,0,c
  5209  0002C8  36D9               	rlcf	fsr2l,f,c
  5210  0002CA  36DA               	rlcf	fsr2h,f,c
  5211  0002CC  5187               	movf	??_end& (0+255),w,b
  5212  0002CE  26D9               	addwf	fsr2l,f,c
  5213  0002D0  5188               	movf	(??_end+1)& (0+255),w,b
  5214  0002D2  22DA               	addwfc	fsr2h,f,c
  5215  0002D4  CFDE F089          	movff	postinc2,??_end+2
  5216  0002D8  CFDE F08A          	movff	postinc2,??_end+3
  5217  0002DC  CFDE F08B          	movff	postinc2,??_end+4
  5218  0002E0  CFDE F08C          	movff	postinc2,??_end+5
  5219  0002E4  90D8               	bcf	status,0,c
  5220  0002E6  359D               	rlcf	end@i_879& (0+255),w,b
  5221  0002E8  6ED9               	movwf	fsr2l,c
  5222  0002EA  359E               	rlcf	(end@i_879+1)& (0+255),w,b
  5223  0002EC  6EDA               	movwf	fsr2h,c
  5224  0002EE  0E30               	movlw	low _num2
  5225  0002F0  26D9               	addwf	fsr2l,f,c
  5226  0002F2  0E01               	movlw	high _num2
  5227  0002F4  22DA               	addwfc	fsr2h,f,c
  5228  0002F6  CFDE F080          	movff	postinc2,___wmul@multiplier
  5229  0002FA  CFDD F081          	movff	postdec2,___wmul@multiplier+1
  5230  0002FE  C0AF  F082         	movff	end@shift,___wmul@multiplicand
  5231  000302  C0B0  F083         	movff	end@shift+1,___wmul@multiplicand+1
  5232  000306  EC37  F016         	call	___wmul	;wreg free
  5233  00030A  0100               	movlb	0	; () banked
  5234  00030C  5180               	movf	?___wmul& (0+255),w,b
  5235  00030E  1189               	iorwf	(??_end+2)& (0+255),w,b
  5236  000310  6F8D               	movwf	(??_end+6)& (0+255),b
  5237  000312  5181               	movf	(?___wmul+1)& (0+255),w,b
  5238  000314  118A               	iorwf	(??_end+3)& (0+255),w,b
  5239  000316  6F8E               	movwf	(??_end+7)& (0+255),b
  5240  000318  0E00               	movlw	0
  5241  00031A  118B               	iorwf	(??_end+4)& (0+255),w,b
  5242  00031C  6F8F               	movwf	(??_end+8)& (0+255),b
  5243  00031E  0E00               	movlw	0
  5244  000320  118C               	iorwf	(??_end+5)& (0+255),w,b
  5245  000322  6F90               	movwf	(??_end+9)& (0+255),b
  5246  000324  0ED3               	movlw	low _row
  5247  000326  6F91               	movwf	(??_end+10)& (0+255),b
  5248  000328  0E00               	movlw	high _row
  5249  00032A  6F92               	movwf	(??_end+11)& (0+255),b
  5250  00032C  90D8               	bcf	status,0,c
  5251  00032E  359D               	rlcf	end@i_879& (0+255),w,b
  5252  000330  6ED9               	movwf	fsr2l,c
  5253  000332  359E               	rlcf	(end@i_879+1)& (0+255),w,b
  5254  000334  6EDA               	movwf	fsr2h,c
  5255  000336  90D8               	bcf	status,0,c
  5256  000338  36D9               	rlcf	fsr2l,f,c
  5257  00033A  36DA               	rlcf	fsr2h,f,c
  5258  00033C  5191               	movf	(??_end+10)& (0+255),w,b
  5259  00033E  26D9               	addwf	fsr2l,f,c
  5260  000340  5192               	movf	(??_end+11)& (0+255),w,b
  5261  000342  22DA               	addwfc	fsr2h,f,c
  5262  000344  C08D  FFDE         	movff	??_end+6,postinc2
  5263  000348  C08E  FFDE         	movff	??_end+7,postinc2
  5264  00034C  C08F  FFDE         	movff	??_end+8,postinc2
  5265  000350  C090  FFDE         	movff	??_end+9,postinc2
  5266  000354                     
  5267                           ; BSR set to: 0
  5268                           ;main.c: 260:                 }
  5269  000354  4B9D               	infsnz	end@i_879& (0+255),f,b
  5270  000356  2B9E               	incf	(end@i_879+1)& (0+255),f,b
  5271  000358                     
  5272                           ; BSR set to: 0
  5273  000358  BF9E               	btfsc	(end@i_879+1)& (0+255),7,b
  5274  00035A  EFB8  F001         	goto	u2901
  5275  00035E  519E               	movf	(end@i_879+1)& (0+255),w,b
  5276  000360  E109               	bnz	u2900
  5277  000362  0E08               	movlw	8
  5278  000364  5D9D               	subwf	end@i_879& (0+255),w,b
  5279  000366  A0D8               	btfss	status,0,c
  5280  000368  EFB8  F001         	goto	u2901
  5281  00036C  EFBA  F001         	goto	u2900
  5282  000370                     u2901:
  5283  000370  EF5A  F001         	goto	l3550
  5284  000374                     u2900:
  5285  000374  EF32  F005         	goto	l3656
  5286  000378                     l3556:
  5287                           
  5288                           ; BSR set to: 0
  5289                           ;main.c: 263:                 for(int i=0;i<8;i++){
  5290  000378  0E00               	movlw	0
  5291  00037A  6FA0               	movwf	(end@i_880+1)& (0+255),b
  5292  00037C  0E00               	movlw	0
  5293  00037E  6F9F               	movwf	end@i_880& (0+255),b
  5294  000380                     l3558:
  5295                           
  5296                           ; BSR set to: 0
  5297  000380  BFA0               	btfsc	(end@i_880+1)& (0+255),7,b
  5298  000382  EFCC  F001         	goto	u2911
  5299  000386  51A0               	movf	(end@i_880+1)& (0+255),w,b
  5300  000388  E109               	bnz	u2910
  5301  00038A  0E08               	movlw	8
  5302  00038C  5D9F               	subwf	end@i_880& (0+255),w,b
  5303  00038E  A0D8               	btfss	status,0,c
  5304  000390  EFCC  F001         	goto	u2911
  5305  000394  EFCE  F001         	goto	u2910
  5306  000398                     u2911:
  5307  000398  EFD0  F001         	goto	l3562
  5308  00039C                     u2910:
  5309  00039C  EF32  F005         	goto	l3656
  5310  0003A0                     l3562:
  5311                           
  5312                           ; BSR set to: 0
  5313                           ;main.c: 264:                     row[i] = row[i]|(num3[i]*shift);
  5314  0003A0  0ED3               	movlw	low _row
  5315  0003A2  6F87               	movwf	??_end& (0+255),b
  5316  0003A4  0E00               	movlw	high _row
  5317  0003A6  6F88               	movwf	(??_end+1)& (0+255),b
  5318  0003A8  90D8               	bcf	status,0,c
  5319  0003AA  359F               	rlcf	end@i_880& (0+255),w,b
  5320  0003AC  6ED9               	movwf	fsr2l,c
  5321  0003AE  35A0               	rlcf	(end@i_880+1)& (0+255),w,b
  5322  0003B0  6EDA               	movwf	fsr2h,c
  5323  0003B2  90D8               	bcf	status,0,c
  5324  0003B4  36D9               	rlcf	fsr2l,f,c
  5325  0003B6  36DA               	rlcf	fsr2h,f,c
  5326  0003B8  5187               	movf	??_end& (0+255),w,b
  5327  0003BA  26D9               	addwf	fsr2l,f,c
  5328  0003BC  5188               	movf	(??_end+1)& (0+255),w,b
  5329  0003BE  22DA               	addwfc	fsr2h,f,c
  5330  0003C0  CFDE F089          	movff	postinc2,??_end+2
  5331  0003C4  CFDE F08A          	movff	postinc2,??_end+3
  5332  0003C8  CFDE F08B          	movff	postinc2,??_end+4
  5333  0003CC  CFDE F08C          	movff	postinc2,??_end+5
  5334  0003D0  90D8               	bcf	status,0,c
  5335  0003D2  359F               	rlcf	end@i_880& (0+255),w,b
  5336  0003D4  6ED9               	movwf	fsr2l,c
  5337  0003D6  35A0               	rlcf	(end@i_880+1)& (0+255),w,b
  5338  0003D8  6EDA               	movwf	fsr2h,c
  5339  0003DA  0E20               	movlw	low _num3
  5340  0003DC  26D9               	addwf	fsr2l,f,c
  5341  0003DE  0E01               	movlw	high _num3
  5342  0003E0  22DA               	addwfc	fsr2h,f,c
  5343  0003E2  CFDE F080          	movff	postinc2,___wmul@multiplier
  5344  0003E6  CFDD F081          	movff	postdec2,___wmul@multiplier+1
  5345  0003EA  C0AF  F082         	movff	end@shift,___wmul@multiplicand
  5346  0003EE  C0B0  F083         	movff	end@shift+1,___wmul@multiplicand+1
  5347  0003F2  EC37  F016         	call	___wmul	;wreg free
  5348  0003F6  0100               	movlb	0	; () banked
  5349  0003F8  5180               	movf	?___wmul& (0+255),w,b
  5350  0003FA  1189               	iorwf	(??_end+2)& (0+255),w,b
  5351  0003FC  6F8D               	movwf	(??_end+6)& (0+255),b
  5352  0003FE  5181               	movf	(?___wmul+1)& (0+255),w,b
  5353  000400  118A               	iorwf	(??_end+3)& (0+255),w,b
  5354  000402  6F8E               	movwf	(??_end+7)& (0+255),b
  5355  000404  0E00               	movlw	0
  5356  000406  118B               	iorwf	(??_end+4)& (0+255),w,b
  5357  000408  6F8F               	movwf	(??_end+8)& (0+255),b
  5358  00040A  0E00               	movlw	0
  5359  00040C  118C               	iorwf	(??_end+5)& (0+255),w,b
  5360  00040E  6F90               	movwf	(??_end+9)& (0+255),b
  5361  000410  0ED3               	movlw	low _row
  5362  000412  6F91               	movwf	(??_end+10)& (0+255),b
  5363  000414  0E00               	movlw	high _row
  5364  000416  6F92               	movwf	(??_end+11)& (0+255),b
  5365  000418  90D8               	bcf	status,0,c
  5366  00041A  359F               	rlcf	end@i_880& (0+255),w,b
  5367  00041C  6ED9               	movwf	fsr2l,c
  5368  00041E  35A0               	rlcf	(end@i_880+1)& (0+255),w,b
  5369  000420  6EDA               	movwf	fsr2h,c
  5370  000422  90D8               	bcf	status,0,c
  5371  000424  36D9               	rlcf	fsr2l,f,c
  5372  000426  36DA               	rlcf	fsr2h,f,c
  5373  000428  5191               	movf	(??_end+10)& (0+255),w,b
  5374  00042A  26D9               	addwf	fsr2l,f,c
  5375  00042C  5192               	movf	(??_end+11)& (0+255),w,b
  5376  00042E  22DA               	addwfc	fsr2h,f,c
  5377  000430  C08D  FFDE         	movff	??_end+6,postinc2
  5378  000434  C08E  FFDE         	movff	??_end+7,postinc2
  5379  000438  C08F  FFDE         	movff	??_end+8,postinc2
  5380  00043C  C090  FFDE         	movff	??_end+9,postinc2
  5381  000440                     
  5382                           ; BSR set to: 0
  5383                           ;main.c: 265:                 }
  5384  000440  4B9F               	infsnz	end@i_880& (0+255),f,b
  5385  000442  2BA0               	incf	(end@i_880+1)& (0+255),f,b
  5386  000444  EFC0  F001         	goto	l3558
  5387  000448                     l3568:
  5388                           
  5389                           ; BSR set to: 0
  5390                           ;main.c: 268:                 for(int i=0;i<8;i++){
  5391  000448  0E00               	movlw	0
  5392  00044A  6FA2               	movwf	(end@i_881+1)& (0+255),b
  5393  00044C  0E00               	movlw	0
  5394  00044E  6FA1               	movwf	end@i_881& (0+255),b
  5395  000450                     l3570:
  5396                           
  5397                           ; BSR set to: 0
  5398  000450  BFA2               	btfsc	(end@i_881+1)& (0+255),7,b
  5399  000452  EF34  F002         	goto	u2921
  5400  000456  51A2               	movf	(end@i_881+1)& (0+255),w,b
  5401  000458  E109               	bnz	u2920
  5402  00045A  0E08               	movlw	8
  5403  00045C  5DA1               	subwf	end@i_881& (0+255),w,b
  5404  00045E  A0D8               	btfss	status,0,c
  5405  000460  EF34  F002         	goto	u2921
  5406  000464  EF36  F002         	goto	u2920
  5407  000468                     u2921:
  5408  000468  EF38  F002         	goto	l3574
  5409  00046C                     u2920:
  5410  00046C  EF32  F005         	goto	l3656
  5411  000470                     l3574:
  5412                           
  5413                           ; BSR set to: 0
  5414                           ;main.c: 269:                     row[i] = row[i]|(num4[i]*shift);
  5415  000470  0ED3               	movlw	low _row
  5416  000472  6F87               	movwf	??_end& (0+255),b
  5417  000474  0E00               	movlw	high _row
  5418  000476  6F88               	movwf	(??_end+1)& (0+255),b
  5419  000478  90D8               	bcf	status,0,c
  5420  00047A  35A1               	rlcf	end@i_881& (0+255),w,b
  5421  00047C  6ED9               	movwf	fsr2l,c
  5422  00047E  35A2               	rlcf	(end@i_881+1)& (0+255),w,b
  5423  000480  6EDA               	movwf	fsr2h,c
  5424  000482  90D8               	bcf	status,0,c
  5425  000484  36D9               	rlcf	fsr2l,f,c
  5426  000486  36DA               	rlcf	fsr2h,f,c
  5427  000488  5187               	movf	??_end& (0+255),w,b
  5428  00048A  26D9               	addwf	fsr2l,f,c
  5429  00048C  5188               	movf	(??_end+1)& (0+255),w,b
  5430  00048E  22DA               	addwfc	fsr2h,f,c
  5431  000490  CFDE F089          	movff	postinc2,??_end+2
  5432  000494  CFDE F08A          	movff	postinc2,??_end+3
  5433  000498  CFDE F08B          	movff	postinc2,??_end+4
  5434  00049C  CFDE F08C          	movff	postinc2,??_end+5
  5435  0004A0  90D8               	bcf	status,0,c
  5436  0004A2  35A1               	rlcf	end@i_881& (0+255),w,b
  5437  0004A4  6ED9               	movwf	fsr2l,c
  5438  0004A6  35A2               	rlcf	(end@i_881+1)& (0+255),w,b
  5439  0004A8  6EDA               	movwf	fsr2h,c
  5440  0004AA  0E10               	movlw	low _num4
  5441  0004AC  26D9               	addwf	fsr2l,f,c
  5442  0004AE  0E01               	movlw	high _num4
  5443  0004B0  22DA               	addwfc	fsr2h,f,c
  5444  0004B2  CFDE F080          	movff	postinc2,___wmul@multiplier
  5445  0004B6  CFDD F081          	movff	postdec2,___wmul@multiplier+1
  5446  0004BA  C0AF  F082         	movff	end@shift,___wmul@multiplicand
  5447  0004BE  C0B0  F083         	movff	end@shift+1,___wmul@multiplicand+1
  5448  0004C2  EC37  F016         	call	___wmul	;wreg free
  5449  0004C6  0100               	movlb	0	; () banked
  5450  0004C8  5180               	movf	?___wmul& (0+255),w,b
  5451  0004CA  1189               	iorwf	(??_end+2)& (0+255),w,b
  5452  0004CC  6F8D               	movwf	(??_end+6)& (0+255),b
  5453  0004CE  5181               	movf	(?___wmul+1)& (0+255),w,b
  5454  0004D0  118A               	iorwf	(??_end+3)& (0+255),w,b
  5455  0004D2  6F8E               	movwf	(??_end+7)& (0+255),b
  5456  0004D4  0E00               	movlw	0
  5457  0004D6  118B               	iorwf	(??_end+4)& (0+255),w,b
  5458  0004D8  6F8F               	movwf	(??_end+8)& (0+255),b
  5459  0004DA  0E00               	movlw	0
  5460  0004DC  118C               	iorwf	(??_end+5)& (0+255),w,b
  5461  0004DE  6F90               	movwf	(??_end+9)& (0+255),b
  5462  0004E0  0ED3               	movlw	low _row
  5463  0004E2  6F91               	movwf	(??_end+10)& (0+255),b
  5464  0004E4  0E00               	movlw	high _row
  5465  0004E6  6F92               	movwf	(??_end+11)& (0+255),b
  5466  0004E8  90D8               	bcf	status,0,c
  5467  0004EA  35A1               	rlcf	end@i_881& (0+255),w,b
  5468  0004EC  6ED9               	movwf	fsr2l,c
  5469  0004EE  35A2               	rlcf	(end@i_881+1)& (0+255),w,b
  5470  0004F0  6EDA               	movwf	fsr2h,c
  5471  0004F2  90D8               	bcf	status,0,c
  5472  0004F4  36D9               	rlcf	fsr2l,f,c
  5473  0004F6  36DA               	rlcf	fsr2h,f,c
  5474  0004F8  5191               	movf	(??_end+10)& (0+255),w,b
  5475  0004FA  26D9               	addwf	fsr2l,f,c
  5476  0004FC  5192               	movf	(??_end+11)& (0+255),w,b
  5477  0004FE  22DA               	addwfc	fsr2h,f,c
  5478  000500  C08D  FFDE         	movff	??_end+6,postinc2
  5479  000504  C08E  FFDE         	movff	??_end+7,postinc2
  5480  000508  C08F  FFDE         	movff	??_end+8,postinc2
  5481  00050C  C090  FFDE         	movff	??_end+9,postinc2
  5482  000510                     
  5483                           ; BSR set to: 0
  5484                           ;main.c: 270:                 }
  5485  000510  4BA1               	infsnz	end@i_881& (0+255),f,b
  5486  000512  2BA2               	incf	(end@i_881+1)& (0+255),f,b
  5487  000514  EF28  F002         	goto	l3570
  5488  000518                     l3580:
  5489                           
  5490                           ; BSR set to: 0
  5491                           ;main.c: 273:                 for(int i=0;i<8;i++){
  5492  000518  0E00               	movlw	0
  5493  00051A  6FA4               	movwf	(end@i_882+1)& (0+255),b
  5494  00051C  0E00               	movlw	0
  5495  00051E  6FA3               	movwf	end@i_882& (0+255),b
  5496  000520                     l3582:
  5497                           
  5498                           ; BSR set to: 0
  5499  000520  BFA4               	btfsc	(end@i_882+1)& (0+255),7,b
  5500  000522  EF9C  F002         	goto	u2931
  5501  000526  51A4               	movf	(end@i_882+1)& (0+255),w,b
  5502  000528  E109               	bnz	u2930
  5503  00052A  0E08               	movlw	8
  5504  00052C  5DA3               	subwf	end@i_882& (0+255),w,b
  5505  00052E  A0D8               	btfss	status,0,c
  5506  000530  EF9C  F002         	goto	u2931
  5507  000534  EF9E  F002         	goto	u2930
  5508  000538                     u2931:
  5509  000538  EFA0  F002         	goto	l3586
  5510  00053C                     u2930:
  5511  00053C  EF32  F005         	goto	l3656
  5512  000540                     l3586:
  5513                           
  5514                           ; BSR set to: 0
  5515                           ;main.c: 274:                     row[i] = row[i]|(num5[i]*shift);
  5516  000540  0ED3               	movlw	low _row
  5517  000542  6F87               	movwf	??_end& (0+255),b
  5518  000544  0E00               	movlw	high _row
  5519  000546  6F88               	movwf	(??_end+1)& (0+255),b
  5520  000548  90D8               	bcf	status,0,c
  5521  00054A  35A3               	rlcf	end@i_882& (0+255),w,b
  5522  00054C  6ED9               	movwf	fsr2l,c
  5523  00054E  35A4               	rlcf	(end@i_882+1)& (0+255),w,b
  5524  000550  6EDA               	movwf	fsr2h,c
  5525  000552  90D8               	bcf	status,0,c
  5526  000554  36D9               	rlcf	fsr2l,f,c
  5527  000556  36DA               	rlcf	fsr2h,f,c
  5528  000558  5187               	movf	??_end& (0+255),w,b
  5529  00055A  26D9               	addwf	fsr2l,f,c
  5530  00055C  5188               	movf	(??_end+1)& (0+255),w,b
  5531  00055E  22DA               	addwfc	fsr2h,f,c
  5532  000560  CFDE F089          	movff	postinc2,??_end+2
  5533  000564  CFDE F08A          	movff	postinc2,??_end+3
  5534  000568  CFDE F08B          	movff	postinc2,??_end+4
  5535  00056C  CFDE F08C          	movff	postinc2,??_end+5
  5536  000570  90D8               	bcf	status,0,c
  5537  000572  35A3               	rlcf	end@i_882& (0+255),w,b
  5538  000574  6ED9               	movwf	fsr2l,c
  5539  000576  35A4               	rlcf	(end@i_882+1)& (0+255),w,b
  5540  000578  6EDA               	movwf	fsr2h,c
  5541  00057A  0E00               	movlw	low _num5
  5542  00057C  26D9               	addwf	fsr2l,f,c
  5543  00057E  0E01               	movlw	high _num5
  5544  000580  22DA               	addwfc	fsr2h,f,c
  5545  000582  CFDE F080          	movff	postinc2,___wmul@multiplier
  5546  000586  CFDD F081          	movff	postdec2,___wmul@multiplier+1
  5547  00058A  C0AF  F082         	movff	end@shift,___wmul@multiplicand
  5548  00058E  C0B0  F083         	movff	end@shift+1,___wmul@multiplicand+1
  5549  000592  EC37  F016         	call	___wmul	;wreg free
  5550  000596  0100               	movlb	0	; () banked
  5551  000598  5180               	movf	?___wmul& (0+255),w,b
  5552  00059A  1189               	iorwf	(??_end+2)& (0+255),w,b
  5553  00059C  6F8D               	movwf	(??_end+6)& (0+255),b
  5554  00059E  5181               	movf	(?___wmul+1)& (0+255),w,b
  5555  0005A0  118A               	iorwf	(??_end+3)& (0+255),w,b
  5556  0005A2  6F8E               	movwf	(??_end+7)& (0+255),b
  5557  0005A4  0E00               	movlw	0
  5558  0005A6  118B               	iorwf	(??_end+4)& (0+255),w,b
  5559  0005A8  6F8F               	movwf	(??_end+8)& (0+255),b
  5560  0005AA  0E00               	movlw	0
  5561  0005AC  118C               	iorwf	(??_end+5)& (0+255),w,b
  5562  0005AE  6F90               	movwf	(??_end+9)& (0+255),b
  5563  0005B0  0ED3               	movlw	low _row
  5564  0005B2  6F91               	movwf	(??_end+10)& (0+255),b
  5565  0005B4  0E00               	movlw	high _row
  5566  0005B6  6F92               	movwf	(??_end+11)& (0+255),b
  5567  0005B8  90D8               	bcf	status,0,c
  5568  0005BA  35A3               	rlcf	end@i_882& (0+255),w,b
  5569  0005BC  6ED9               	movwf	fsr2l,c
  5570  0005BE  35A4               	rlcf	(end@i_882+1)& (0+255),w,b
  5571  0005C0  6EDA               	movwf	fsr2h,c
  5572  0005C2  90D8               	bcf	status,0,c
  5573  0005C4  36D9               	rlcf	fsr2l,f,c
  5574  0005C6  36DA               	rlcf	fsr2h,f,c
  5575  0005C8  5191               	movf	(??_end+10)& (0+255),w,b
  5576  0005CA  26D9               	addwf	fsr2l,f,c
  5577  0005CC  5192               	movf	(??_end+11)& (0+255),w,b
  5578  0005CE  22DA               	addwfc	fsr2h,f,c
  5579  0005D0  C08D  FFDE         	movff	??_end+6,postinc2
  5580  0005D4  C08E  FFDE         	movff	??_end+7,postinc2
  5581  0005D8  C08F  FFDE         	movff	??_end+8,postinc2
  5582  0005DC  C090  FFDE         	movff	??_end+9,postinc2
  5583  0005E0                     
  5584                           ; BSR set to: 0
  5585                           ;main.c: 275:                 }
  5586  0005E0  4BA3               	infsnz	end@i_882& (0+255),f,b
  5587  0005E2  2BA4               	incf	(end@i_882+1)& (0+255),f,b
  5588  0005E4  EF90  F002         	goto	l3582
  5589  0005E8                     l3592:
  5590                           
  5591                           ; BSR set to: 0
  5592                           ;main.c: 278:                 for(int i=0;i<8;i++){
  5593  0005E8  0E00               	movlw	0
  5594  0005EA  6FA6               	movwf	(end@i_883+1)& (0+255),b
  5595  0005EC  0E00               	movlw	0
  5596  0005EE  6FA5               	movwf	end@i_883& (0+255),b
  5597  0005F0                     l3594:
  5598                           
  5599                           ; BSR set to: 0
  5600  0005F0  BFA6               	btfsc	(end@i_883+1)& (0+255),7,b
  5601  0005F2  EF04  F003         	goto	u2941
  5602  0005F6  51A6               	movf	(end@i_883+1)& (0+255),w,b
  5603  0005F8  E109               	bnz	u2940
  5604  0005FA  0E08               	movlw	8
  5605  0005FC  5DA5               	subwf	end@i_883& (0+255),w,b
  5606  0005FE  A0D8               	btfss	status,0,c
  5607  000600  EF04  F003         	goto	u2941
  5608  000604  EF06  F003         	goto	u2940
  5609  000608                     u2941:
  5610  000608  EF08  F003         	goto	l3598
  5611  00060C                     u2940:
  5612  00060C  EF32  F005         	goto	l3656
  5613  000610                     l3598:
  5614                           
  5615                           ; BSR set to: 0
  5616                           ;main.c: 279:                     row[i] = row[i]|(num6[i]*shift);
  5617  000610  0ED3               	movlw	low _row
  5618  000612  6F87               	movwf	??_end& (0+255),b
  5619  000614  0E00               	movlw	high _row
  5620  000616  6F88               	movwf	(??_end+1)& (0+255),b
  5621  000618  90D8               	bcf	status,0,c
  5622  00061A  35A5               	rlcf	end@i_883& (0+255),w,b
  5623  00061C  6ED9               	movwf	fsr2l,c
  5624  00061E  35A6               	rlcf	(end@i_883+1)& (0+255),w,b
  5625  000620  6EDA               	movwf	fsr2h,c
  5626  000622  90D8               	bcf	status,0,c
  5627  000624  36D9               	rlcf	fsr2l,f,c
  5628  000626  36DA               	rlcf	fsr2h,f,c
  5629  000628  5187               	movf	??_end& (0+255),w,b
  5630  00062A  26D9               	addwf	fsr2l,f,c
  5631  00062C  5188               	movf	(??_end+1)& (0+255),w,b
  5632  00062E  22DA               	addwfc	fsr2h,f,c
  5633  000630  CFDE F089          	movff	postinc2,??_end+2
  5634  000634  CFDE F08A          	movff	postinc2,??_end+3
  5635  000638  CFDE F08B          	movff	postinc2,??_end+4
  5636  00063C  CFDE F08C          	movff	postinc2,??_end+5
  5637  000640  90D8               	bcf	status,0,c
  5638  000642  35A5               	rlcf	end@i_883& (0+255),w,b
  5639  000644  6ED9               	movwf	fsr2l,c
  5640  000646  35A6               	rlcf	(end@i_883+1)& (0+255),w,b
  5641  000648  6EDA               	movwf	fsr2h,c
  5642  00064A  0EA0               	movlw	low _num6
  5643  00064C  26D9               	addwf	fsr2l,f,c
  5644  00064E  0E02               	movlw	high _num6
  5645  000650  22DA               	addwfc	fsr2h,f,c
  5646  000652  CFDE F080          	movff	postinc2,___wmul@multiplier
  5647  000656  CFDD F081          	movff	postdec2,___wmul@multiplier+1
  5648  00065A  C0AF  F082         	movff	end@shift,___wmul@multiplicand
  5649  00065E  C0B0  F083         	movff	end@shift+1,___wmul@multiplicand+1
  5650  000662  EC37  F016         	call	___wmul	;wreg free
  5651  000666  0100               	movlb	0	; () banked
  5652  000668  5180               	movf	?___wmul& (0+255),w,b
  5653  00066A  1189               	iorwf	(??_end+2)& (0+255),w,b
  5654  00066C  6F8D               	movwf	(??_end+6)& (0+255),b
  5655  00066E  5181               	movf	(?___wmul+1)& (0+255),w,b
  5656  000670  118A               	iorwf	(??_end+3)& (0+255),w,b
  5657  000672  6F8E               	movwf	(??_end+7)& (0+255),b
  5658  000674  0E00               	movlw	0
  5659  000676  118B               	iorwf	(??_end+4)& (0+255),w,b
  5660  000678  6F8F               	movwf	(??_end+8)& (0+255),b
  5661  00067A  0E00               	movlw	0
  5662  00067C  118C               	iorwf	(??_end+5)& (0+255),w,b
  5663  00067E  6F90               	movwf	(??_end+9)& (0+255),b
  5664  000680  0ED3               	movlw	low _row
  5665  000682  6F91               	movwf	(??_end+10)& (0+255),b
  5666  000684  0E00               	movlw	high _row
  5667  000686  6F92               	movwf	(??_end+11)& (0+255),b
  5668  000688  90D8               	bcf	status,0,c
  5669  00068A  35A5               	rlcf	end@i_883& (0+255),w,b
  5670  00068C  6ED9               	movwf	fsr2l,c
  5671  00068E  35A6               	rlcf	(end@i_883+1)& (0+255),w,b
  5672  000690  6EDA               	movwf	fsr2h,c
  5673  000692  90D8               	bcf	status,0,c
  5674  000694  36D9               	rlcf	fsr2l,f,c
  5675  000696  36DA               	rlcf	fsr2h,f,c
  5676  000698  5191               	movf	(??_end+10)& (0+255),w,b
  5677  00069A  26D9               	addwf	fsr2l,f,c
  5678  00069C  5192               	movf	(??_end+11)& (0+255),w,b
  5679  00069E  22DA               	addwfc	fsr2h,f,c
  5680  0006A0  C08D  FFDE         	movff	??_end+6,postinc2
  5681  0006A4  C08E  FFDE         	movff	??_end+7,postinc2
  5682  0006A8  C08F  FFDE         	movff	??_end+8,postinc2
  5683  0006AC  C090  FFDE         	movff	??_end+9,postinc2
  5684  0006B0                     
  5685                           ; BSR set to: 0
  5686                           ;main.c: 280:                 }
  5687  0006B0  4BA5               	infsnz	end@i_883& (0+255),f,b
  5688  0006B2  2BA6               	incf	(end@i_883+1)& (0+255),f,b
  5689  0006B4  EFF8  F002         	goto	l3594
  5690  0006B8                     l3604:
  5691                           
  5692                           ; BSR set to: 0
  5693                           ;main.c: 283:                 for(int i=0;i<8;i++){
  5694  0006B8  0E00               	movlw	0
  5695  0006BA  6FA8               	movwf	(end@i_884+1)& (0+255),b
  5696  0006BC  0E00               	movlw	0
  5697  0006BE  6FA7               	movwf	end@i_884& (0+255),b
  5698  0006C0                     l3606:
  5699                           
  5700                           ; BSR set to: 0
  5701  0006C0  BFA8               	btfsc	(end@i_884+1)& (0+255),7,b
  5702  0006C2  EF6C  F003         	goto	u2951
  5703  0006C6  51A8               	movf	(end@i_884+1)& (0+255),w,b
  5704  0006C8  E109               	bnz	u2950
  5705  0006CA  0E08               	movlw	8
  5706  0006CC  5DA7               	subwf	end@i_884& (0+255),w,b
  5707  0006CE  A0D8               	btfss	status,0,c
  5708  0006D0  EF6C  F003         	goto	u2951
  5709  0006D4  EF6E  F003         	goto	u2950
  5710  0006D8                     u2951:
  5711  0006D8  EF70  F003         	goto	l3610
  5712  0006DC                     u2950:
  5713  0006DC  EF32  F005         	goto	l3656
  5714  0006E0                     l3610:
  5715                           
  5716                           ; BSR set to: 0
  5717                           ;main.c: 284:                     row[i] = row[i]|(num7[i]*shift);
  5718  0006E0  0ED3               	movlw	low _row
  5719  0006E2  6F87               	movwf	??_end& (0+255),b
  5720  0006E4  0E00               	movlw	high _row
  5721  0006E6  6F88               	movwf	(??_end+1)& (0+255),b
  5722  0006E8  90D8               	bcf	status,0,c
  5723  0006EA  35A7               	rlcf	end@i_884& (0+255),w,b
  5724  0006EC  6ED9               	movwf	fsr2l,c
  5725  0006EE  35A8               	rlcf	(end@i_884+1)& (0+255),w,b
  5726  0006F0  6EDA               	movwf	fsr2h,c
  5727  0006F2  90D8               	bcf	status,0,c
  5728  0006F4  36D9               	rlcf	fsr2l,f,c
  5729  0006F6  36DA               	rlcf	fsr2h,f,c
  5730  0006F8  5187               	movf	??_end& (0+255),w,b
  5731  0006FA  26D9               	addwf	fsr2l,f,c
  5732  0006FC  5188               	movf	(??_end+1)& (0+255),w,b
  5733  0006FE  22DA               	addwfc	fsr2h,f,c
  5734  000700  CFDE F089          	movff	postinc2,??_end+2
  5735  000704  CFDE F08A          	movff	postinc2,??_end+3
  5736  000708  CFDE F08B          	movff	postinc2,??_end+4
  5737  00070C  CFDE F08C          	movff	postinc2,??_end+5
  5738  000710  90D8               	bcf	status,0,c
  5739  000712  35A7               	rlcf	end@i_884& (0+255),w,b
  5740  000714  6ED9               	movwf	fsr2l,c
  5741  000716  35A8               	rlcf	(end@i_884+1)& (0+255),w,b
  5742  000718  6EDA               	movwf	fsr2h,c
  5743  00071A  0E90               	movlw	low _num7
  5744  00071C  26D9               	addwf	fsr2l,f,c
  5745  00071E  0E02               	movlw	high _num7
  5746  000720  22DA               	addwfc	fsr2h,f,c
  5747  000722  CFDE F080          	movff	postinc2,___wmul@multiplier
  5748  000726  CFDD F081          	movff	postdec2,___wmul@multiplier+1
  5749  00072A  C0AF  F082         	movff	end@shift,___wmul@multiplicand
  5750  00072E  C0B0  F083         	movff	end@shift+1,___wmul@multiplicand+1
  5751  000732  EC37  F016         	call	___wmul	;wreg free
  5752  000736  0100               	movlb	0	; () banked
  5753  000738  5180               	movf	?___wmul& (0+255),w,b
  5754  00073A  1189               	iorwf	(??_end+2)& (0+255),w,b
  5755  00073C  6F8D               	movwf	(??_end+6)& (0+255),b
  5756  00073E  5181               	movf	(?___wmul+1)& (0+255),w,b
  5757  000740  118A               	iorwf	(??_end+3)& (0+255),w,b
  5758  000742  6F8E               	movwf	(??_end+7)& (0+255),b
  5759  000744  0E00               	movlw	0
  5760  000746  118B               	iorwf	(??_end+4)& (0+255),w,b
  5761  000748  6F8F               	movwf	(??_end+8)& (0+255),b
  5762  00074A  0E00               	movlw	0
  5763  00074C  118C               	iorwf	(??_end+5)& (0+255),w,b
  5764  00074E  6F90               	movwf	(??_end+9)& (0+255),b
  5765  000750  0ED3               	movlw	low _row
  5766  000752  6F91               	movwf	(??_end+10)& (0+255),b
  5767  000754  0E00               	movlw	high _row
  5768  000756  6F92               	movwf	(??_end+11)& (0+255),b
  5769  000758  90D8               	bcf	status,0,c
  5770  00075A  35A7               	rlcf	end@i_884& (0+255),w,b
  5771  00075C  6ED9               	movwf	fsr2l,c
  5772  00075E  35A8               	rlcf	(end@i_884+1)& (0+255),w,b
  5773  000760  6EDA               	movwf	fsr2h,c
  5774  000762  90D8               	bcf	status,0,c
  5775  000764  36D9               	rlcf	fsr2l,f,c
  5776  000766  36DA               	rlcf	fsr2h,f,c
  5777  000768  5191               	movf	(??_end+10)& (0+255),w,b
  5778  00076A  26D9               	addwf	fsr2l,f,c
  5779  00076C  5192               	movf	(??_end+11)& (0+255),w,b
  5780  00076E  22DA               	addwfc	fsr2h,f,c
  5781  000770  C08D  FFDE         	movff	??_end+6,postinc2
  5782  000774  C08E  FFDE         	movff	??_end+7,postinc2
  5783  000778  C08F  FFDE         	movff	??_end+8,postinc2
  5784  00077C  C090  FFDE         	movff	??_end+9,postinc2
  5785  000780                     
  5786                           ; BSR set to: 0
  5787                           ;main.c: 285:                 }
  5788  000780  4BA7               	infsnz	end@i_884& (0+255),f,b
  5789  000782  2BA8               	incf	(end@i_884+1)& (0+255),f,b
  5790  000784  EF60  F003         	goto	l3606
  5791  000788                     l3616:
  5792                           
  5793                           ; BSR set to: 0
  5794                           ;main.c: 288:                 for(int i=0;i<8;i++){
  5795  000788  0E00               	movlw	0
  5796  00078A  6FAA               	movwf	(end@i_885+1)& (0+255),b
  5797  00078C  0E00               	movlw	0
  5798  00078E  6FA9               	movwf	end@i_885& (0+255),b
  5799  000790                     l3618:
  5800                           
  5801                           ; BSR set to: 0
  5802  000790  BFAA               	btfsc	(end@i_885+1)& (0+255),7,b
  5803  000792  EFD4  F003         	goto	u2961
  5804  000796  51AA               	movf	(end@i_885+1)& (0+255),w,b
  5805  000798  E109               	bnz	u2960
  5806  00079A  0E08               	movlw	8
  5807  00079C  5DA9               	subwf	end@i_885& (0+255),w,b
  5808  00079E  A0D8               	btfss	status,0,c
  5809  0007A0  EFD4  F003         	goto	u2961
  5810  0007A4  EFD6  F003         	goto	u2960
  5811  0007A8                     u2961:
  5812  0007A8  EFD8  F003         	goto	l3622
  5813  0007AC                     u2960:
  5814  0007AC  EF32  F005         	goto	l3656
  5815  0007B0                     l3622:
  5816                           
  5817                           ; BSR set to: 0
  5818                           ;main.c: 289:                     row[i] = row[i]|(num8[i]*shift);
  5819  0007B0  0ED3               	movlw	low _row
  5820  0007B2  6F87               	movwf	??_end& (0+255),b
  5821  0007B4  0E00               	movlw	high _row
  5822  0007B6  6F88               	movwf	(??_end+1)& (0+255),b
  5823  0007B8  90D8               	bcf	status,0,c
  5824  0007BA  35A9               	rlcf	end@i_885& (0+255),w,b
  5825  0007BC  6ED9               	movwf	fsr2l,c
  5826  0007BE  35AA               	rlcf	(end@i_885+1)& (0+255),w,b
  5827  0007C0  6EDA               	movwf	fsr2h,c
  5828  0007C2  90D8               	bcf	status,0,c
  5829  0007C4  36D9               	rlcf	fsr2l,f,c
  5830  0007C6  36DA               	rlcf	fsr2h,f,c
  5831  0007C8  5187               	movf	??_end& (0+255),w,b
  5832  0007CA  26D9               	addwf	fsr2l,f,c
  5833  0007CC  5188               	movf	(??_end+1)& (0+255),w,b
  5834  0007CE  22DA               	addwfc	fsr2h,f,c
  5835  0007D0  CFDE F089          	movff	postinc2,??_end+2
  5836  0007D4  CFDE F08A          	movff	postinc2,??_end+3
  5837  0007D8  CFDE F08B          	movff	postinc2,??_end+4
  5838  0007DC  CFDE F08C          	movff	postinc2,??_end+5
  5839  0007E0  90D8               	bcf	status,0,c
  5840  0007E2  35A9               	rlcf	end@i_885& (0+255),w,b
  5841  0007E4  6ED9               	movwf	fsr2l,c
  5842  0007E6  35AA               	rlcf	(end@i_885+1)& (0+255),w,b
  5843  0007E8  6EDA               	movwf	fsr2h,c
  5844  0007EA  0E80               	movlw	low _num8
  5845  0007EC  26D9               	addwf	fsr2l,f,c
  5846  0007EE  0E02               	movlw	high _num8
  5847  0007F0  22DA               	addwfc	fsr2h,f,c
  5848  0007F2  CFDE F080          	movff	postinc2,___wmul@multiplier
  5849  0007F6  CFDD F081          	movff	postdec2,___wmul@multiplier+1
  5850  0007FA  C0AF  F082         	movff	end@shift,___wmul@multiplicand
  5851  0007FE  C0B0  F083         	movff	end@shift+1,___wmul@multiplicand+1
  5852  000802  EC37  F016         	call	___wmul	;wreg free
  5853  000806  0100               	movlb	0	; () banked
  5854  000808  5180               	movf	?___wmul& (0+255),w,b
  5855  00080A  1189               	iorwf	(??_end+2)& (0+255),w,b
  5856  00080C  6F8D               	movwf	(??_end+6)& (0+255),b
  5857  00080E  5181               	movf	(?___wmul+1)& (0+255),w,b
  5858  000810  118A               	iorwf	(??_end+3)& (0+255),w,b
  5859  000812  6F8E               	movwf	(??_end+7)& (0+255),b
  5860  000814  0E00               	movlw	0
  5861  000816  118B               	iorwf	(??_end+4)& (0+255),w,b
  5862  000818  6F8F               	movwf	(??_end+8)& (0+255),b
  5863  00081A  0E00               	movlw	0
  5864  00081C  118C               	iorwf	(??_end+5)& (0+255),w,b
  5865  00081E  6F90               	movwf	(??_end+9)& (0+255),b
  5866  000820  0ED3               	movlw	low _row
  5867  000822  6F91               	movwf	(??_end+10)& (0+255),b
  5868  000824  0E00               	movlw	high _row
  5869  000826  6F92               	movwf	(??_end+11)& (0+255),b
  5870  000828  90D8               	bcf	status,0,c
  5871  00082A  35A9               	rlcf	end@i_885& (0+255),w,b
  5872  00082C  6ED9               	movwf	fsr2l,c
  5873  00082E  35AA               	rlcf	(end@i_885+1)& (0+255),w,b
  5874  000830  6EDA               	movwf	fsr2h,c
  5875  000832  90D8               	bcf	status,0,c
  5876  000834  36D9               	rlcf	fsr2l,f,c
  5877  000836  36DA               	rlcf	fsr2h,f,c
  5878  000838  5191               	movf	(??_end+10)& (0+255),w,b
  5879  00083A  26D9               	addwf	fsr2l,f,c
  5880  00083C  5192               	movf	(??_end+11)& (0+255),w,b
  5881  00083E  22DA               	addwfc	fsr2h,f,c
  5882  000840  C08D  FFDE         	movff	??_end+6,postinc2
  5883  000844  C08E  FFDE         	movff	??_end+7,postinc2
  5884  000848  C08F  FFDE         	movff	??_end+8,postinc2
  5885  00084C  C090  FFDE         	movff	??_end+9,postinc2
  5886  000850                     
  5887                           ; BSR set to: 0
  5888                           ;main.c: 290:                 }
  5889  000850  4BA9               	infsnz	end@i_885& (0+255),f,b
  5890  000852  2BAA               	incf	(end@i_885+1)& (0+255),f,b
  5891  000854  EFC8  F003         	goto	l3618
  5892  000858                     l3628:
  5893                           
  5894                           ; BSR set to: 0
  5895                           ;main.c: 293:                 for(int i=0;i<8;i++){
  5896  000858  0E00               	movlw	0
  5897  00085A  6FAC               	movwf	(end@i_886+1)& (0+255),b
  5898  00085C  0E00               	movlw	0
  5899  00085E  6FAB               	movwf	end@i_886& (0+255),b
  5900  000860                     l3630:
  5901                           
  5902                           ; BSR set to: 0
  5903  000860  BFAC               	btfsc	(end@i_886+1)& (0+255),7,b
  5904  000862  EF3C  F004         	goto	u2971
  5905  000866  51AC               	movf	(end@i_886+1)& (0+255),w,b
  5906  000868  E109               	bnz	u2970
  5907  00086A  0E08               	movlw	8
  5908  00086C  5DAB               	subwf	end@i_886& (0+255),w,b
  5909  00086E  A0D8               	btfss	status,0,c
  5910  000870  EF3C  F004         	goto	u2971
  5911  000874  EF3E  F004         	goto	u2970
  5912  000878                     u2971:
  5913  000878  EF40  F004         	goto	l3634
  5914  00087C                     u2970:
  5915  00087C  EF32  F005         	goto	l3656
  5916  000880                     l3634:
  5917                           
  5918                           ; BSR set to: 0
  5919                           ;main.c: 294:                     row[i] = row[i]|(num9[i]*shift);
  5920  000880  0ED3               	movlw	low _row
  5921  000882  6F87               	movwf	??_end& (0+255),b
  5922  000884  0E00               	movlw	high _row
  5923  000886  6F88               	movwf	(??_end+1)& (0+255),b
  5924  000888  90D8               	bcf	status,0,c
  5925  00088A  35AB               	rlcf	end@i_886& (0+255),w,b
  5926  00088C  6ED9               	movwf	fsr2l,c
  5927  00088E  35AC               	rlcf	(end@i_886+1)& (0+255),w,b
  5928  000890  6EDA               	movwf	fsr2h,c
  5929  000892  90D8               	bcf	status,0,c
  5930  000894  36D9               	rlcf	fsr2l,f,c
  5931  000896  36DA               	rlcf	fsr2h,f,c
  5932  000898  5187               	movf	??_end& (0+255),w,b
  5933  00089A  26D9               	addwf	fsr2l,f,c
  5934  00089C  5188               	movf	(??_end+1)& (0+255),w,b
  5935  00089E  22DA               	addwfc	fsr2h,f,c
  5936  0008A0  CFDE F089          	movff	postinc2,??_end+2
  5937  0008A4  CFDE F08A          	movff	postinc2,??_end+3
  5938  0008A8  CFDE F08B          	movff	postinc2,??_end+4
  5939  0008AC  CFDE F08C          	movff	postinc2,??_end+5
  5940  0008B0  90D8               	bcf	status,0,c
  5941  0008B2  35AB               	rlcf	end@i_886& (0+255),w,b
  5942  0008B4  6ED9               	movwf	fsr2l,c
  5943  0008B6  35AC               	rlcf	(end@i_886+1)& (0+255),w,b
  5944  0008B8  6EDA               	movwf	fsr2h,c
  5945  0008BA  0E70               	movlw	low _num9
  5946  0008BC  26D9               	addwf	fsr2l,f,c
  5947  0008BE  0E02               	movlw	high _num9
  5948  0008C0  22DA               	addwfc	fsr2h,f,c
  5949  0008C2  CFDE F080          	movff	postinc2,___wmul@multiplier
  5950  0008C6  CFDD F081          	movff	postdec2,___wmul@multiplier+1
  5951  0008CA  C0AF  F082         	movff	end@shift,___wmul@multiplicand
  5952  0008CE  C0B0  F083         	movff	end@shift+1,___wmul@multiplicand+1
  5953  0008D2  EC37  F016         	call	___wmul	;wreg free
  5954  0008D6  0100               	movlb	0	; () banked
  5955  0008D8  5180               	movf	?___wmul& (0+255),w,b
  5956  0008DA  1189               	iorwf	(??_end+2)& (0+255),w,b
  5957  0008DC  6F8D               	movwf	(??_end+6)& (0+255),b
  5958  0008DE  5181               	movf	(?___wmul+1)& (0+255),w,b
  5959  0008E0  118A               	iorwf	(??_end+3)& (0+255),w,b
  5960  0008E2  6F8E               	movwf	(??_end+7)& (0+255),b
  5961  0008E4  0E00               	movlw	0
  5962  0008E6  118B               	iorwf	(??_end+4)& (0+255),w,b
  5963  0008E8  6F8F               	movwf	(??_end+8)& (0+255),b
  5964  0008EA  0E00               	movlw	0
  5965  0008EC  118C               	iorwf	(??_end+5)& (0+255),w,b
  5966  0008EE  6F90               	movwf	(??_end+9)& (0+255),b
  5967  0008F0  0ED3               	movlw	low _row
  5968  0008F2  6F91               	movwf	(??_end+10)& (0+255),b
  5969  0008F4  0E00               	movlw	high _row
  5970  0008F6  6F92               	movwf	(??_end+11)& (0+255),b
  5971  0008F8  90D8               	bcf	status,0,c
  5972  0008FA  35AB               	rlcf	end@i_886& (0+255),w,b
  5973  0008FC  6ED9               	movwf	fsr2l,c
  5974  0008FE  35AC               	rlcf	(end@i_886+1)& (0+255),w,b
  5975  000900  6EDA               	movwf	fsr2h,c
  5976  000902  90D8               	bcf	status,0,c
  5977  000904  36D9               	rlcf	fsr2l,f,c
  5978  000906  36DA               	rlcf	fsr2h,f,c
  5979  000908  5191               	movf	(??_end+10)& (0+255),w,b
  5980  00090A  26D9               	addwf	fsr2l,f,c
  5981  00090C  5192               	movf	(??_end+11)& (0+255),w,b
  5982  00090E  22DA               	addwfc	fsr2h,f,c
  5983  000910  C08D  FFDE         	movff	??_end+6,postinc2
  5984  000914  C08E  FFDE         	movff	??_end+7,postinc2
  5985  000918  C08F  FFDE         	movff	??_end+8,postinc2
  5986  00091C  C090  FFDE         	movff	??_end+9,postinc2
  5987  000920                     
  5988                           ; BSR set to: 0
  5989                           ;main.c: 295:                 }
  5990  000920  4BAB               	infsnz	end@i_886& (0+255),f,b
  5991  000922  2BAC               	incf	(end@i_886+1)& (0+255),f,b
  5992  000924  EF30  F004         	goto	l3630
  5993  000928                     l3640:
  5994                           
  5995                           ; BSR set to: 0
  5996                           ;main.c: 298:                 for(int i=0;i<8;i++){
  5997  000928  0E00               	movlw	0
  5998  00092A  6FAE               	movwf	(end@i_887+1)& (0+255),b
  5999  00092C  0E00               	movlw	0
  6000  00092E  6FAD               	movwf	end@i_887& (0+255),b
  6001  000930                     l3642:
  6002                           
  6003                           ; BSR set to: 0
  6004  000930  BFAE               	btfsc	(end@i_887+1)& (0+255),7,b
  6005  000932  EFA4  F004         	goto	u2981
  6006  000936  51AE               	movf	(end@i_887+1)& (0+255),w,b
  6007  000938  E109               	bnz	u2980
  6008  00093A  0E08               	movlw	8
  6009  00093C  5DAD               	subwf	end@i_887& (0+255),w,b
  6010  00093E  A0D8               	btfss	status,0,c
  6011  000940  EFA4  F004         	goto	u2981
  6012  000944  EFA6  F004         	goto	u2980
  6013  000948                     u2981:
  6014  000948  EFA8  F004         	goto	l3646
  6015  00094C                     u2980:
  6016  00094C  EF32  F005         	goto	l3656
  6017  000950                     l3646:
  6018                           
  6019                           ; BSR set to: 0
  6020                           ;main.c: 299:                     row[i] = row[i]|(num0[i]*shift);
  6021  000950  0ED3               	movlw	low _row
  6022  000952  6F87               	movwf	??_end& (0+255),b
  6023  000954  0E00               	movlw	high _row
  6024  000956  6F88               	movwf	(??_end+1)& (0+255),b
  6025  000958  90D8               	bcf	status,0,c
  6026  00095A  35AD               	rlcf	end@i_887& (0+255),w,b
  6027  00095C  6ED9               	movwf	fsr2l,c
  6028  00095E  35AE               	rlcf	(end@i_887+1)& (0+255),w,b
  6029  000960  6EDA               	movwf	fsr2h,c
  6030  000962  90D8               	bcf	status,0,c
  6031  000964  36D9               	rlcf	fsr2l,f,c
  6032  000966  36DA               	rlcf	fsr2h,f,c
  6033  000968  5187               	movf	??_end& (0+255),w,b
  6034  00096A  26D9               	addwf	fsr2l,f,c
  6035  00096C  5188               	movf	(??_end+1)& (0+255),w,b
  6036  00096E  22DA               	addwfc	fsr2h,f,c
  6037  000970  CFDE F089          	movff	postinc2,??_end+2
  6038  000974  CFDE F08A          	movff	postinc2,??_end+3
  6039  000978  CFDE F08B          	movff	postinc2,??_end+4
  6040  00097C  CFDE F08C          	movff	postinc2,??_end+5
  6041  000980  90D8               	bcf	status,0,c
  6042  000982  35AD               	rlcf	end@i_887& (0+255),w,b
  6043  000984  6ED9               	movwf	fsr2l,c
  6044  000986  35AE               	rlcf	(end@i_887+1)& (0+255),w,b
  6045  000988  6EDA               	movwf	fsr2h,c
  6046  00098A  0E60               	movlw	low _num0
  6047  00098C  26D9               	addwf	fsr2l,f,c
  6048  00098E  0E02               	movlw	high _num0
  6049  000990  22DA               	addwfc	fsr2h,f,c
  6050  000992  CFDE F080          	movff	postinc2,___wmul@multiplier
  6051  000996  CFDD F081          	movff	postdec2,___wmul@multiplier+1
  6052  00099A  C0AF  F082         	movff	end@shift,___wmul@multiplicand
  6053  00099E  C0B0  F083         	movff	end@shift+1,___wmul@multiplicand+1
  6054  0009A2  EC37  F016         	call	___wmul	;wreg free
  6055  0009A6  0100               	movlb	0	; () banked
  6056  0009A8  5180               	movf	?___wmul& (0+255),w,b
  6057  0009AA  1189               	iorwf	(??_end+2)& (0+255),w,b
  6058  0009AC  6F8D               	movwf	(??_end+6)& (0+255),b
  6059  0009AE  5181               	movf	(?___wmul+1)& (0+255),w,b
  6060  0009B0  118A               	iorwf	(??_end+3)& (0+255),w,b
  6061  0009B2  6F8E               	movwf	(??_end+7)& (0+255),b
  6062  0009B4  0E00               	movlw	0
  6063  0009B6  118B               	iorwf	(??_end+4)& (0+255),w,b
  6064  0009B8  6F8F               	movwf	(??_end+8)& (0+255),b
  6065  0009BA  0E00               	movlw	0
  6066  0009BC  118C               	iorwf	(??_end+5)& (0+255),w,b
  6067  0009BE  6F90               	movwf	(??_end+9)& (0+255),b
  6068  0009C0  0ED3               	movlw	low _row
  6069  0009C2  6F91               	movwf	(??_end+10)& (0+255),b
  6070  0009C4  0E00               	movlw	high _row
  6071  0009C6  6F92               	movwf	(??_end+11)& (0+255),b
  6072  0009C8  90D8               	bcf	status,0,c
  6073  0009CA  35AD               	rlcf	end@i_887& (0+255),w,b
  6074  0009CC  6ED9               	movwf	fsr2l,c
  6075  0009CE  35AE               	rlcf	(end@i_887+1)& (0+255),w,b
  6076  0009D0  6EDA               	movwf	fsr2h,c
  6077  0009D2  90D8               	bcf	status,0,c
  6078  0009D4  36D9               	rlcf	fsr2l,f,c
  6079  0009D6  36DA               	rlcf	fsr2h,f,c
  6080  0009D8  5191               	movf	(??_end+10)& (0+255),w,b
  6081  0009DA  26D9               	addwf	fsr2l,f,c
  6082  0009DC  5192               	movf	(??_end+11)& (0+255),w,b
  6083  0009DE  22DA               	addwfc	fsr2h,f,c
  6084  0009E0  C08D  FFDE         	movff	??_end+6,postinc2
  6085  0009E4  C08E  FFDE         	movff	??_end+7,postinc2
  6086  0009E8  C08F  FFDE         	movff	??_end+8,postinc2
  6087  0009EC  C090  FFDE         	movff	??_end+9,postinc2
  6088  0009F0                     
  6089                           ; BSR set to: 0
  6090                           ;main.c: 300:                 }
  6091  0009F0  4BAD               	infsnz	end@i_887& (0+255),f,b
  6092  0009F2  2BAE               	incf	(end@i_887+1)& (0+255),f,b
  6093  0009F4  EF98  F004         	goto	l3642
  6094  0009F8                     l3654:
  6095                           
  6096                           ; BSR set to: 0
  6097  0009F8  C093  F087         	movff	end@num,??_end
  6098  0009FC  C094  F088         	movff	end@num+1,??_end+1
  6099                           
  6100                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6101                           ; Switch size 1, requested type "simple"
  6102                           ; Number of cases is 1, Range of values is 0 to 0
  6103                           ; switch strategies available:
  6104                           ; Name         Instructions Cycles
  6105                           ; simple_byte            4     3 (average)
  6106                           ;	Chosen strategy is simple_byte
  6107  000A00  5188               	movf	(??_end+1)& (0+255),w,b
  6108  000A02  0A00               	xorlw	0	; case 0
  6109  000A04  B4D8               	btfsc	status,2,c
  6110  000A06  EF07  F005         	goto	l4378
  6111  000A0A  EF32  F005         	goto	l3656
  6112  000A0E                     l4378:
  6113                           
  6114                           ; BSR set to: 0
  6115                           ; Switch size 1, requested type "simple"
  6116                           ; Number of cases is 10, Range of values is 0 to 9
  6117                           ; switch strategies available:
  6118                           ; Name         Instructions Cycles
  6119                           ; simple_byte           31    16 (average)
  6120                           ;	Chosen strategy is simple_byte
  6121  000A0E  5187               	movf	??_end& (0+255),w,b
  6122  000A10  0A00               	xorlw	0	; case 0
  6123  000A12  B4D8               	btfsc	status,2,c
  6124  000A14  EF94  F004         	goto	l3640
  6125  000A18  0A01               	xorlw	1	; case 1
  6126  000A1A  B4D8               	btfsc	status,2,c
  6127  000A1C  EFF0  F000         	goto	l3532
  6128  000A20  0A03               	xorlw	3	; case 2
  6129  000A22  B4D8               	btfsc	status,2,c
  6130  000A24  EF56  F001         	goto	l3544
  6131  000A28  0A01               	xorlw	1	; case 3
  6132  000A2A  B4D8               	btfsc	status,2,c
  6133  000A2C  EFBC  F001         	goto	l3556
  6134  000A30  0A07               	xorlw	7	; case 4
  6135  000A32  B4D8               	btfsc	status,2,c
  6136  000A34  EF24  F002         	goto	l3568
  6137  000A38  0A01               	xorlw	1	; case 5
  6138  000A3A  B4D8               	btfsc	status,2,c
  6139  000A3C  EF8C  F002         	goto	l3580
  6140  000A40  0A03               	xorlw	3	; case 6
  6141  000A42  B4D8               	btfsc	status,2,c
  6142  000A44  EFF4  F002         	goto	l3592
  6143  000A48  0A01               	xorlw	1	; case 7
  6144  000A4A  B4D8               	btfsc	status,2,c
  6145  000A4C  EF5C  F003         	goto	l3604
  6146  000A50  0A0F               	xorlw	15	; case 8
  6147  000A52  B4D8               	btfsc	status,2,c
  6148  000A54  EFC4  F003         	goto	l3616
  6149  000A58  0A01               	xorlw	1	; case 9
  6150  000A5A  B4D8               	btfsc	status,2,c
  6151  000A5C  EF2C  F004         	goto	l3628
  6152  000A60  EF32  F005         	goto	l3656
  6153  000A64                     l3656:
  6154                           
  6155                           ; BSR set to: 0
  6156                           ;main.c: 303:         score = score/10;
  6157  000A64  C0F7  F080         	movff	_score,___lwdiv@dividend
  6158  000A68  C0F8  F081         	movff	_score+1,___lwdiv@dividend+1
  6159  000A6C  0E00               	movlw	0
  6160  000A6E  6F83               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6161  000A70  0E0A               	movlw	10
  6162  000A72  6F82               	movwf	___lwdiv@divisor& (0+255),b
  6163  000A74  EC04  F015         	call	___lwdiv	;wreg free
  6164  000A78  C080  F0F7         	movff	?___lwdiv,_score
  6165  000A7C  C081  F0F8         	movff	?___lwdiv+1,_score+1
  6166  000A80                     
  6167                           ;main.c: 304:         if(score == 0){
  6168  000A80  0100               	movlb	0	; () banked
  6169  000A82  51F7               	movf	_score& (0+255),w,b
  6170  000A84  11F8               	iorwf	(_score+1)& (0+255),w,b
  6171  000A86  A4D8               	btfss	status,2,c
  6172  000A88  EF48  F005         	goto	u2991
  6173  000A8C  EF4A  F005         	goto	u2990
  6174  000A90                     u2991:
  6175  000A90  EF4C  F005         	goto	l3662
  6176  000A94                     u2990:
  6177  000A94  EF5C  F005         	goto	l269
  6178  000A98                     l3662:
  6179                           
  6180                           ; BSR set to: 0
  6181                           ;main.c: 307:     }
  6182  000A98  4B99               	infsnz	end@j& (0+255),f,b
  6183  000A9A  2B9A               	incf	(end@j+1)& (0+255),f,b
  6184  000A9C                     
  6185                           ; BSR set to: 0
  6186  000A9C  BF9A               	btfsc	(end@j+1)& (0+255),7,b
  6187  000A9E  EF5A  F005         	goto	u3001
  6188  000AA2  519A               	movf	(end@j+1)& (0+255),w,b
  6189  000AA4  E109               	bnz	u3000
  6190  000AA6  0E03               	movlw	3
  6191  000AA8  5D99               	subwf	end@j& (0+255),w,b
  6192  000AAA  A0D8               	btfss	status,0,c
  6193  000AAC  EF5A  F005         	goto	u3001
  6194  000AB0  EF5C  F005         	goto	u3000
  6195  000AB4                     u3001:
  6196  000AB4  EFB1  F000         	goto	l3518
  6197  000AB8                     u3000:
  6198  000AB8                     l269:
  6199                           
  6200                           ; BSR set to: 0
  6201  000AB8  0012               	return		;funcret
  6202  000ABA                     __end_of_end:
  6203                           	opt callstack 0
  6204                           
  6205 ;; *************** function ___wmul *****************
  6206 ;; Defined at:
  6207 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  6208 ;; Parameters:    Size  Location     Type
  6209 ;;  multiplier      2    0[BANK0 ] unsigned int 
  6210 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  6211 ;; Auto vars:     Size  Location     Type
  6212 ;;  product         2    4[BANK0 ] unsigned int 
  6213 ;; Return value:  Size  Location     Type
  6214 ;;                  2    0[BANK0 ] unsigned int 
  6215 ;; Registers used:
  6216 ;;		wreg, status,2, status,0, prodl, prodh
  6217 ;; Tracked objects:
  6218 ;;		On entry : 0/0
  6219 ;;		On exit  : 0/0
  6220 ;;		Unchanged: 0/0
  6221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6222 ;;      Params:         0       4       0       0       0       0       0
  6223 ;;      Locals:         0       2       0       0       0       0       0
  6224 ;;      Temps:          0       0       0       0       0       0       0
  6225 ;;      Totals:         0       6       0       0       0       0       0
  6226 ;;Total ram usage:        6 bytes
  6227 ;; Hardware stack levels used:    1
  6228 ;; Hardware stack levels required when called:    3
  6229 ;; This function calls:
  6230 ;;		Nothing
  6231 ;; This function is called by:
  6232 ;;		_end
  6233 ;; This function uses a non-reentrant model
  6234 ;;
  6235                           
  6236                           	psect	text8
  6237  002C6E                     __ptext8:
  6238                           	opt callstack 0
  6239  002C6E                     ___wmul:
  6240                           	opt callstack 25
  6241  002C6E  0100               	movlb	0	; () banked
  6242  002C70  5180               	movf	___wmul@multiplier& (0+255),w,b
  6243  002C72  0382               	mulwf	___wmul@multiplicand& (0+255),b
  6244  002C74  CFF3 F084          	movff	prodl,___wmul@product
  6245  002C78  CFF4 F085          	movff	prodh,___wmul@product+1
  6246  002C7C  5180               	movf	___wmul@multiplier& (0+255),w,b
  6247  002C7E  0383               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  6248  002C80  50F3               	movf	243,w,c
  6249  002C82  2785               	addwf	(___wmul@product+1)& (0+255),f,b
  6250  002C84  5181               	movf	(___wmul@multiplier+1)& (0+255),w,b
  6251  002C86  0382               	mulwf	___wmul@multiplicand& (0+255),b
  6252  002C88  50F3               	movf	243,w,c
  6253  002C8A  2785               	addwf	(___wmul@product+1)& (0+255),f,b
  6254  002C8C                     
  6255                           ; BSR set to: 0
  6256  002C8C  C084  F080         	movff	___wmul@product,?___wmul
  6257  002C90  C085  F081         	movff	___wmul@product+1,?___wmul+1
  6258  002C94                     
  6259                           ; BSR set to: 0
  6260  002C94  0012               	return		;funcret
  6261  002C96                     __end_of___wmul:
  6262                           	opt callstack 0
  6263                           
  6264 ;; *************** function ___lwmod *****************
  6265 ;; Defined at:
  6266 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwmod.c"
  6267 ;; Parameters:    Size  Location     Type
  6268 ;;  dividend        2    0[BANK0 ] unsigned int 
  6269 ;;  divisor         2    2[BANK0 ] unsigned int 
  6270 ;; Auto vars:     Size  Location     Type
  6271 ;;  counter         1    4[BANK0 ] unsigned char 
  6272 ;; Return value:  Size  Location     Type
  6273 ;;                  2    0[BANK0 ] unsigned int 
  6274 ;; Registers used:
  6275 ;;		wreg, status,2, status,0
  6276 ;; Tracked objects:
  6277 ;;		On entry : 0/0
  6278 ;;		On exit  : 0/0
  6279 ;;		Unchanged: 0/0
  6280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6281 ;;      Params:         0       4       0       0       0       0       0
  6282 ;;      Locals:         0       1       0       0       0       0       0
  6283 ;;      Temps:          0       0       0       0       0       0       0
  6284 ;;      Totals:         0       5       0       0       0       0       0
  6285 ;;Total ram usage:        5 bytes
  6286 ;; Hardware stack levels used:    1
  6287 ;; Hardware stack levels required when called:    3
  6288 ;; This function calls:
  6289 ;;		Nothing
  6290 ;; This function is called by:
  6291 ;;		_end
  6292 ;; This function uses a non-reentrant model
  6293 ;;
  6294                           
  6295                           	psect	text9
  6296  002AEA                     __ptext9:
  6297                           	opt callstack 0
  6298  002AEA                     ___lwmod:
  6299                           	opt callstack 25
  6300  002AEA  0100               	movlb	0	; () banked
  6301  002AEC  5182               	movf	___lwmod@divisor& (0+255),w,b
  6302  002AEE  1183               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  6303  002AF0  B4D8               	btfsc	status,2,c
  6304  002AF2  EF7D  F015         	goto	u2801
  6305  002AF6  EF7F  F015         	goto	u2800
  6306  002AFA                     u2801:
  6307  002AFA  EFA3  F015         	goto	l934
  6308  002AFE                     u2800:
  6309  002AFE                     
  6310                           ; BSR set to: 0
  6311  002AFE  0E01               	movlw	1
  6312  002B00  6F84               	movwf	___lwmod@counter& (0+255),b
  6313  002B02  EF87  F015         	goto	l3460
  6314  002B06                     l3458:
  6315                           
  6316                           ; BSR set to: 0
  6317  002B06  90D8               	bcf	status,0,c
  6318  002B08  3782               	rlcf	___lwmod@divisor& (0+255),f,b
  6319  002B0A  3783               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  6320  002B0C  2B84               	incf	___lwmod@counter& (0+255),f,b
  6321  002B0E                     l3460:
  6322                           
  6323                           ; BSR set to: 0
  6324  002B0E  AF83               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  6325  002B10  EF8C  F015         	goto	u2811
  6326  002B14  EF8E  F015         	goto	u2810
  6327  002B18                     u2811:
  6328  002B18  EF83  F015         	goto	l3458
  6329  002B1C                     u2810:
  6330  002B1C                     l3462:
  6331                           
  6332                           ; BSR set to: 0
  6333  002B1C  5182               	movf	___lwmod@divisor& (0+255),w,b
  6334  002B1E  5D80               	subwf	___lwmod@dividend& (0+255),w,b
  6335  002B20  5183               	movf	(___lwmod@divisor+1)& (0+255),w,b
  6336  002B22  5981               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  6337  002B24  A0D8               	btfss	status,0,c
  6338  002B26  EF97  F015         	goto	u2821
  6339  002B2A  EF99  F015         	goto	u2820
  6340  002B2E                     u2821:
  6341  002B2E  EF9D  F015         	goto	l3466
  6342  002B32                     u2820:
  6343  002B32                     
  6344                           ; BSR set to: 0
  6345  002B32  5182               	movf	___lwmod@divisor& (0+255),w,b
  6346  002B34  5F80               	subwf	___lwmod@dividend& (0+255),f,b
  6347  002B36  5183               	movf	(___lwmod@divisor+1)& (0+255),w,b
  6348  002B38  5B81               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  6349  002B3A                     l3466:
  6350                           
  6351                           ; BSR set to: 0
  6352  002B3A  90D8               	bcf	status,0,c
  6353  002B3C  3383               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  6354  002B3E  3382               	rrcf	___lwmod@divisor& (0+255),f,b
  6355  002B40                     
  6356                           ; BSR set to: 0
  6357  002B40  2F84               	decfsz	___lwmod@counter& (0+255),f,b
  6358  002B42  EF8E  F015         	goto	l3462
  6359  002B46                     l934:
  6360                           
  6361                           ; BSR set to: 0
  6362  002B46  C080  F080         	movff	___lwmod@dividend,?___lwmod
  6363  002B4A  C081  F081         	movff	___lwmod@dividend+1,?___lwmod+1
  6364  002B4E                     
  6365                           ; BSR set to: 0
  6366  002B4E  0012               	return		;funcret
  6367  002B50                     __end_of___lwmod:
  6368                           	opt callstack 0
  6369                           
  6370 ;; *************** function ___lwdiv *****************
  6371 ;; Defined at:
  6372 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwdiv.c"
  6373 ;; Parameters:    Size  Location     Type
  6374 ;;  dividend        2    0[BANK0 ] unsigned int 
  6375 ;;  divisor         2    2[BANK0 ] unsigned int 
  6376 ;; Auto vars:     Size  Location     Type
  6377 ;;  quotient        2    5[BANK0 ] unsigned int 
  6378 ;;  counter         1    4[BANK0 ] unsigned char 
  6379 ;; Return value:  Size  Location     Type
  6380 ;;                  2    0[BANK0 ] unsigned int 
  6381 ;; Registers used:
  6382 ;;		wreg, status,2, status,0
  6383 ;; Tracked objects:
  6384 ;;		On entry : 0/0
  6385 ;;		On exit  : 0/0
  6386 ;;		Unchanged: 0/0
  6387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6388 ;;      Params:         0       4       0       0       0       0       0
  6389 ;;      Locals:         0       3       0       0       0       0       0
  6390 ;;      Temps:          0       0       0       0       0       0       0
  6391 ;;      Totals:         0       7       0       0       0       0       0
  6392 ;;Total ram usage:        7 bytes
  6393 ;; Hardware stack levels used:    1
  6394 ;; Hardware stack levels required when called:    3
  6395 ;; This function calls:
  6396 ;;		Nothing
  6397 ;; This function is called by:
  6398 ;;		_end
  6399 ;; This function uses a non-reentrant model
  6400 ;;
  6401                           
  6402                           	psect	text10
  6403  002A08                     __ptext10:
  6404                           	opt callstack 0
  6405  002A08                     ___lwdiv:
  6406                           	opt callstack 25
  6407  002A08  0E00               	movlw	0
  6408  002A0A  0100               	movlb	0	; () banked
  6409  002A0C  6F86               	movwf	(___lwdiv@quotient+1)& (0+255),b
  6410  002A0E  0E00               	movlw	0
  6411  002A10  6F85               	movwf	___lwdiv@quotient& (0+255),b
  6412  002A12                     
  6413                           ; BSR set to: 0
  6414  002A12  5182               	movf	___lwdiv@divisor& (0+255),w,b
  6415  002A14  1183               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  6416  002A16  B4D8               	btfsc	status,2,c
  6417  002A18  EF10  F015         	goto	u2771
  6418  002A1C  EF12  F015         	goto	u2770
  6419  002A20                     u2771:
  6420  002A20  EF3A  F015         	goto	l924
  6421  002A24                     u2770:
  6422  002A24                     
  6423                           ; BSR set to: 0
  6424  002A24  0E01               	movlw	1
  6425  002A26  6F84               	movwf	___lwdiv@counter& (0+255),b
  6426  002A28  EF1A  F015         	goto	l3440
  6427  002A2C                     l3438:
  6428                           
  6429                           ; BSR set to: 0
  6430  002A2C  90D8               	bcf	status,0,c
  6431  002A2E  3782               	rlcf	___lwdiv@divisor& (0+255),f,b
  6432  002A30  3783               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  6433  002A32  2B84               	incf	___lwdiv@counter& (0+255),f,b
  6434  002A34                     l3440:
  6435                           
  6436                           ; BSR set to: 0
  6437  002A34  AF83               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  6438  002A36  EF1F  F015         	goto	u2781
  6439  002A3A  EF21  F015         	goto	u2780
  6440  002A3E                     u2781:
  6441  002A3E  EF16  F015         	goto	l3438
  6442  002A42                     u2780:
  6443  002A42                     l3442:
  6444                           
  6445                           ; BSR set to: 0
  6446  002A42  90D8               	bcf	status,0,c
  6447  002A44  3785               	rlcf	___lwdiv@quotient& (0+255),f,b
  6448  002A46  3786               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  6449  002A48                     
  6450                           ; BSR set to: 0
  6451  002A48  5182               	movf	___lwdiv@divisor& (0+255),w,b
  6452  002A4A  5D80               	subwf	___lwdiv@dividend& (0+255),w,b
  6453  002A4C  5183               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6454  002A4E  5981               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  6455  002A50  A0D8               	btfss	status,0,c
  6456  002A52  EF2D  F015         	goto	u2791
  6457  002A56  EF2F  F015         	goto	u2790
  6458  002A5A                     u2791:
  6459  002A5A  EF34  F015         	goto	l3450
  6460  002A5E                     u2790:
  6461  002A5E                     
  6462                           ; BSR set to: 0
  6463  002A5E  5182               	movf	___lwdiv@divisor& (0+255),w,b
  6464  002A60  5F80               	subwf	___lwdiv@dividend& (0+255),f,b
  6465  002A62  5183               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6466  002A64  5B81               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  6467  002A66                     
  6468                           ; BSR set to: 0
  6469  002A66  8185               	bsf	___lwdiv@quotient& (0+255),0,b
  6470  002A68                     l3450:
  6471                           
  6472                           ; BSR set to: 0
  6473  002A68  90D8               	bcf	status,0,c
  6474  002A6A  3383               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  6475  002A6C  3382               	rrcf	___lwdiv@divisor& (0+255),f,b
  6476  002A6E                     
  6477                           ; BSR set to: 0
  6478  002A6E  2F84               	decfsz	___lwdiv@counter& (0+255),f,b
  6479  002A70  EF21  F015         	goto	l3442
  6480  002A74                     l924:
  6481                           
  6482                           ; BSR set to: 0
  6483  002A74  C085  F080         	movff	___lwdiv@quotient,?___lwdiv
  6484  002A78  C086  F081         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6485  002A7C                     
  6486                           ; BSR set to: 0
  6487  002A7C  0012               	return		;funcret
  6488  002A7E                     __end_of___lwdiv:
  6489                           	opt callstack 0
  6490                           
  6491 ;; *************** function ___lmul *****************
  6492 ;; Defined at:
  6493 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
  6494 ;; Parameters:    Size  Location     Type
  6495 ;;  multiplier      4    0[BANK0 ] unsigned long 
  6496 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  6497 ;; Auto vars:     Size  Location     Type
  6498 ;;  product         4    8[BANK0 ] unsigned long 
  6499 ;; Return value:  Size  Location     Type
  6500 ;;                  4    0[BANK0 ] unsigned long 
  6501 ;; Registers used:
  6502 ;;		wreg, status,2, status,0
  6503 ;; Tracked objects:
  6504 ;;		On entry : 0/0
  6505 ;;		On exit  : 0/0
  6506 ;;		Unchanged: 0/0
  6507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6508 ;;      Params:         0       8       0       0       0       0       0
  6509 ;;      Locals:         0       4       0       0       0       0       0
  6510 ;;      Temps:          0       0       0       0       0       0       0
  6511 ;;      Totals:         0      12       0       0       0       0       0
  6512 ;;Total ram usage:       12 bytes
  6513 ;; Hardware stack levels used:    1
  6514 ;; Hardware stack levels required when called:    3
  6515 ;; This function calls:
  6516 ;;		Nothing
  6517 ;; This function is called by:
  6518 ;;		_running
  6519 ;; This function uses a non-reentrant model
  6520 ;;
  6521                           
  6522                           	psect	text11
  6523  002A7E                     __ptext11:
  6524                           	opt callstack 0
  6525  002A7E                     ___lmul:
  6526                           	opt callstack 26
  6527  002A7E  0E00               	movlw	0
  6528  002A80  0100               	movlb	0	; () banked
  6529  002A82  6F88               	movwf	___lmul@product& (0+255),b
  6530  002A84  0E00               	movlw	0
  6531  002A86  6F89               	movwf	(___lmul@product+1)& (0+255),b
  6532  002A88  0E00               	movlw	0
  6533  002A8A  6F8A               	movwf	(___lmul@product+2)& (0+255),b
  6534  002A8C  0E00               	movlw	0
  6535  002A8E  6F8B               	movwf	(___lmul@product+3)& (0+255),b
  6536  002A90                     l3672:
  6537                           
  6538                           ; BSR set to: 0
  6539  002A90  A180               	btfss	___lmul@multiplier& (0+255),0,b
  6540  002A92  EF4D  F015         	goto	u3011
  6541  002A96  EF4F  F015         	goto	u3010
  6542  002A9A                     u3011:
  6543  002A9A  EF57  F015         	goto	l3676
  6544  002A9E                     u3010:
  6545  002A9E                     
  6546                           ; BSR set to: 0
  6547  002A9E  5184               	movf	___lmul@multiplicand& (0+255),w,b
  6548  002AA0  2788               	addwf	___lmul@product& (0+255),f,b
  6549  002AA2  5185               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  6550  002AA4  2389               	addwfc	(___lmul@product+1)& (0+255),f,b
  6551  002AA6  5186               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  6552  002AA8  238A               	addwfc	(___lmul@product+2)& (0+255),f,b
  6553  002AAA  5187               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  6554  002AAC  238B               	addwfc	(___lmul@product+3)& (0+255),f,b
  6555  002AAE                     l3676:
  6556                           
  6557                           ; BSR set to: 0
  6558  002AAE  90D8               	bcf	status,0,c
  6559  002AB0  3784               	rlcf	___lmul@multiplicand& (0+255),f,b
  6560  002AB2  3785               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  6561  002AB4  3786               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  6562  002AB6  3787               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  6563  002AB8                     
  6564                           ; BSR set to: 0
  6565  002AB8  90D8               	bcf	status,0,c
  6566  002ABA  3383               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  6567  002ABC  3382               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  6568  002ABE  3381               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  6569  002AC0  3380               	rrcf	___lmul@multiplier& (0+255),f,b
  6570  002AC2  5180               	movf	___lmul@multiplier& (0+255),w,b
  6571  002AC4  1181               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  6572  002AC6  1182               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  6573  002AC8  1183               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  6574  002ACA  A4D8               	btfss	status,2,c
  6575  002ACC  EF6A  F015         	goto	u3021
  6576  002AD0  EF6C  F015         	goto	u3020
  6577  002AD4                     u3021:
  6578  002AD4  EF48  F015         	goto	l3672
  6579  002AD8                     u3020:
  6580  002AD8                     
  6581                           ; BSR set to: 0
  6582  002AD8  C088  F080         	movff	___lmul@product,?___lmul
  6583  002ADC  C089  F081         	movff	___lmul@product+1,?___lmul+1
  6584  002AE0  C08A  F082         	movff	___lmul@product+2,?___lmul+2
  6585  002AE4  C08B  F083         	movff	___lmul@product+3,?___lmul+3
  6586  002AE8                     
  6587                           ; BSR set to: 0
  6588  002AE8  0012               	return		;funcret
  6589  002AEA                     __end_of___lmul:
  6590                           	opt callstack 0
  6591                           
  6592 ;; *************** function _ADC_Read *****************
  6593 ;; Defined at:
  6594 ;;		line 169 in file "main.c"
  6595 ;; Parameters:    Size  Location     Type
  6596 ;;		None
  6597 ;; Auto vars:     Size  Location     Type
  6598 ;;  digital         2    4[BANK0 ] int 
  6599 ;; Return value:  Size  Location     Type
  6600 ;;                  2    0[BANK0 ] int 
  6601 ;; Registers used:
  6602 ;;		wreg, status,2, status,0
  6603 ;; Tracked objects:
  6604 ;;		On entry : 0/0
  6605 ;;		On exit  : 0/0
  6606 ;;		Unchanged: 0/0
  6607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6608 ;;      Params:         0       2       0       0       0       0       0
  6609 ;;      Locals:         0       2       0       0       0       0       0
  6610 ;;      Temps:          0       2       0       0       0       0       0
  6611 ;;      Totals:         0       6       0       0       0       0       0
  6612 ;;Total ram usage:        6 bytes
  6613 ;; Hardware stack levels used:    1
  6614 ;; Hardware stack levels required when called:    3
  6615 ;; This function calls:
  6616 ;;		Nothing
  6617 ;; This function is called by:
  6618 ;;		_running
  6619 ;; This function uses a non-reentrant model
  6620 ;;
  6621                           
  6622                           	psect	text12
  6623  002C02                     __ptext12:
  6624                           	opt callstack 0
  6625  002C02                     _ADC_Read:
  6626                           	opt callstack 26
  6627  002C02                     
  6628                           ;main.c: 171:     int digital;;main.c: 173:     ADCON0bits.CHS = 0x07 ;
  6629  002C02  50C2               	movf	194,w,c	;volatile
  6630  002C04  0BC3               	andlw	-61
  6631  002C06  091C               	iorlw	28
  6632  002C08  6EC2               	movwf	194,c	;volatile
  6633  002C0A                     
  6634                           ;main.c: 174:     ADCON0bits.GO = 1;
  6635  002C0A  82C2               	bsf	194,1,c	;volatile
  6636  002C0C                     
  6637                           ;main.c: 175:     ADCON0bits.ADON = 1;
  6638  002C0C  80C2               	bsf	194,0,c	;volatile
  6639  002C0E                     l196:
  6640  002C0E  B2C2               	btfsc	194,1,c	;volatile
  6641  002C10  EF0C  F016         	goto	u2831
  6642  002C14  EF0E  F016         	goto	u2830
  6643  002C18                     u2831:
  6644  002C18  EF07  F016         	goto	l196
  6645  002C1C                     u2830:
  6646  002C1C                     
  6647                           ;main.c: 179:     digital = (ADRESH*256) | (ADRESL);
  6648  002C1C  50C3               	movf	195,w,c	;volatile
  6649  002C1E  CFC4 F082          	movff	4036,??_ADC_Read	;volatile
  6650  002C22  0100               	movlb	0	; () banked
  6651  002C24  6B83               	clrf	(??_ADC_Read+1)& (0+255),b
  6652  002C26  C082  F083         	movff	??_ADC_Read,??_ADC_Read+1
  6653  002C2A  6B82               	clrf	??_ADC_Read& (0+255),b
  6654  002C2C  1182               	iorwf	??_ADC_Read& (0+255),w,b
  6655  002C2E  6F84               	movwf	ADC_Read@digital& (0+255),b
  6656  002C30  5183               	movf	(??_ADC_Read+1)& (0+255),w,b
  6657  002C32  6F85               	movwf	(ADC_Read@digital+1)& (0+255),b
  6658  002C34                     
  6659                           ; BSR set to: 0
  6660                           ;main.c: 180:     return(digital);
  6661  002C34  C084  F080         	movff	ADC_Read@digital,?_ADC_Read
  6662  002C38  C085  F081         	movff	ADC_Read@digital+1,?_ADC_Read+1
  6663  002C3C                     
  6664                           ; BSR set to: 0
  6665  002C3C  0012               	return		;funcret
  6666  002C3E                     __end_of_ADC_Read:
  6667                           	opt callstack 0
  6668                           
  6669 ;; *************** function _initial *****************
  6670 ;; Defined at:
  6671 ;;		line 133 in file "main.c"
  6672 ;; Parameters:    Size  Location     Type
  6673 ;;		None
  6674 ;; Auto vars:     Size  Location     Type
  6675 ;;  i               2    2[BANK0 ] int 
  6676 ;; Return value:  Size  Location     Type
  6677 ;;                  1    wreg      void 
  6678 ;; Registers used:
  6679 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6680 ;; Tracked objects:
  6681 ;;		On entry : 0/0
  6682 ;;		On exit  : 0/0
  6683 ;;		Unchanged: 0/0
  6684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6685 ;;      Params:         0       0       0       0       0       0       0
  6686 ;;      Locals:         0       2       0       0       0       0       0
  6687 ;;      Temps:          0       2       0       0       0       0       0
  6688 ;;      Totals:         0       4       0       0       0       0       0
  6689 ;;Total ram usage:        4 bytes
  6690 ;; Hardware stack levels used:    1
  6691 ;; Hardware stack levels required when called:    3
  6692 ;; This function calls:
  6693 ;;		Nothing
  6694 ;; This function is called by:
  6695 ;;		_main
  6696 ;; This function uses a non-reentrant model
  6697 ;;
  6698                           
  6699                           	psect	text13
  6700  002518                     __ptext13:
  6701                           	opt callstack 0
  6702  002518                     _initial:
  6703                           	opt callstack 27
  6704  002518                     
  6705                           ;main.c: 135:     jump_time = 1;
  6706  002518  0E00               	movlw	0
  6707  00251A  0100               	movlb	0	; () banked
  6708  00251C  6FFC               	movwf	(_jump_time+1)& (0+255),b
  6709  00251E  0E01               	movlw	1
  6710  002520  6FFB               	movwf	_jump_time& (0+255),b
  6711                           
  6712                           ;main.c: 136:     fall_flag = 0;
  6713  002522  0E00               	movlw	0
  6714  002524  6FF6               	movwf	(_fall_flag+1)& (0+255),b
  6715  002526  0E00               	movlw	0
  6716  002528  6FF5               	movwf	_fall_flag& (0+255),b
  6717                           
  6718                           ;main.c: 137:     timer3_count = 0;
  6719  00252A  0E00               	movlw	0
  6720  00252C  6E56               	movwf	(_timer3_count+1)^0,c
  6721  00252E  0E00               	movlw	0
  6722  002530  6E55               	movwf	_timer3_count^0,c
  6723                           
  6724                           ;main.c: 139:     ADCON1 = 0x0f;
  6725  002532  0E0F               	movlw	15
  6726  002534  6EC1               	movwf	193,c	;volatile
  6727                           
  6728                           ;main.c: 141:     LATA = 0x00;
  6729  002536  0E00               	movlw	0
  6730  002538  6E89               	movwf	137,c	;volatile
  6731                           
  6732                           ;main.c: 142:     PORTA = 0x00;
  6733  00253A  0E00               	movlw	0
  6734  00253C  6E80               	movwf	128,c	;volatile
  6735                           
  6736                           ;main.c: 143:     TRISA = 0x00;
  6737  00253E  0E00               	movlw	0
  6738  002540  6E92               	movwf	146,c	;volatile
  6739                           
  6740                           ;main.c: 144:     LATB = 0x00;
  6741  002542  0E00               	movlw	0
  6742  002544  6E8A               	movwf	138,c	;volatile
  6743                           
  6744                           ;main.c: 145:     PORTB = 0x00;
  6745  002546  0E00               	movlw	0
  6746  002548  6E81               	movwf	129,c	;volatile
  6747                           
  6748                           ;main.c: 146:     TRISB = 0x00;
  6749  00254A  0E00               	movlw	0
  6750  00254C  6E93               	movwf	147,c	;volatile
  6751                           
  6752                           ;main.c: 147:     LATC = 0x00;
  6753  00254E  0E00               	movlw	0
  6754  002550  6E8B               	movwf	139,c	;volatile
  6755                           
  6756                           ;main.c: 148:     PORTC = 0x00;
  6757  002552  0E00               	movlw	0
  6758  002554  6E82               	movwf	130,c	;volatile
  6759                           
  6760                           ;main.c: 149:     TRISC = 0x00;
  6761  002556  0E00               	movlw	0
  6762  002558  6E94               	movwf	148,c	;volatile
  6763                           
  6764                           ;main.c: 150:     LATD = 0x00;
  6765  00255A  0E00               	movlw	0
  6766  00255C  6E8C               	movwf	140,c	;volatile
  6767                           
  6768                           ;main.c: 151:     PORTD = 0x00;
  6769  00255E  0E00               	movlw	0
  6770  002560  6E83               	movwf	131,c	;volatile
  6771                           
  6772                           ;main.c: 152:     TRISD = 0x00;
  6773  002562  0E00               	movlw	0
  6774  002564  6E95               	movwf	149,c	;volatile
  6775  002566                     
  6776                           ; BSR set to: 0
  6777                           ;main.c: 154:     TRISCbits.RC4 = 0;
  6778  002566  9894               	bcf	148,4,c	;volatile
  6779  002568                     
  6780                           ; BSR set to: 0
  6781                           ;main.c: 155:     TRISCbits.RC5 = 1;
  6782  002568  8A94               	bsf	148,5,c	;volatile
  6783  00256A                     
  6784                           ; BSR set to: 0
  6785                           ;main.c: 158:     ADFM = 1 ;
  6786  00256A  8EC0               	bsf	4032,7,c	;volatile
  6787                           
  6788                           ;main.c: 159:     ADCON2bits.ADCS = 7;
  6789  00256C  0E07               	movlw	7
  6790  00256E  12C0               	iorwf	192,f,c	;volatile
  6791                           
  6792                           ;main.c: 160:     ADRESH=0;
  6793  002570  0E00               	movlw	0
  6794  002572  6EC4               	movwf	196,c	;volatile
  6795                           
  6796                           ;main.c: 161:     ADRESL=0;
  6797  002574  0E00               	movlw	0
  6798  002576  6EC3               	movwf	195,c	;volatile
  6799                           
  6800                           ;main.c: 163:     for(int i=0;i<8;i++){
  6801  002578  0E00               	movlw	0
  6802  00257A  6F83               	movwf	(initial@i+1)& (0+255),b
  6803  00257C  0E00               	movlw	0
  6804  00257E  6F82               	movwf	initial@i& (0+255),b
  6805  002580                     l3772:
  6806                           
  6807                           ; BSR set to: 0
  6808                           ;main.c: 164:         crush[i]=0;
  6809  002580  0EA0               	movlw	low _crush
  6810  002582  6F80               	movwf	??_initial& (0+255),b
  6811  002584  0E01               	movlw	high _crush
  6812  002586  6F81               	movwf	(??_initial+1)& (0+255),b
  6813  002588  90D8               	bcf	status,0,c
  6814  00258A  3582               	rlcf	initial@i& (0+255),w,b
  6815  00258C  6ED9               	movwf	fsr2l,c
  6816  00258E  3583               	rlcf	(initial@i+1)& (0+255),w,b
  6817  002590  6EDA               	movwf	fsr2h,c
  6818  002592  90D8               	bcf	status,0,c
  6819  002594  36D9               	rlcf	fsr2l,f,c
  6820  002596  36DA               	rlcf	fsr2h,f,c
  6821  002598  5180               	movf	??_initial& (0+255),w,b
  6822  00259A  26D9               	addwf	fsr2l,f,c
  6823  00259C  5181               	movf	(??_initial+1)& (0+255),w,b
  6824  00259E  22DA               	addwfc	fsr2h,f,c
  6825  0025A0  6ADE               	clrf	postinc2,c
  6826  0025A2  6ADE               	clrf	postinc2,c
  6827  0025A4  6ADE               	clrf	postinc2,c
  6828  0025A6  6ADD               	clrf	postdec2,c
  6829                           
  6830                           ;main.c: 165:         obj[i]=0;
  6831  0025A8  0EC0               	movlw	low _obj
  6832  0025AA  6F80               	movwf	??_initial& (0+255),b
  6833  0025AC  0E01               	movlw	high _obj
  6834  0025AE  6F81               	movwf	(??_initial+1)& (0+255),b
  6835  0025B0  90D8               	bcf	status,0,c
  6836  0025B2  3582               	rlcf	initial@i& (0+255),w,b
  6837  0025B4  6ED9               	movwf	fsr2l,c
  6838  0025B6  3583               	rlcf	(initial@i+1)& (0+255),w,b
  6839  0025B8  6EDA               	movwf	fsr2h,c
  6840  0025BA  90D8               	bcf	status,0,c
  6841  0025BC  36D9               	rlcf	fsr2l,f,c
  6842  0025BE  36DA               	rlcf	fsr2h,f,c
  6843  0025C0  5180               	movf	??_initial& (0+255),w,b
  6844  0025C2  26D9               	addwf	fsr2l,f,c
  6845  0025C4  5181               	movf	(??_initial+1)& (0+255),w,b
  6846  0025C6  22DA               	addwfc	fsr2h,f,c
  6847  0025C8  6ADE               	clrf	postinc2,c
  6848  0025CA  6ADE               	clrf	postinc2,c
  6849  0025CC  6ADE               	clrf	postinc2,c
  6850  0025CE  6ADD               	clrf	postdec2,c
  6851  0025D0                     
  6852                           ; BSR set to: 0
  6853                           ;main.c: 167:     }
  6854  0025D0  4B82               	infsnz	initial@i& (0+255),f,b
  6855  0025D2  2B83               	incf	(initial@i+1)& (0+255),f,b
  6856  0025D4                     
  6857                           ; BSR set to: 0
  6858  0025D4  BF83               	btfsc	(initial@i+1)& (0+255),7,b
  6859  0025D6  EFF6  F012         	goto	u3151
  6860  0025DA  5183               	movf	(initial@i+1)& (0+255),w,b
  6861  0025DC  E109               	bnz	u3150
  6862  0025DE  0E08               	movlw	8
  6863  0025E0  5D82               	subwf	initial@i& (0+255),w,b
  6864  0025E2  A0D8               	btfss	status,0,c
  6865  0025E4  EFF6  F012         	goto	u3151
  6866  0025E8  EFF8  F012         	goto	u3150
  6867  0025EC                     u3151:
  6868  0025EC  EFC0  F012         	goto	l3772
  6869  0025F0                     u3150:
  6870  0025F0                     
  6871                           ; BSR set to: 0
  6872  0025F0  0012               	return		;funcret
  6873  0025F2                     __end_of_initial:
  6874                           	opt callstack 0
  6875                           
  6876 ;; *************** function _Hi_ISR *****************
  6877 ;; Defined at:
  6878 ;;		line 582 in file "main.c"
  6879 ;; Parameters:    Size  Location     Type
  6880 ;;		None
  6881 ;; Auto vars:     Size  Location     Type
  6882 ;;  i               2   54[COMRAM] int 
  6883 ;; Return value:  Size  Location     Type
  6884 ;;                  1    wreg      void 
  6885 ;; Registers used:
  6886 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6887 ;; Tracked objects:
  6888 ;;		On entry : 0/0
  6889 ;;		On exit  : 0/0
  6890 ;;		Unchanged: 0/0
  6891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6892 ;;      Params:         0       0       0       0       0       0       0
  6893 ;;      Locals:         2       0       0       0       0       0       0
  6894 ;;      Temps:         14       0       0       0       0       0       0
  6895 ;;      Totals:        16       0       0       0       0       0       0
  6896 ;;Total ram usage:       16 bytes
  6897 ;; Hardware stack levels used:    1
  6898 ;; Hardware stack levels required when called:    2
  6899 ;; This function calls:
  6900 ;;		_rand
  6901 ;;		i2___awmod
  6902 ;;		i2___lwmod
  6903 ;; This function is called by:
  6904 ;;		Interrupt level 2
  6905 ;; This function uses a non-reentrant model
  6906 ;;
  6907                           
  6908                           	psect	intcode
  6909  000008                     __pintcode:
  6910                           	opt callstack 0
  6911  000008                     _Hi_ISR:
  6912                           	opt callstack 25
  6913                           
  6914                           ; BSR set to: 0
  6915                           ;incstack = 0
  6916  000008  826D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6917  00000A  EDE4  F00C         	call	int_func,f	;refresh shadow registers
  6918                           
  6919                           	psect	intcode_body
  6920  0019C8                     __pintcode_body:
  6921                           	opt callstack 25
  6922  0019C8                     int_func:
  6923                           	opt callstack 25
  6924  0019C8  0006               	pop		; remove dummy address from shadow register refresh
  6925  0019CA  CFD9 F035          	movff	fsr2l,??_Hi_ISR+12
  6926  0019CE  CFDA F036          	movff	fsr2h,??_Hi_ISR+13
  6927  0019D2                     
  6928                           ;main.c: 584:     if(INTCONbits.TMR0IF == 1){
  6929  0019D2  A4F2               	btfss	242,2,c	;volatile
  6930  0019D4  EFEE  F00C         	goto	i2u259_41
  6931  0019D8  EFF0  F00C         	goto	i2u259_40
  6932  0019DC                     i2u259_41:
  6933  0019DC  EF6B  F00D         	goto	i2l399
  6934  0019E0                     i2u259_40:
  6935  0019E0                     
  6936                           ;main.c: 585:         INTCONbits.TMR0IF = 0;
  6937  0019E0  94F2               	bcf	242,2,c	;volatile
  6938  0019E2                     
  6939                           ;main.c: 586:         tmr1_count ++;
  6940  0019E2  4A5D               	infsnz	_tmr1_count^0,f,c
  6941  0019E4  2A5E               	incf	(_tmr1_count+1)^0,f,c
  6942  0019E6                     
  6943                           ;main.c: 587:         if(tmr1_count == tmr_arr[(pr_idx)%(sizeof(pr_arr)/sizeof(pr_arr[0]
      +                          ))]){
  6944  0019E6  C0F9  F001         	movff	_pr_idx,i2___lwmod@dividend
  6945  0019EA  C0FA  F002         	movff	_pr_idx+1,i2___lwmod@dividend+1
  6946  0019EE  0E00               	movlw	0
  6947  0019F0  6E04               	movwf	(i2___lwmod@divisor+1)^0,c
  6948  0019F2  0EB4               	movlw	180
  6949  0019F4  6E03               	movwf	i2___lwmod@divisor^0,c
  6950  0019F6  ECA8  F015         	call	i2___lwmod	;wreg free
  6951  0019FA  90D8               	bcf	status,0,c
  6952  0019FC  3601               	rlcf	?i2___lwmod^0,f,c
  6953  0019FE  3602               	rlcf	(?i2___lwmod+1)^0,f,c
  6954  001A00  0EC4               	movlw	low _tmr_arr
  6955  001A02  2401               	addwf	?i2___lwmod^0,w,c
  6956  001A04  6ED9               	movwf	fsr2l,c
  6957  001A06  0E02               	movlw	high _tmr_arr
  6958  001A08  2002               	addwfc	(?i2___lwmod+1)^0,w,c
  6959  001A0A  6EDA               	movwf	fsr2h,c
  6960  001A0C  505D               	movf	_tmr1_count^0,w,c
  6961  001A0E  18DE               	xorwf	postinc2,w,c
  6962  001A10  E107               	bnz	i2u260_41
  6963  001A12  505E               	movf	(_tmr1_count+1)^0,w,c
  6964  001A14  18DE               	xorwf	postinc2,w,c
  6965  001A16  A4D8               	btfss	status,2,c
  6966  001A18  EF10  F00D         	goto	i2u260_41
  6967  001A1C  EF12  F00D         	goto	i2u260_40
  6968  001A20                     i2u260_41:
  6969  001A20  EF65  F00D         	goto	i2l3270
  6970  001A24                     i2u260_40:
  6971  001A24                     
  6972                           ;main.c: 588:             tmr1_count = 0;
  6973  001A24  0E00               	movlw	0
  6974  001A26  6E5E               	movwf	(_tmr1_count+1)^0,c
  6975  001A28  0E00               	movlw	0
  6976  001A2A  6E5D               	movwf	_tmr1_count^0,c
  6977  001A2C                     
  6978                           ;main.c: 589:             pr_idx++;
  6979  001A2C  0100               	movlb	0	; () banked
  6980  001A2E  4BF9               	infsnz	_pr_idx& (0+255),f,b
  6981  001A30  2BFA               	incf	(_pr_idx+1)& (0+255),f,b
  6982  001A32                     
  6983                           ; BSR set to: 0
  6984                           ;main.c: 590:             if(pr_arr[(pr_idx)%(sizeof(pr_arr)/sizeof(pr_arr[0]))] != 0){
  6985  001A32  C0F9  F001         	movff	_pr_idx,i2___lwmod@dividend
  6986  001A36  C0FA  F002         	movff	_pr_idx+1,i2___lwmod@dividend+1
  6987  001A3A  0E00               	movlw	0
  6988  001A3C  6E04               	movwf	(i2___lwmod@divisor+1)^0,c
  6989  001A3E  0EB4               	movlw	180
  6990  001A40  6E03               	movwf	i2___lwmod@divisor^0,c
  6991  001A42  ECA8  F015         	call	i2___lwmod	;wreg free
  6992  001A46  90D8               	bcf	status,0,c
  6993  001A48  3601               	rlcf	?i2___lwmod^0,f,c
  6994  001A4A  3602               	rlcf	(?i2___lwmod+1)^0,f,c
  6995  001A4C  0E2C               	movlw	low _pr_arr
  6996  001A4E  2401               	addwf	?i2___lwmod^0,w,c
  6997  001A50  6ED9               	movwf	fsr2l,c
  6998  001A52  0E04               	movlw	high _pr_arr
  6999  001A54  2002               	addwfc	(?i2___lwmod+1)^0,w,c
  7000  001A56  6EDA               	movwf	fsr2h,c
  7001  001A58  50DE               	movf	postinc2,w,c
  7002  001A5A  10DE               	iorwf	postinc2,w,c
  7003  001A5C  B4D8               	btfsc	status,2,c
  7004  001A5E  EF33  F00D         	goto	i2u261_41
  7005  001A62  EF35  F00D         	goto	i2u261_40
  7006  001A66                     i2u261_41:
  7007  001A66  EF4F  F00D         	goto	i2l401
  7008  001A6A                     i2u261_40:
  7009  001A6A                     
  7010                           ;main.c: 591:                 PR2 = pr_arr[(pr_idx)%(sizeof(pr_arr)/sizeof(pr_arr[0]))] 
      +                          * 2;
  7011  001A6A  C0F9  F001         	movff	_pr_idx,i2___lwmod@dividend
  7012  001A6E  C0FA  F002         	movff	_pr_idx+1,i2___lwmod@dividend+1
  7013  001A72  0E00               	movlw	0
  7014  001A74  6E04               	movwf	(i2___lwmod@divisor+1)^0,c
  7015  001A76  0EB4               	movlw	180
  7016  001A78  6E03               	movwf	i2___lwmod@divisor^0,c
  7017  001A7A  ECA8  F015         	call	i2___lwmod	;wreg free
  7018  001A7E  90D8               	bcf	status,0,c
  7019  001A80  3601               	rlcf	?i2___lwmod^0,f,c
  7020  001A82  3602               	rlcf	(?i2___lwmod+1)^0,f,c
  7021  001A84  0E2C               	movlw	low _pr_arr
  7022  001A86  2401               	addwf	?i2___lwmod^0,w,c
  7023  001A88  6ED9               	movwf	fsr2l,c
  7024  001A8A  0E04               	movlw	high _pr_arr
  7025  001A8C  2002               	addwfc	(?i2___lwmod+1)^0,w,c
  7026  001A8E  6EDA               	movwf	fsr2h,c
  7027  001A90  50DF               	movf	indf2,w,c
  7028  001A92  6E29               	movwf	??_Hi_ISR^0,c
  7029  001A94  90D8               	bcf	status,0,c
  7030  001A96  3429               	rlcf	??_Hi_ISR^0,w,c
  7031  001A98  6ECB               	movwf	203,c	;volatile
  7032                           
  7033                           ;main.c: 592:             }
  7034  001A9A  EF50  F00D         	goto	i2l3268
  7035  001A9E                     i2l401:
  7036                           
  7037                           ;main.c: 594:                 PR2 = 255;
  7038  001A9E  68CB               	setf	203,c	;volatile
  7039  001AA0                     i2l3268:
  7040                           
  7041                           ;main.c: 595:             CCPR1L = pr_arr[(pr_idx)%(sizeof(pr_arr)/sizeof(pr_arr[0]))];
  7042  001AA0  C0F9  F001         	movff	_pr_idx,i2___lwmod@dividend
  7043  001AA4  C0FA  F002         	movff	_pr_idx+1,i2___lwmod@dividend+1
  7044  001AA8  0E00               	movlw	0
  7045  001AAA  6E04               	movwf	(i2___lwmod@divisor+1)^0,c
  7046  001AAC  0EB4               	movlw	180
  7047  001AAE  6E03               	movwf	i2___lwmod@divisor^0,c
  7048  001AB0  ECA8  F015         	call	i2___lwmod	;wreg free
  7049  001AB4  90D8               	bcf	status,0,c
  7050  001AB6  3601               	rlcf	?i2___lwmod^0,f,c
  7051  001AB8  3602               	rlcf	(?i2___lwmod+1)^0,f,c
  7052  001ABA  0E2C               	movlw	low _pr_arr
  7053  001ABC  2401               	addwf	?i2___lwmod^0,w,c
  7054  001ABE  6ED9               	movwf	fsr2l,c
  7055  001AC0  0E04               	movlw	high _pr_arr
  7056  001AC2  2002               	addwfc	(?i2___lwmod+1)^0,w,c
  7057  001AC4  6EDA               	movwf	fsr2h,c
  7058  001AC6  50DF               	movf	indf2,w,c
  7059  001AC8  6EBE               	movwf	190,c	;volatile
  7060  001ACA                     i2l3270:
  7061                           
  7062                           ;main.c: 597:         TMR0 = 49036;
  7063  001ACA  0EBF               	movlw	191
  7064  001ACC  6ED7               	movwf	215,c	;volatile
  7065  001ACE  0E8C               	movlw	140
  7066  001AD0  6ED6               	movwf	214,c	;volatile
  7067                           
  7068                           ;main.c: 598:     }
  7069  001AD2  EFF9  F00E         	goto	i2l430
  7070  001AD6                     i2l399:
  7071  001AD6  A29E               	btfss	158,1,c	;volatile
  7072  001AD8  EF70  F00D         	goto	i2u262_41
  7073  001ADC  EF72  F00D         	goto	i2u262_40
  7074  001AE0                     i2u262_41:
  7075  001AE0  EF75  F00D         	goto	i2l404
  7076  001AE4                     i2u262_40:
  7077  001AE4                     
  7078                           ;main.c: 601:         PIR1bits.TMR2IF = 0;
  7079  001AE4  929E               	bcf	158,1,c	;volatile
  7080                           
  7081                           ;main.c: 602:     }
  7082  001AE6  EFF9  F00E         	goto	i2l430
  7083  001AEA                     i2l404:
  7084  001AEA  A09E               	btfss	158,0,c	;volatile
  7085  001AEC  EF7A  F00D         	goto	i2u263_41
  7086  001AF0  EF7C  F00D         	goto	i2u263_40
  7087  001AF4                     i2u263_41:
  7088  001AF4  EF07  F00E         	goto	i2l406
  7089  001AF8                     i2u263_40:
  7090  001AF8                     
  7091                           ;main.c: 605:         TMR1L = 0xb0;
  7092  001AF8  0EB0               	movlw	176
  7093  001AFA  6ECE               	movwf	206,c	;volatile
  7094                           
  7095                           ;main.c: 606:         TMR1H = 0xfe;
  7096  001AFC  0EFE               	movlw	254
  7097  001AFE  6ECF               	movwf	207,c	;volatile
  7098                           
  7099                           ;main.c: 607:         switch(line){
  7100  001B00  EFC2  F00D         	goto	i2l3314
  7101  001B04                     i2l408:
  7102                           
  7103                           ;main.c: 609:                 LATB = row[0]/256;
  7104  001B04  C0D4  FF8A         	movff	_row+1,3978	;volatile
  7105                           
  7106                           ;main.c: 610:                 LATD = row[0]%256;
  7107  001B08  C0D3  FF8C         	movff	_row,3980	;volatile
  7108  001B0C                     
  7109                           ;main.c: 611:                 TRISA = 0xfe;
  7110  001B0C  0EFE               	movlw	254
  7111  001B0E  6E92               	movwf	146,c	;volatile
  7112                           
  7113                           ;main.c: 612:                 break;
  7114  001B10  EFF0  F00D         	goto	i2l3316
  7115  001B14                     i2l410:
  7116                           
  7117                           ;main.c: 615:                 LATB = row[1]/256;
  7118  001B14  C0D8  FF8A         	movff	_row+5,3978	;volatile
  7119                           
  7120                           ;main.c: 616:                 LATD = row[1]%256;
  7121  001B18  C0D7  FF8C         	movff	_row+4,3980	;volatile
  7122  001B1C                     
  7123                           ;main.c: 617:                 TRISA = 0xfd;
  7124  001B1C  0EFD               	movlw	253
  7125  001B1E  6E92               	movwf	146,c	;volatile
  7126                           
  7127                           ;main.c: 618:                 break;
  7128  001B20  EFF0  F00D         	goto	i2l3316
  7129  001B24                     i2l3280:
  7130                           
  7131                           ;main.c: 620:                 TRISA = 0xfb;
  7132  001B24  0EFB               	movlw	251
  7133  001B26  6E92               	movwf	146,c	;volatile
  7134  001B28                     
  7135                           ;main.c: 621:                 LATB = row[2]/256;
  7136  001B28  C0DC  FF8A         	movff	_row+9,3978	;volatile
  7137  001B2C                     
  7138                           ;main.c: 622:                 LATD = row[2]%256;
  7139  001B2C  C0DB  FF8C         	movff	_row+8,3980	;volatile
  7140                           
  7141                           ;main.c: 623:                 break;
  7142  001B30  EFF0  F00D         	goto	i2l3316
  7143  001B34                     i2l3286:
  7144                           
  7145                           ;main.c: 625:                 TRISA = 0xf7;
  7146  001B34  0EF7               	movlw	247
  7147  001B36  6E92               	movwf	146,c	;volatile
  7148  001B38                     
  7149                           ;main.c: 626:                 LATB = row[3]/256;
  7150  001B38  C0E0  FF8A         	movff	_row+13,3978	;volatile
  7151  001B3C                     
  7152                           ;main.c: 627:                 LATD = row[3]%256;
  7153  001B3C  C0DF  FF8C         	movff	_row+12,3980	;volatile
  7154                           
  7155                           ;main.c: 628:                 break;
  7156  001B40  EFF0  F00D         	goto	i2l3316
  7157  001B44                     i2l3292:
  7158                           
  7159                           ;main.c: 630:                 TRISA = 0xef;
  7160  001B44  0EEF               	movlw	239
  7161  001B46  6E92               	movwf	146,c	;volatile
  7162  001B48                     
  7163                           ;main.c: 631:                 LATB = row[4]/256;
  7164  001B48  C0E4  FF8A         	movff	_row+17,3978	;volatile
  7165  001B4C                     
  7166                           ;main.c: 632:                 LATD = row[4]%256;
  7167  001B4C  C0E3  FF8C         	movff	_row+16,3980	;volatile
  7168                           
  7169                           ;main.c: 633:                 break;
  7170  001B50  EFF0  F00D         	goto	i2l3316
  7171  001B54                     i2l3298:
  7172                           
  7173                           ;main.c: 635:                 TRISA = 0xdf;
  7174  001B54  0EDF               	movlw	223
  7175  001B56  6E92               	movwf	146,c	;volatile
  7176  001B58                     
  7177                           ;main.c: 636:                 LATB = row[5]/256;
  7178  001B58  C0E8  FF8A         	movff	_row+21,3978	;volatile
  7179  001B5C                     
  7180                           ;main.c: 637:                 LATD = row[5]%256;
  7181  001B5C  C0E7  FF8C         	movff	_row+20,3980	;volatile
  7182                           
  7183                           ;main.c: 638:                 break;
  7184  001B60  EFF0  F00D         	goto	i2l3316
  7185  001B64                     i2l3304:
  7186                           
  7187                           ;main.c: 640:                 TRISA = 0xbf;
  7188  001B64  0EBF               	movlw	191
  7189  001B66  6E92               	movwf	146,c	;volatile
  7190  001B68                     
  7191                           ;main.c: 641:                 LATB = row[6]/256;
  7192  001B68  C0EC  FF8A         	movff	_row+25,3978	;volatile
  7193  001B6C                     
  7194                           ;main.c: 642:                 LATD = row[6]%256;
  7195  001B6C  C0EB  FF8C         	movff	_row+24,3980	;volatile
  7196                           
  7197                           ;main.c: 643:                 break;
  7198  001B70  EFF0  F00D         	goto	i2l3316
  7199  001B74                     i2l416:
  7200                           
  7201                           ;main.c: 645:                 LATB = row[7]/256;
  7202  001B74  C0F0  FF8A         	movff	_row+29,3978	;volatile
  7203                           
  7204                           ;main.c: 646:                 LATD = row[7]%256;
  7205  001B78  C0EF  FF8C         	movff	_row+28,3980	;volatile
  7206  001B7C                     
  7207                           ;main.c: 647:                 TRISA = 0x7f;
  7208  001B7C  0E7F               	movlw	127
  7209  001B7E  6E92               	movwf	146,c	;volatile
  7210                           
  7211                           ;main.c: 648:                 break;
  7212  001B80  EFF0  F00D         	goto	i2l3316
  7213  001B84                     i2l3314:
  7214  001B84  C06B  F029         	movff	_line,??_Hi_ISR
  7215  001B88  C06C  F02A         	movff	_line+1,??_Hi_ISR+1
  7216                           
  7217                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7218                           ; Switch size 1, requested type "simple"
  7219                           ; Number of cases is 1, Range of values is 0 to 0
  7220                           ; switch strategies available:
  7221                           ; Name         Instructions Cycles
  7222                           ; simple_byte            4     3 (average)
  7223                           ;	Chosen strategy is simple_byte
  7224  001B8C  502A               	movf	(??_Hi_ISR+1)^0,w,c
  7225  001B8E  0A00               	xorlw	0	; case 0
  7226  001B90  B4D8               	btfsc	status,2,c
  7227  001B92  EFCD  F00D         	goto	i2l4380
  7228  001B96  EFF0  F00D         	goto	i2l3316
  7229  001B9A                     i2l4380:
  7230                           
  7231                           ; Switch size 1, requested type "simple"
  7232                           ; Number of cases is 8, Range of values is 0 to 7
  7233                           ; switch strategies available:
  7234                           ; Name         Instructions Cycles
  7235                           ; simple_byte           25    13 (average)
  7236                           ;	Chosen strategy is simple_byte
  7237  001B9A  5029               	movf	??_Hi_ISR^0,w,c
  7238  001B9C  0A00               	xorlw	0	; case 0
  7239  001B9E  B4D8               	btfsc	status,2,c
  7240  001BA0  EF82  F00D         	goto	i2l408
  7241  001BA4  0A01               	xorlw	1	; case 1
  7242  001BA6  B4D8               	btfsc	status,2,c
  7243  001BA8  EF8A  F00D         	goto	i2l410
  7244  001BAC  0A03               	xorlw	3	; case 2
  7245  001BAE  B4D8               	btfsc	status,2,c
  7246  001BB0  EF92  F00D         	goto	i2l3280
  7247  001BB4  0A01               	xorlw	1	; case 3
  7248  001BB6  B4D8               	btfsc	status,2,c
  7249  001BB8  EF9A  F00D         	goto	i2l3286
  7250  001BBC  0A07               	xorlw	7	; case 4
  7251  001BBE  B4D8               	btfsc	status,2,c
  7252  001BC0  EFA2  F00D         	goto	i2l3292
  7253  001BC4  0A01               	xorlw	1	; case 5
  7254  001BC6  B4D8               	btfsc	status,2,c
  7255  001BC8  EFAA  F00D         	goto	i2l3298
  7256  001BCC  0A03               	xorlw	3	; case 6
  7257  001BCE  B4D8               	btfsc	status,2,c
  7258  001BD0  EFB2  F00D         	goto	i2l3304
  7259  001BD4  0A01               	xorlw	1	; case 7
  7260  001BD6  B4D8               	btfsc	status,2,c
  7261  001BD8  EFBA  F00D         	goto	i2l416
  7262  001BDC  EFF0  F00D         	goto	i2l3316
  7263  001BE0                     i2l3316:
  7264                           
  7265                           ;main.c: 650:         line++;
  7266  001BE0  4A6B               	infsnz	_line^0,f,c
  7267  001BE2  2A6C               	incf	(_line+1)^0,f,c
  7268  001BE4                     
  7269                           ;main.c: 651:         if(line > 7){
  7270  001BE4  BE6C               	btfsc	(_line+1)^0,7,c
  7271  001BE6  EFFE  F00D         	goto	i2u264_41
  7272  001BEA  506C               	movf	(_line+1)^0,w,c
  7273  001BEC  E109               	bnz	i2u264_40
  7274  001BEE  0E08               	movlw	8
  7275  001BF0  5C6B               	subwf	_line^0,w,c
  7276  001BF2  A0D8               	btfss	status,0,c
  7277  001BF4  EFFE  F00D         	goto	i2u264_41
  7278  001BF8  EF00  F00E         	goto	i2u264_40
  7279  001BFC                     i2u264_41:
  7280  001BFC  EF04  F00E         	goto	i2l3322
  7281  001C00                     i2u264_40:
  7282  001C00                     
  7283                           ;main.c: 652:             line = 0;
  7284  001C00  0E00               	movlw	0
  7285  001C02  6E6C               	movwf	(_line+1)^0,c
  7286  001C04  0E00               	movlw	0
  7287  001C06  6E6B               	movwf	_line^0,c
  7288  001C08                     i2l3322:
  7289                           
  7290                           ;main.c: 654:         PIR1bits.TMR1IF = 0;
  7291  001C08  909E               	bcf	158,0,c	;volatile
  7292                           
  7293                           ;main.c: 655:     }
  7294  001C0A  EFF9  F00E         	goto	i2l430
  7295  001C0E                     i2l406:
  7296  001C0E  A2A1               	btfss	161,1,c	;volatile
  7297  001C10  EF0C  F00E         	goto	i2u265_41
  7298  001C14  EF0E  F00E         	goto	i2u265_40
  7299  001C18                     i2u265_41:
  7300  001C18  EFF9  F00E         	goto	i2l403
  7301  001C1C                     i2u265_40:
  7302  001C1C                     
  7303                           ;main.c: 658:         if(running_flag == 1){
  7304  001C1C  045B               	decf	_running_flag^0,w,c
  7305  001C1E  105C               	iorwf	(_running_flag+1)^0,w,c
  7306  001C20  A4D8               	btfss	status,2,c
  7307  001C22  EF15  F00E         	goto	i2u266_41
  7308  001C26  EF17  F00E         	goto	i2u266_40
  7309  001C2A                     i2u266_41:
  7310  001C2A  EF1C  F00E         	goto	i2l3328
  7311  001C2E                     i2u266_40:
  7312  001C2E                     
  7313                           ;main.c: 659:             timer3_count++;
  7314  001C2E  4A55               	infsnz	_timer3_count^0,f,c
  7315  001C30  2A56               	incf	(_timer3_count+1)^0,f,c
  7316                           
  7317                           ;main.c: 660:             score++;
  7318  001C32  0100               	movlb	0	; () banked
  7319  001C34  4BF7               	infsnz	_score& (0+255),f,b
  7320  001C36  2BF8               	incf	(_score+1)& (0+255),f,b
  7321  001C38                     i2l3328:
  7322                           
  7323                           ;main.c: 662:         TMR3 = timer3_val;
  7324  001C38  C067  FFB2         	movff	_timer3_val,4018	;volatile
  7325  001C3C  C068  FFB3         	movff	_timer3_val+1,4019	;volatile
  7326  001C40                     
  7327                           ;main.c: 664:         for(i=0;i<8;i++){
  7328  001C40  0E00               	movlw	0
  7329  001C42  6E38               	movwf	(Hi_ISR@i+1)^0,c
  7330  001C44  0E00               	movlw	0
  7331  001C46  6E37               	movwf	Hi_ISR@i^0,c
  7332  001C48                     i2l3338:
  7333                           
  7334                           ;main.c: 665:             obj[i] = obj[i]*2;
  7335  001C48  0EC0               	movlw	low _obj
  7336  001C4A  6E29               	movwf	??_Hi_ISR^0,c
  7337  001C4C  0E01               	movlw	high _obj
  7338  001C4E  6E2A               	movwf	(??_Hi_ISR+1)^0,c
  7339  001C50  90D8               	bcf	status,0,c
  7340  001C52  3437               	rlcf	Hi_ISR@i^0,w,c
  7341  001C54  6ED9               	movwf	fsr2l,c
  7342  001C56  3438               	rlcf	(Hi_ISR@i+1)^0,w,c
  7343  001C58  6EDA               	movwf	fsr2h,c
  7344  001C5A  90D8               	bcf	status,0,c
  7345  001C5C  36D9               	rlcf	fsr2l,f,c
  7346  001C5E  36DA               	rlcf	fsr2h,f,c
  7347  001C60  5029               	movf	??_Hi_ISR^0,w,c
  7348  001C62  26D9               	addwf	fsr2l,f,c
  7349  001C64  502A               	movf	(??_Hi_ISR+1)^0,w,c
  7350  001C66  22DA               	addwfc	fsr2h,f,c
  7351  001C68  CFDE F02B          	movff	postinc2,??_Hi_ISR+2
  7352  001C6C  CFDE F02C          	movff	postinc2,??_Hi_ISR+3
  7353  001C70  CFDE F02D          	movff	postinc2,??_Hi_ISR+4
  7354  001C74  CFDE F02E          	movff	postinc2,??_Hi_ISR+5
  7355  001C78  90D8               	bcf	status,0,c
  7356  001C7A  342B               	rlcf	(??_Hi_ISR+2)^0,w,c
  7357  001C7C  6E2F               	movwf	(??_Hi_ISR+6)^0,c
  7358  001C7E  342C               	rlcf	(??_Hi_ISR+3)^0,w,c
  7359  001C80  6E30               	movwf	(??_Hi_ISR+7)^0,c
  7360  001C82  342D               	rlcf	(??_Hi_ISR+4)^0,w,c
  7361  001C84  6E31               	movwf	(??_Hi_ISR+8)^0,c
  7362  001C86  342E               	rlcf	(??_Hi_ISR+5)^0,w,c
  7363  001C88  6E32               	movwf	(??_Hi_ISR+9)^0,c
  7364  001C8A  0EC0               	movlw	low _obj
  7365  001C8C  6E33               	movwf	(??_Hi_ISR+10)^0,c
  7366  001C8E  0E01               	movlw	high _obj
  7367  001C90  6E34               	movwf	(??_Hi_ISR+11)^0,c
  7368  001C92  90D8               	bcf	status,0,c
  7369  001C94  3437               	rlcf	Hi_ISR@i^0,w,c
  7370  001C96  6ED9               	movwf	fsr2l,c
  7371  001C98  3438               	rlcf	(Hi_ISR@i+1)^0,w,c
  7372  001C9A  6EDA               	movwf	fsr2h,c
  7373  001C9C  90D8               	bcf	status,0,c
  7374  001C9E  36D9               	rlcf	fsr2l,f,c
  7375  001CA0  36DA               	rlcf	fsr2h,f,c
  7376  001CA2  5033               	movf	(??_Hi_ISR+10)^0,w,c
  7377  001CA4  26D9               	addwf	fsr2l,f,c
  7378  001CA6  5034               	movf	(??_Hi_ISR+11)^0,w,c
  7379  001CA8  22DA               	addwfc	fsr2h,f,c
  7380  001CAA  C02F  FFDE         	movff	??_Hi_ISR+6,postinc2
  7381  001CAE  C030  FFDE         	movff	??_Hi_ISR+7,postinc2
  7382  001CB2  C031  FFDE         	movff	??_Hi_ISR+8,postinc2
  7383  001CB6  C032  FFDE         	movff	??_Hi_ISR+9,postinc2
  7384  001CBA                     
  7385                           ;main.c: 666:         }
  7386  001CBA  4A37               	infsnz	Hi_ISR@i^0,f,c
  7387  001CBC  2A38               	incf	(Hi_ISR@i+1)^0,f,c
  7388  001CBE  BE38               	btfsc	(Hi_ISR@i+1)^0,7,c
  7389  001CC0  EF6B  F00E         	goto	i2u267_41
  7390  001CC4  5038               	movf	(Hi_ISR@i+1)^0,w,c
  7391  001CC6  E109               	bnz	i2u267_40
  7392  001CC8  0E08               	movlw	8
  7393  001CCA  5C37               	subwf	Hi_ISR@i^0,w,c
  7394  001CCC  A0D8               	btfss	status,0,c
  7395  001CCE  EF6B  F00E         	goto	i2u267_41
  7396  001CD2  EF6D  F00E         	goto	i2u267_40
  7397  001CD6                     i2u267_41:
  7398  001CD6  EF24  F00E         	goto	i2l3338
  7399  001CDA                     i2u267_40:
  7400  001CDA                     
  7401                           ;main.c: 669:         if(jump_flag == 1){
  7402  001CDA  0459               	decf	_jump_flag^0,w,c
  7403  001CDC  105A               	iorwf	(_jump_flag+1)^0,w,c
  7404  001CDE  A4D8               	btfss	status,2,c
  7405  001CE0  EF74  F00E         	goto	i2u268_41
  7406  001CE4  EF76  F00E         	goto	i2u268_40
  7407  001CE8                     i2u268_41:
  7408  001CE8  EF8B  F00E         	goto	i2l3352
  7409  001CEC                     i2u268_40:
  7410  001CEC                     
  7411                           ;main.c: 670:             jump_time++;
  7412  001CEC  0100               	movlb	0	; () banked
  7413  001CEE  4BFB               	infsnz	_jump_time& (0+255),f,b
  7414  001CF0  2BFC               	incf	(_jump_time+1)& (0+255),f,b
  7415  001CF2                     
  7416                           ; BSR set to: 0
  7417                           ;main.c: 671:             if(jump_time==8){
  7418  001CF2  0E08               	movlw	8
  7419  001CF4  19FB               	xorwf	_jump_time& (0+255),w,b
  7420  001CF6  11FC               	iorwf	(_jump_time+1)& (0+255),w,b
  7421  001CF8  A4D8               	btfss	status,2,c
  7422  001CFA  EF81  F00E         	goto	i2u269_41
  7423  001CFE  EF83  F00E         	goto	i2u269_40
  7424  001D02                     i2u269_41:
  7425  001D02  EF8B  F00E         	goto	i2l3352
  7426  001D06                     i2u269_40:
  7427  001D06                     
  7428                           ; BSR set to: 0
  7429                           ;main.c: 672:                 jump_flag=0;
  7430  001D06  0E00               	movlw	0
  7431  001D08  6E5A               	movwf	(_jump_flag+1)^0,c
  7432  001D0A  0E00               	movlw	0
  7433  001D0C  6E59               	movwf	_jump_flag^0,c
  7434                           
  7435                           ;main.c: 673:                 fall_flag=1;
  7436  001D0E  0E00               	movlw	0
  7437  001D10  6FF6               	movwf	(_fall_flag+1)& (0+255),b
  7438  001D12  0E01               	movlw	1
  7439  001D14  6FF5               	movwf	_fall_flag& (0+255),b
  7440  001D16                     i2l3352:
  7441                           
  7442                           ;main.c: 676:         if(fall_flag == 1){
  7443  001D16  0100               	movlb	0	; () banked
  7444  001D18  05F5               	decf	_fall_flag& (0+255),w,b
  7445  001D1A  11F6               	iorwf	(_fall_flag+1)& (0+255),w,b
  7446  001D1C  A4D8               	btfss	status,2,c
  7447  001D1E  EF93  F00E         	goto	i2u270_41
  7448  001D22  EF95  F00E         	goto	i2u270_40
  7449  001D26                     i2u270_41:
  7450  001D26  EFA5  F00E         	goto	i2l3360
  7451  001D2A                     i2u270_40:
  7452  001D2A                     
  7453                           ; BSR set to: 0
  7454                           ;main.c: 677:             jump_time--;
  7455  001D2A  07FB               	decf	_jump_time& (0+255),f,b
  7456  001D2C  A0D8               	btfss	status,0,c
  7457  001D2E  07FC               	decf	(_jump_time+1)& (0+255),f,b
  7458  001D30                     
  7459                           ; BSR set to: 0
  7460                           ;main.c: 678:             if(jump_time==1){
  7461  001D30  05FB               	decf	_jump_time& (0+255),w,b
  7462  001D32  11FC               	iorwf	(_jump_time+1)& (0+255),w,b
  7463  001D34  A4D8               	btfss	status,2,c
  7464  001D36  EF9F  F00E         	goto	i2u271_41
  7465  001D3A  EFA1  F00E         	goto	i2u271_40
  7466  001D3E                     i2u271_41:
  7467  001D3E  EFA5  F00E         	goto	i2l3360
  7468  001D42                     i2u271_40:
  7469  001D42                     
  7470                           ; BSR set to: 0
  7471                           ;main.c: 679:                 fall_flag=0;
  7472  001D42  0E00               	movlw	0
  7473  001D44  6FF6               	movwf	(_fall_flag+1)& (0+255),b
  7474  001D46  0E00               	movlw	0
  7475  001D48  6FF5               	movwf	_fall_flag& (0+255),b
  7476  001D4A                     i2l3360:
  7477                           
  7478                           ; BSR set to: 0
  7479                           ;main.c: 684:         if(dun_flag == 1 && jump_flag != 1 && fall_flag != 1){
  7480  001D4A  0457               	decf	_dun_flag^0,w,c
  7481  001D4C  1058               	iorwf	(_dun_flag+1)^0,w,c
  7482  001D4E  A4D8               	btfss	status,2,c
  7483  001D50  EFAC  F00E         	goto	i2u272_41
  7484  001D54  EFAE  F00E         	goto	i2u272_40
  7485  001D58                     i2u272_41:
  7486  001D58  EFC3  F00E         	goto	i2l3368
  7487  001D5C                     i2u272_40:
  7488  001D5C                     
  7489                           ; BSR set to: 0
  7490  001D5C  0459               	decf	_jump_flag^0,w,c
  7491  001D5E  105A               	iorwf	(_jump_flag+1)^0,w,c
  7492  001D60  B4D8               	btfsc	status,2,c
  7493  001D62  EFB5  F00E         	goto	i2u273_41
  7494  001D66  EFB7  F00E         	goto	i2u273_40
  7495  001D6A                     i2u273_41:
  7496  001D6A  EFC3  F00E         	goto	i2l3368
  7497  001D6E                     i2u273_40:
  7498  001D6E                     
  7499                           ; BSR set to: 0
  7500  001D6E  05F5               	decf	_fall_flag& (0+255),w,b
  7501  001D70  11F6               	iorwf	(_fall_flag+1)& (0+255),w,b
  7502  001D72  B4D8               	btfsc	status,2,c
  7503  001D74  EFBE  F00E         	goto	i2u274_41
  7504  001D78  EFC0  F00E         	goto	i2u274_40
  7505  001D7C                     i2u274_41:
  7506  001D7C  EFC3  F00E         	goto	i2l3368
  7507  001D80                     i2u274_40:
  7508  001D80                     
  7509                           ; BSR set to: 0
  7510                           ;main.c: 685:             jump_time --;
  7511  001D80  07FB               	decf	_jump_time& (0+255),f,b
  7512  001D82  A0D8               	btfss	status,0,c
  7513  001D84  07FC               	decf	(_jump_time+1)& (0+255),f,b
  7514  001D86                     i2l3368:
  7515                           
  7516                           ; BSR set to: 0
  7517                           ;main.c: 687:         if(jump_time == -10){
  7518  001D86  0EF6               	movlw	246
  7519  001D88  19FB               	xorwf	_jump_time& (0+255),w,b
  7520  001D8A  E106               	bnz	i2u275_41
  7521  001D8C  29FC               	incf	(_jump_time+1)& (0+255),w,b
  7522  001D8E  A4D8               	btfss	status,2,c
  7523  001D90  EFCC  F00E         	goto	i2u275_41
  7524  001D94  EFCE  F00E         	goto	i2u275_40
  7525  001D98                     i2u275_41:
  7526  001D98  EFD6  F00E         	goto	i2l3372
  7527  001D9C                     i2u275_40:
  7528  001D9C                     
  7529                           ; BSR set to: 0
  7530                           ;main.c: 688:             jump_time = 1;
  7531  001D9C  0E00               	movlw	0
  7532  001D9E  6FFC               	movwf	(_jump_time+1)& (0+255),b
  7533  001DA0  0E01               	movlw	1
  7534  001DA2  6FFB               	movwf	_jump_time& (0+255),b
  7535                           
  7536                           ;main.c: 689:             dun_flag = 0;
  7537  001DA4  0E00               	movlw	0
  7538  001DA6  6E58               	movwf	(_dun_flag+1)^0,c
  7539  001DA8  0E00               	movlw	0
  7540  001DAA  6E57               	movwf	_dun_flag^0,c
  7541  001DAC                     i2l3372:
  7542                           
  7543                           ; BSR set to: 0
  7544                           ;main.c: 693:         if(timer3_count == 15){
  7545  001DAC  0E0F               	movlw	15
  7546  001DAE  1855               	xorwf	_timer3_count^0,w,c
  7547  001DB0  1056               	iorwf	(_timer3_count+1)^0,w,c
  7548  001DB2  A4D8               	btfss	status,2,c
  7549  001DB4  EFDE  F00E         	goto	i2u276_41
  7550  001DB8  EFE0  F00E         	goto	i2u276_40
  7551  001DBC                     i2u276_41:
  7552  001DBC  EFF6  F00E         	goto	i2l3378
  7553  001DC0                     i2u276_40:
  7554  001DC0                     
  7555                           ; BSR set to: 0
  7556                           ;main.c: 694:             create = rand()%3+1;
  7557  001DC0  ECB1  F011         	call	_rand	;wreg free
  7558  001DC4  C019  F023         	movff	?_rand,i2___awmod@dividend
  7559  001DC8  C01A  F024         	movff	?_rand+1,i2___awmod@dividend+1
  7560  001DCC  0E00               	movlw	0
  7561  001DCE  6E26               	movwf	(i2___awmod@divisor+1)^0,c
  7562  001DD0  0E03               	movlw	3
  7563  001DD2  6E25               	movwf	i2___awmod@divisor^0,c
  7564  001DD4  EC0D  F014         	call	i2___awmod	;wreg free
  7565  001DD8  0E01               	movlw	1
  7566  001DDA  2423               	addwf	?i2___awmod^0,w,c
  7567  001DDC  6E53               	movwf	_create^0,c
  7568  001DDE  0E00               	movlw	0
  7569  001DE0  2024               	addwfc	(?i2___awmod+1)^0,w,c
  7570  001DE2  6E54               	movwf	(_create+1)^0,c
  7571  001DE4                     
  7572                           ;main.c: 695:             timer3_count = 0;
  7573  001DE4  0E00               	movlw	0
  7574  001DE6  6E56               	movwf	(_timer3_count+1)^0,c
  7575  001DE8  0E00               	movlw	0
  7576  001DEA  6E55               	movwf	_timer3_count^0,c
  7577  001DEC                     i2l3378:
  7578                           
  7579                           ;main.c: 697:         PIR2bits.TMR3IF = 0;
  7580  001DEC  92A1               	bcf	161,1,c	;volatile
  7581  001DEE  EFF9  F00E         	goto	i2l430
  7582  001DF2                     i2l403:
  7583  001DF2                     i2l430:
  7584  001DF2  C036  FFDA         	movff	??_Hi_ISR+13,fsr2h
  7585  001DF6  C035  FFD9         	movff	??_Hi_ISR+12,fsr2l
  7586  001DFA  926D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7587  001DFC  0011               	retfie		f
  7588  001DFE                     __end_of_Hi_ISR:
  7589                           	opt callstack 0
  7590                           
  7591 ;; *************** function i2___lwmod *****************
  7592 ;; Defined at:
  7593 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwmod.c"
  7594 ;; Parameters:    Size  Location     Type
  7595 ;;  dividend        2    0[COMRAM] unsigned int 
  7596 ;;  divisor         2    2[COMRAM] unsigned int 
  7597 ;; Auto vars:     Size  Location     Type
  7598 ;;  __lwmod         1    4[COMRAM] unsigned char 
  7599 ;; Return value:  Size  Location     Type
  7600 ;;                  2    0[COMRAM] unsigned int 
  7601 ;; Registers used:
  7602 ;;		wreg, status,2, status,0
  7603 ;; Tracked objects:
  7604 ;;		On entry : 0/0
  7605 ;;		On exit  : 0/0
  7606 ;;		Unchanged: 0/0
  7607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7608 ;;      Params:         4       0       0       0       0       0       0
  7609 ;;      Locals:         1       0       0       0       0       0       0
  7610 ;;      Temps:          0       0       0       0       0       0       0
  7611 ;;      Totals:         5       0       0       0       0       0       0
  7612 ;;Total ram usage:        5 bytes
  7613 ;; Hardware stack levels used:    1
  7614 ;; This function calls:
  7615 ;;		Nothing
  7616 ;; This function is called by:
  7617 ;;		_Hi_ISR
  7618 ;; This function uses a non-reentrant model
  7619 ;;
  7620                           
  7621                           	psect	text15
  7622  002B50                     __ptext15:
  7623                           	opt callstack 0
  7624  002B50                     i2___lwmod:
  7625                           	opt callstack 26
  7626  002B50  5003               	movf	i2___lwmod@divisor^0,w,c
  7627  002B52  1004               	iorwf	(i2___lwmod@divisor+1)^0,w,c
  7628  002B54  B4D8               	btfsc	status,2,c
  7629  002B56  EFAF  F015         	goto	i2u237_41
  7630  002B5A  EFB1  F015         	goto	i2u237_40
  7631  002B5E                     i2u237_41:
  7632  002B5E  EFD5  F015         	goto	i2l934
  7633  002B62                     i2u237_40:
  7634  002B62  0E01               	movlw	1
  7635  002B64  6E05               	movwf	i2___lwmod@counter^0,c
  7636  002B66  EFB9  F015         	goto	i2l3046
  7637  002B6A                     i2l3044:
  7638  002B6A  90D8               	bcf	status,0,c
  7639  002B6C  3603               	rlcf	i2___lwmod@divisor^0,f,c
  7640  002B6E  3604               	rlcf	(i2___lwmod@divisor+1)^0,f,c
  7641  002B70  2A05               	incf	i2___lwmod@counter^0,f,c
  7642  002B72                     i2l3046:
  7643  002B72  AE04               	btfss	(i2___lwmod@divisor+1)^0,7,c
  7644  002B74  EFBE  F015         	goto	i2u238_41
  7645  002B78  EFC0  F015         	goto	i2u238_40
  7646  002B7C                     i2u238_41:
  7647  002B7C  EFB5  F015         	goto	i2l3044
  7648  002B80                     i2u238_40:
  7649  002B80                     i2l3048:
  7650  002B80  5003               	movf	i2___lwmod@divisor^0,w,c
  7651  002B82  5C01               	subwf	i2___lwmod@dividend^0,w,c
  7652  002B84  5004               	movf	(i2___lwmod@divisor+1)^0,w,c
  7653  002B86  5802               	subwfb	(i2___lwmod@dividend+1)^0,w,c
  7654  002B88  A0D8               	btfss	status,0,c
  7655  002B8A  EFC9  F015         	goto	i2u239_41
  7656  002B8E  EFCB  F015         	goto	i2u239_40
  7657  002B92                     i2u239_41:
  7658  002B92  EFCF  F015         	goto	i2l3052
  7659  002B96                     i2u239_40:
  7660  002B96  5003               	movf	i2___lwmod@divisor^0,w,c
  7661  002B98  5E01               	subwf	i2___lwmod@dividend^0,f,c
  7662  002B9A  5004               	movf	(i2___lwmod@divisor+1)^0,w,c
  7663  002B9C  5A02               	subwfb	(i2___lwmod@dividend+1)^0,f,c
  7664  002B9E                     i2l3052:
  7665  002B9E  90D8               	bcf	status,0,c
  7666  002BA0  3204               	rrcf	(i2___lwmod@divisor+1)^0,f,c
  7667  002BA2  3203               	rrcf	i2___lwmod@divisor^0,f,c
  7668  002BA4  2E05               	decfsz	i2___lwmod@counter^0,f,c
  7669  002BA6  EFC0  F015         	goto	i2l3048
  7670  002BAA                     i2l934:
  7671  002BAA  C001  F001         	movff	i2___lwmod@dividend,?i2___lwmod
  7672  002BAE  C002  F002         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
  7673  002BB2  0012               	return		;funcret
  7674  002BB4                     __end_ofi2___lwmod:
  7675                           	opt callstack 0
  7676                           
  7677 ;; *************** function i2___awmod *****************
  7678 ;; Defined at:
  7679 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  7680 ;; Parameters:    Size  Location     Type
  7681 ;;  dividend        2   34[COMRAM] int 
  7682 ;;  divisor         2   36[COMRAM] int 
  7683 ;; Auto vars:     Size  Location     Type
  7684 ;;  __awmod         1   39[COMRAM] unsigned char 
  7685 ;;  __awmod         1   38[COMRAM] unsigned char 
  7686 ;; Return value:  Size  Location     Type
  7687 ;;                  2   34[COMRAM] int 
  7688 ;; Registers used:
  7689 ;;		wreg, status,2, status,0
  7690 ;; Tracked objects:
  7691 ;;		On entry : 0/0
  7692 ;;		On exit  : 0/0
  7693 ;;		Unchanged: 0/0
  7694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7695 ;;      Params:         4       0       0       0       0       0       0
  7696 ;;      Locals:         2       0       0       0       0       0       0
  7697 ;;      Temps:          0       0       0       0       0       0       0
  7698 ;;      Totals:         6       0       0       0       0       0       0
  7699 ;;Total ram usage:        6 bytes
  7700 ;; Hardware stack levels used:    1
  7701 ;; This function calls:
  7702 ;;		Nothing
  7703 ;; This function is called by:
  7704 ;;		_Hi_ISR
  7705 ;; This function uses a non-reentrant model
  7706 ;;
  7707                           
  7708                           	psect	text16
  7709  00281A                     __ptext16:
  7710                           	opt callstack 0
  7711  00281A                     i2___awmod:
  7712                           	opt callstack 26
  7713  00281A  0E00               	movlw	0
  7714  00281C  6E28               	movwf	i2___awmod@sign^0,c
  7715  00281E  BE24               	btfsc	(i2___awmod@dividend+1)^0,7,c
  7716  002820  EF16  F014         	goto	i2u231_40
  7717  002824  EF14  F014         	goto	i2u231_41
  7718  002828                     i2u231_41:
  7719  002828  EF1C  F014         	goto	i2l3012
  7720  00282C                     i2u231_40:
  7721  00282C  6C23               	negf	i2___awmod@dividend^0,c
  7722  00282E  1E24               	comf	(i2___awmod@dividend+1)^0,f,c
  7723  002830  B0D8               	btfsc	status,0,c
  7724  002832  2A24               	incf	(i2___awmod@dividend+1)^0,f,c
  7725  002834  0E01               	movlw	1
  7726  002836  6E28               	movwf	i2___awmod@sign^0,c
  7727  002838                     i2l3012:
  7728  002838  BE26               	btfsc	(i2___awmod@divisor+1)^0,7,c
  7729  00283A  EF23  F014         	goto	i2u232_40
  7730  00283E  EF21  F014         	goto	i2u232_41
  7731  002842                     i2u232_41:
  7732  002842  EF27  F014         	goto	i2l3016
  7733  002846                     i2u232_40:
  7734  002846  6C25               	negf	i2___awmod@divisor^0,c
  7735  002848  1E26               	comf	(i2___awmod@divisor+1)^0,f,c
  7736  00284A  B0D8               	btfsc	status,0,c
  7737  00284C  2A26               	incf	(i2___awmod@divisor+1)^0,f,c
  7738  00284E                     i2l3016:
  7739  00284E  5025               	movf	i2___awmod@divisor^0,w,c
  7740  002850  1026               	iorwf	(i2___awmod@divisor+1)^0,w,c
  7741  002852  B4D8               	btfsc	status,2,c
  7742  002854  EF2E  F014         	goto	i2u233_41
  7743  002858  EF30  F014         	goto	i2u233_40
  7744  00285C                     i2u233_41:
  7745  00285C  EF54  F014         	goto	i2l3032
  7746  002860                     i2u233_40:
  7747  002860  0E01               	movlw	1
  7748  002862  6E27               	movwf	i2___awmod@counter^0,c
  7749  002864  EF38  F014         	goto	i2l3022
  7750  002868                     i2l3020:
  7751  002868  90D8               	bcf	status,0,c
  7752  00286A  3625               	rlcf	i2___awmod@divisor^0,f,c
  7753  00286C  3626               	rlcf	(i2___awmod@divisor+1)^0,f,c
  7754  00286E  2A27               	incf	i2___awmod@counter^0,f,c
  7755  002870                     i2l3022:
  7756  002870  AE26               	btfss	(i2___awmod@divisor+1)^0,7,c
  7757  002872  EF3D  F014         	goto	i2u234_41
  7758  002876  EF3F  F014         	goto	i2u234_40
  7759  00287A                     i2u234_41:
  7760  00287A  EF34  F014         	goto	i2l3020
  7761  00287E                     i2u234_40:
  7762  00287E                     i2l3024:
  7763  00287E  5025               	movf	i2___awmod@divisor^0,w,c
  7764  002880  5C23               	subwf	i2___awmod@dividend^0,w,c
  7765  002882  5026               	movf	(i2___awmod@divisor+1)^0,w,c
  7766  002884  5824               	subwfb	(i2___awmod@dividend+1)^0,w,c
  7767  002886  A0D8               	btfss	status,0,c
  7768  002888  EF48  F014         	goto	i2u235_41
  7769  00288C  EF4A  F014         	goto	i2u235_40
  7770  002890                     i2u235_41:
  7771  002890  EF4E  F014         	goto	i2l3028
  7772  002894                     i2u235_40:
  7773  002894  5025               	movf	i2___awmod@divisor^0,w,c
  7774  002896  5E23               	subwf	i2___awmod@dividend^0,f,c
  7775  002898  5026               	movf	(i2___awmod@divisor+1)^0,w,c
  7776  00289A  5A24               	subwfb	(i2___awmod@dividend+1)^0,f,c
  7777  00289C                     i2l3028:
  7778  00289C  90D8               	bcf	status,0,c
  7779  00289E  3226               	rrcf	(i2___awmod@divisor+1)^0,f,c
  7780  0028A0  3225               	rrcf	i2___awmod@divisor^0,f,c
  7781  0028A2  2E27               	decfsz	i2___awmod@counter^0,f,c
  7782  0028A4  EF3F  F014         	goto	i2l3024
  7783  0028A8                     i2l3032:
  7784  0028A8  5028               	movf	i2___awmod@sign^0,w,c
  7785  0028AA  B4D8               	btfsc	status,2,c
  7786  0028AC  EF5A  F014         	goto	i2u236_41
  7787  0028B0  EF5C  F014         	goto	i2u236_40
  7788  0028B4                     i2u236_41:
  7789  0028B4  EF60  F014         	goto	i2l3036
  7790  0028B8                     i2u236_40:
  7791  0028B8  6C23               	negf	i2___awmod@dividend^0,c
  7792  0028BA  1E24               	comf	(i2___awmod@dividend+1)^0,f,c
  7793  0028BC  B0D8               	btfsc	status,0,c
  7794  0028BE  2A24               	incf	(i2___awmod@dividend+1)^0,f,c
  7795  0028C0                     i2l3036:
  7796  0028C0  C023  F023         	movff	i2___awmod@dividend,?i2___awmod
  7797  0028C4  C024  F024         	movff	i2___awmod@dividend+1,?i2___awmod+1
  7798  0028C8  0012               	return		;funcret
  7799  0028CA                     __end_ofi2___awmod:
  7800                           	opt callstack 0
  7801                           
  7802 ;; *************** function _rand *****************
  7803 ;; Defined at:
  7804 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\rand.c"
  7805 ;; Parameters:    Size  Location     Type
  7806 ;;		None
  7807 ;; Auto vars:     Size  Location     Type
  7808 ;;		None
  7809 ;; Return value:  Size  Location     Type
  7810 ;;                  2   24[COMRAM] int 
  7811 ;; Registers used:
  7812 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7813 ;; Tracked objects:
  7814 ;;		On entry : 0/0
  7815 ;;		On exit  : 0/0
  7816 ;;		Unchanged: 0/0
  7817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7818 ;;      Params:         2       0       0       0       0       0       0
  7819 ;;      Locals:         0       0       0       0       0       0       0
  7820 ;;      Temps:          8       0       0       0       0       0       0
  7821 ;;      Totals:        10       0       0       0       0       0       0
  7822 ;;Total ram usage:       10 bytes
  7823 ;; Hardware stack levels used:    1
  7824 ;; Hardware stack levels required when called:    1
  7825 ;; This function calls:
  7826 ;;		___omul
  7827 ;; This function is called by:
  7828 ;;		_Hi_ISR
  7829 ;; This function uses a non-reentrant model
  7830 ;;
  7831                           
  7832                           	psect	text17
  7833  002362                     __ptext17:
  7834                           	opt callstack 0
  7835  002362                     _rand:
  7836                           	opt callstack 25
  7837  002362  C05F  F001         	movff	_seed,___omul@multiplier
  7838  002366  C060  F002         	movff	_seed+1,___omul@multiplier+1
  7839  00236A  C061  F003         	movff	_seed+2,___omul@multiplier+2
  7840  00236E  C062  F004         	movff	_seed+3,___omul@multiplier+3
  7841  002372  C063  F005         	movff	_seed+4,___omul@multiplier+4
  7842  002376  C064  F006         	movff	_seed+5,___omul@multiplier+5
  7843  00237A  C065  F007         	movff	_seed+6,___omul@multiplier+6
  7844  00237E  C066  F008         	movff	_seed+7,___omul@multiplier+7
  7845  002382  0E2D               	movlw	45
  7846  002384  6E09               	movwf	___omul@multiplicand^0,c
  7847  002386  0E7F               	movlw	127
  7848  002388  6E0A               	movwf	(___omul@multiplicand+1)^0,c
  7849  00238A  0E95               	movlw	149
  7850  00238C  6E0B               	movwf	(___omul@multiplicand+2)^0,c
  7851  00238E  0E4C               	movlw	76
  7852  002390  6E0C               	movwf	(___omul@multiplicand+3)^0,c
  7853  002392  0E2D               	movlw	45
  7854  002394  6E0D               	movwf	(___omul@multiplicand+4)^0,c
  7855  002396  0EF4               	movlw	244
  7856  002398  6E0E               	movwf	(___omul@multiplicand+5)^0,c
  7857  00239A  0E51               	movlw	81
  7858  00239C  6E0F               	movwf	(___omul@multiplicand+6)^0,c
  7859  00239E  0E58               	movlw	88
  7860  0023A0  6E10               	movwf	(___omul@multiplicand+7)^0,c
  7861  0023A2  ECB5  F014         	call	___omul	;wreg free
  7862  0023A6  C001  F01B         	movff	?___omul,??_rand
  7863  0023AA  C002  F01C         	movff	?___omul+1,??_rand+1
  7864  0023AE  C003  F01D         	movff	?___omul+2,??_rand+2
  7865  0023B2  C004  F01E         	movff	?___omul+3,??_rand+3
  7866  0023B6  C005  F01F         	movff	?___omul+4,??_rand+4
  7867  0023BA  C006  F020         	movff	?___omul+5,??_rand+5
  7868  0023BE  C007  F021         	movff	?___omul+6,??_rand+6
  7869  0023C2  C008  F022         	movff	?___omul+7,??_rand+7
  7870  0023C6  0E01               	movlw	1
  7871  0023C8  241B               	addwf	??_rand^0,w,c
  7872  0023CA  6E5F               	movwf	_seed^0,c
  7873  0023CC  0E00               	movlw	0
  7874  0023CE  201C               	addwfc	(??_rand+1)^0,w,c
  7875  0023D0  6E60               	movwf	(_seed+1)^0,c
  7876  0023D2  0E00               	movlw	0
  7877  0023D4  201D               	addwfc	(??_rand+2)^0,w,c
  7878  0023D6  6E61               	movwf	(_seed+2)^0,c
  7879  0023D8  0E00               	movlw	0
  7880  0023DA  201E               	addwfc	(??_rand+3)^0,w,c
  7881  0023DC  6E62               	movwf	(_seed+3)^0,c
  7882  0023DE  0E00               	movlw	0
  7883  0023E0  201F               	addwfc	(??_rand+4)^0,w,c
  7884  0023E2  6E63               	movwf	(_seed+4)^0,c
  7885  0023E4  0E00               	movlw	0
  7886  0023E6  2020               	addwfc	(??_rand+5)^0,w,c
  7887  0023E8  6E64               	movwf	(_seed+5)^0,c
  7888  0023EA  0E00               	movlw	0
  7889  0023EC  2021               	addwfc	(??_rand+6)^0,w,c
  7890  0023EE  6E65               	movwf	(_seed+6)^0,c
  7891  0023F0  0E00               	movlw	0
  7892  0023F2  2022               	addwfc	(??_rand+7)^0,w,c
  7893  0023F4  6E66               	movwf	(_seed+7)^0,c
  7894  0023F6  C05F  F01B         	movff	_seed,??_rand
  7895  0023FA  C060  F01C         	movff	_seed+1,??_rand+1
  7896  0023FE  C061  F01D         	movff	_seed+2,??_rand+2
  7897  002402  C062  F01E         	movff	_seed+3,??_rand+3
  7898  002406  C063  F01F         	movff	_seed+4,??_rand+4
  7899  00240A  C064  F020         	movff	_seed+5,??_rand+5
  7900  00240E  C065  F021         	movff	_seed+6,??_rand+6
  7901  002412  C066  F022         	movff	_seed+7,??_rand+7
  7902  002416  0E32               	movlw	50
  7903  002418  EF17  F012         	goto	i2u230_40
  7904  00241C                     i2u230_45:
  7905  00241C  90D8               	bcf	status,0,c
  7906  00241E  3222               	rrcf	(??_rand+7)^0,f,c
  7907  002420  3221               	rrcf	(??_rand+6)^0,f,c
  7908  002422  3220               	rrcf	(??_rand+5)^0,f,c
  7909  002424  321F               	rrcf	(??_rand+4)^0,f,c
  7910  002426  321E               	rrcf	(??_rand+3)^0,f,c
  7911  002428  321D               	rrcf	(??_rand+2)^0,f,c
  7912  00242A  321C               	rrcf	(??_rand+1)^0,f,c
  7913  00242C  321B               	rrcf	??_rand^0,f,c
  7914  00242E                     i2u230_40:
  7915  00242E  2EE8               	decfsz	wreg,f,c
  7916  002430  EF0E  F012         	goto	i2u230_45
  7917  002434  C01B  F019         	movff	??_rand,?_rand
  7918  002438  C01D  F01A         	movff	??_rand+2,?_rand+1
  7919  00243C  0012               	return		;funcret
  7920  00243E                     __end_of_rand:
  7921                           	opt callstack 0
  7922                           
  7923 ;; *************** function ___omul *****************
  7924 ;; Defined at:
  7925 ;;		line 91 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul64.c"
  7926 ;; Parameters:    Size  Location     Type
  7927 ;;  multiplier      8    0[COMRAM] unsigned long long 
  7928 ;;  multiplicand    8    8[COMRAM] unsigned long long 
  7929 ;; Auto vars:     Size  Location     Type
  7930 ;;  product         8   16[COMRAM] unsigned long long 
  7931 ;; Return value:  Size  Location     Type
  7932 ;;                  8    0[COMRAM] unsigned long long 
  7933 ;; Registers used:
  7934 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7935 ;; Tracked objects:
  7936 ;;		On entry : 0/0
  7937 ;;		On exit  : 0/0
  7938 ;;		Unchanged: 0/0
  7939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7940 ;;      Params:        16       0       0       0       0       0       0
  7941 ;;      Locals:         8       0       0       0       0       0       0
  7942 ;;      Temps:          0       0       0       0       0       0       0
  7943 ;;      Totals:        24       0       0       0       0       0       0
  7944 ;;Total ram usage:       24 bytes
  7945 ;; Hardware stack levels used:    1
  7946 ;; This function calls:
  7947 ;;		Nothing
  7948 ;; This function is called by:
  7949 ;;		_rand
  7950 ;; This function uses a non-reentrant model
  7951 ;;
  7952                           
  7953                           	psect	text18
  7954  00296A                     __ptext18:
  7955                           	opt callstack 0
  7956  00296A                     ___omul:
  7957                           	opt callstack 25
  7958  00296A  EE20  F011         	lfsr	2,___omul@product
  7959  00296E  0E07               	movlw	7
  7960  002970                     i2u165_41:
  7961  002970  6ADE               	clrf	postinc2,c
  7962  002972  06E8               	decf	wreg,f,c
  7963  002974  E2FD               	bc	i2u165_41
  7964  002976                     i2l2528:
  7965  002976  A001               	btfss	___omul@multiplier^0,0,c
  7966  002978  EFC0  F014         	goto	i2u166_41
  7967  00297C  EFC2  F014         	goto	i2u166_40
  7968  002980                     i2u166_41:
  7969  002980  EFD2  F014         	goto	i2l2532
  7970  002984                     i2u166_40:
  7971  002984  5009               	movf	___omul@multiplicand^0,w,c
  7972  002986  2611               	addwf	___omul@product^0,f,c
  7973  002988  500A               	movf	(___omul@multiplicand+1)^0,w,c
  7974  00298A  2212               	addwfc	(___omul@product+1)^0,f,c
  7975  00298C  500B               	movf	(___omul@multiplicand+2)^0,w,c
  7976  00298E  2213               	addwfc	(___omul@product+2)^0,f,c
  7977  002990  500C               	movf	(___omul@multiplicand+3)^0,w,c
  7978  002992  2214               	addwfc	(___omul@product+3)^0,f,c
  7979  002994  500D               	movf	(___omul@multiplicand+4)^0,w,c
  7980  002996  2215               	addwfc	(___omul@product+4)^0,f,c
  7981  002998  500E               	movf	(___omul@multiplicand+5)^0,w,c
  7982  00299A  2216               	addwfc	(___omul@product+5)^0,f,c
  7983  00299C  500F               	movf	(___omul@multiplicand+6)^0,w,c
  7984  00299E  2217               	addwfc	(___omul@product+6)^0,f,c
  7985  0029A0  5010               	movf	(___omul@multiplicand+7)^0,w,c
  7986  0029A2  2218               	addwfc	(___omul@product+7)^0,f,c
  7987  0029A4                     i2l2532:
  7988  0029A4  90D8               	bcf	status,0,c
  7989  0029A6  3609               	rlcf	___omul@multiplicand^0,f,c
  7990  0029A8  360A               	rlcf	(___omul@multiplicand+1)^0,f,c
  7991  0029AA  360B               	rlcf	(___omul@multiplicand+2)^0,f,c
  7992  0029AC  360C               	rlcf	(___omul@multiplicand+3)^0,f,c
  7993  0029AE  360D               	rlcf	(___omul@multiplicand+4)^0,f,c
  7994  0029B0  360E               	rlcf	(___omul@multiplicand+5)^0,f,c
  7995  0029B2  360F               	rlcf	(___omul@multiplicand+6)^0,f,c
  7996  0029B4  3610               	rlcf	(___omul@multiplicand+7)^0,f,c
  7997  0029B6  90D8               	bcf	status,0,c
  7998  0029B8  3208               	rrcf	(___omul@multiplier+7)^0,f,c
  7999  0029BA  3207               	rrcf	(___omul@multiplier+6)^0,f,c
  8000  0029BC  3206               	rrcf	(___omul@multiplier+5)^0,f,c
  8001  0029BE  3205               	rrcf	(___omul@multiplier+4)^0,f,c
  8002  0029C0  3204               	rrcf	(___omul@multiplier+3)^0,f,c
  8003  0029C2  3203               	rrcf	(___omul@multiplier+2)^0,f,c
  8004  0029C4  3202               	rrcf	(___omul@multiplier+1)^0,f,c
  8005  0029C6  3201               	rrcf	___omul@multiplier^0,f,c
  8006  0029C8  5001               	movf	___omul@multiplier^0,w,c
  8007  0029CA  1002               	iorwf	(___omul@multiplier+1)^0,w,c
  8008  0029CC  1003               	iorwf	(___omul@multiplier+2)^0,w,c
  8009  0029CE  1004               	iorwf	(___omul@multiplier+3)^0,w,c
  8010  0029D0  1005               	iorwf	(___omul@multiplier+4)^0,w,c
  8011  0029D2  1006               	iorwf	(___omul@multiplier+5)^0,w,c
  8012  0029D4  1007               	iorwf	(___omul@multiplier+6)^0,w,c
  8013  0029D6  1008               	iorwf	(___omul@multiplier+7)^0,w,c
  8014  0029D8  A4D8               	btfss	status,2,c
  8015  0029DA  EFF1  F014         	goto	i2u167_41
  8016  0029DE  EFF3  F014         	goto	i2u167_40
  8017  0029E2                     i2u167_41:
  8018  0029E2  EFBB  F014         	goto	i2l2528
  8019  0029E6                     i2u167_40:
  8020  0029E6  C011  F001         	movff	___omul@product,?___omul
  8021  0029EA  C012  F002         	movff	___omul@product+1,?___omul+1
  8022  0029EE  C013  F003         	movff	___omul@product+2,?___omul+2
  8023  0029F2  C014  F004         	movff	___omul@product+3,?___omul+3
  8024  0029F6  C015  F005         	movff	___omul@product+4,?___omul+4
  8025  0029FA  C016  F006         	movff	___omul@product+5,?___omul+5
  8026  0029FE  C017  F007         	movff	___omul@product+6,?___omul+6
  8027  002A02  C018  F008         	movff	___omul@product+7,?___omul+7
  8028  002A06  0012               	return		;funcret
  8029  002A08                     __end_of___omul:
  8030                           	opt callstack 0
  8031  0000                     
  8032                           	psect	rparam
  8033  0000                     
  8034                           	psect	temp
  8035  00006D                     btemp:
  8036                           	opt callstack 0
  8037  00006D                     	ds	1
  8038  0000                     int$flags	set	btemp
  8039  0000                     wtemp8	set	btemp+1
  8040  0000                     ttemp5	set	btemp+1
  8041  0000                     ttemp6	set	btemp+4
  8042  0000                     ttemp7	set	btemp+8
  8043                           tosu	equ	0xFFF
  8044                           tosh	equ	0xFFE
  8045                           tosl	equ	0xFFD
  8046                           stkptr	equ	0xFFC
  8047                           pclatu	equ	0xFFB
  8048                           pclath	equ	0xFFA
  8049                           pcl	equ	0xFF9
  8050                           tblptru	equ	0xFF8
  8051                           tblptrh	equ	0xFF7
  8052                           tblptrl	equ	0xFF6
  8053                           tablat	equ	0xFF5
  8054                           prodh	equ	0xFF4
  8055                           prodl	equ	0xFF3
  8056                           indf0	equ	0xFEF
  8057                           postinc0	equ	0xFEE
  8058                           postdec0	equ	0xFED
  8059                           preinc0	equ	0xFEC
  8060                           plusw0	equ	0xFEB
  8061                           fsr0h	equ	0xFEA
  8062                           fsr0l	equ	0xFE9
  8063                           wreg	equ	0xFE8
  8064                           indf1	equ	0xFE7
  8065                           postinc1	equ	0xFE6
  8066                           postdec1	equ	0xFE5
  8067                           preinc1	equ	0xFE4
  8068                           plusw1	equ	0xFE3
  8069                           fsr1h	equ	0xFE2
  8070                           fsr1l	equ	0xFE1
  8071                           bsr	equ	0xFE0
  8072                           indf2	equ	0xFDF
  8073                           postinc2	equ	0xFDE
  8074                           postdec2	equ	0xFDD
  8075                           preinc2	equ	0xFDC
  8076                           plusw2	equ	0xFDB
  8077                           fsr2h	equ	0xFDA
  8078                           fsr2l	equ	0xFD9
  8079                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1064
    BSS         190
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     56     108
    BANK0           128     83     125
    BANK1           256     10     254
    BANK2           256      0     196
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    time@t	PTR long long  size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Hi_ISR in COMRAM

    _Hi_ISR->i2___awmod
    i2___awmod->_rand
    _rand->___omul

Critical Paths under _main in BANK0

    _main->_running
    _start->___awdiv
    _srand->_time
    _running->_end
    _end->___lwdiv

Critical Paths under _Hi_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Hi_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Hi_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Hi_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Hi_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Hi_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0   10845
                                             75 BANK0      8     8      0
                                              0 BANK1     10    10      0
                            _initial
                            _running
                              _srand
                              _start
                               _time
 ---------------------------------------------------------------------------------
 (1) _time                                                 8     0      8     152
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _start                                               14    14      0    1781
                                              8 BANK0     14    14      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     723
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     625
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _srand                                                6     4      2     121
                                              8 BANK0      6     4      2
                               _time (ARG)
 ---------------------------------------------------------------------------------
 (1) _running                                             26    26      0    8247
                                             49 BANK0     26    26      0
                           _ADC_Read
                             ___lmul
                                _end
 ---------------------------------------------------------------------------------
 (2) _end                                                 42    42      0    5869
                                              7 BANK0     42    42      0
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    2032
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     852
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     601
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     456
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             6     4      2      34
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _initial                                              4     4      0     130
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Hi_ISR                                              16    16      0    1176
                                             40 COMRAM    16    16      0
                               _rand
                          i2___awmod
                          i2___lwmod
 ---------------------------------------------------------------------------------
 (5) i2___lwmod                                            5     1      4     367
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) i2___awmod                                            6     2      4     348
                                             34 COMRAM     6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (5) _rand                                                10     8      2     370
                                             24 COMRAM    10     8      2
                             ___omul
 ---------------------------------------------------------------------------------
 (6) ___omul                                              24     8     16     370
                                              0 COMRAM    24     8     16
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initial
   _running
     _ADC_Read
     ___lmul
     _end
       ___lwdiv
       ___lwmod
       ___wmul
   _srand
     _time (ARG)
   _start
     ___awdiv
     ___awmod
   _time

 _Hi_ISR (ROOT)
   _rand
     ___omul
   i2___awmod
     _rand (ARG)
       ___omul
   i2___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0     2D0      17       46.9%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C4       9       76.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100      A      FE       7       99.2%
BITBANK0            80      0       0       4        0.0%
BANK0               80     53      7D       5       97.7%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     38      6C       1       85.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2AB      15        0.0%
DATA                 0      0     57B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Dec 30 16:59:11 2019

           ___awdiv@sign 0085                       _go 0220      ___wmul@multiplicand 0082  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000                      l222 2360  
                    l232 01DC                      l326 136C                      l193 25F0  
                    l433 2C94                      l337 1542                      l196 2C0E  
                    l444 2AD8                      l445 2AE8                      l269 0AB8  
                    l199 2C3C                      l295 0E64                      l287 0D6A  
                    l664 26B6                      l931 2A7C                      l924 2A74  
                    l941 2B4E                      l677 2768                      l934 2B46  
           __CFG_CPB$OFF 000000                      _PR2 000FCB             __CFG_CPD$OFF 000000  
                    _din 0039                      _end 0012                      _obj 01C0  
                    _row 00D3             ___awmod@sign 0085                      wreg 000FE8  
           __CFG_IESO$ON 000000             __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000  
                   l1116 2C00                     l1109 2C6C                     l4010 0FE0  
                   l4002 0F84                     l4012 0FE8                     l4004 0FC4  
                   l4110 1516                     l4022 1050                     l4120 152E  
                   l4112 1526                     l4104 1374                     l4040 10FC  
                   l4032 10A0                     l4024 1064                     l4016 1008  
                   l4008 0FCC                     l4200 15C8                     l4122 1530  
                   l4114 1528                     l4050 114C                     l4042 1110  
                   l4034 10E0                     l4026 1078                     l4018 1048  
                   l4210 161A                     l4202 15D0                     l4124 1532  
                   l4116 152A                     l4108 1394                     l4060 11AE  
                   l4052 118C                     l4044 1124                     l4028 1080  
                   l4140 2C3E                     l4132 2BB4                     l4300 1866  
                   l4220 1656                     l4212 1626                     l4204 1608  
                   ?_end 0001                     l3510 013A                     l3502 00B0  
                   l4118 152C                     l4070 122C                     l4046 112C  
                   l4038 10E8                     l4134 2BC8                     l4310 189E  
                   l4230 1690                     l4222 165E                     l4214 1630  
                   l4206 160C                     l4150 154E                     l4142 1544  
                   l3440 2A34                     l3432 2A08                     l3600 06B0  
                   l3520 017E                     l3512 0158                     l3504 0100  
                   l4128 153A                     l4080 1274                     l4064 11CE  
                   l4072 1238                     l4056 1194                     l4136 2BF0  
                   l4312 18BA                     l4320 18EA                     l4240 16C2  
                   l4232 1694                     l4224 1664                     l4216 1636  
                   l4208 1610                     l4160 155C                     l4152 1550  
                   l4144 1548                     l3450 2A68                     l3442 2A42  
                   l3434 2A12                     l3426 2C6E                     l3610 06E0  
                   l3530 01D0                     l3522 0192                     l3506 0104  
                   l4090 12E6                     l4082 12CA                     l4074 124C  
                   l4066 1224                     l4058 11A6                     l4330 1934  
                   l4322 1906                     l4314 18C8                     l4306 1878  
                   l4250 1712                     l4242 16CC                     l4226 1668  
                   l4218 163A                     l4170 156A                     l4162 1560  
                   l4154 1552                     l4146 154A                     l3452 2A6E  
                   l3444 2A48                     l3436 2A24                     l3460 2B0E  
                   l3428 2C8C                     l3612 0780                     l3604 06B8  
                   l3540 0288                     l3532 01E0                     l3524 019E  
                   l3508 0120                     l4092 12EE                     l4076 1254  
                   l3700 264E                     l4332 198E                     l4324 1918  
                   l4316 18DA                     l4308 1894                     l4244 16E8  
                   l4228 1684                     l4252 1718                     l4180 157A  
                   l4172 156E                     l4164 1562                     l4156 1554  
                   l4148 154C                     l3470 2C02                     l3446 2A5E  
                   l3438 2A2C                     l3462 2B1C                     l3454 2AEA  
                   l3630 0860                     l3622 07B0                     l3606 06C0  
                   l3550 02B4                     l3542 028C                     l3526 01B0  
                   l3518 0162                     l3710 2688                     l3702 2656  
                   l4334 1994                     l4318 18E4                     l4270 179A  
                   l4254 1734                     l4246 16F6                     l4238 16A6  
                   l4190 15A8                     l4182 157C                     l4174 1572  
                   l4166 1564                     l4158 1558                     l3472 2C0A  
                   l3448 2A66                     l3464 2B32                     l3456 2AFE  
                   l3640 0928                     l3624 0850                     l3616 0788  
                   l3552 0354                     l3544 02AC                     l3528 01BC  
                   l4096 130E                     l4088 12D2                     l3720 26AE  
                   l3712 268A                     l3704 2664                     l3800 2180  
                   l4336 19B0                     l4280 17F8                     l4264 175E  
                   l4272 17B6                     l4256 173C                     l4248 1708  
                   l4192 15BE                     l4184 157E                     l4176 1576  
                   l4168 1566                     l3474 2C0C                     l3466 2B3A  
                   l3458 2B06                     l3642 0930                     l3634 0880  
                   l3618 0790                     l3570 0450                     l3562 03A0  
                   l3554 0358                     l3538 01E8                     l3490 006C  
                   l3482 0012                     l4098 1364                     l3714 2690  
                   l3706 266A                     l3730 26D4                     l3810 21CA  
                   l3802 219C                     l4290 1830                     l4282 1802  
                   l4274 17C8                     l4266 178C                     l4258 1756  
                   l4194 15C0                     l4186 1588                     l4178 1578  
                   l3476 2C1C                     l3468 2B40                     l3636 0920  
                   l3628 0858                     l3580 0518                     l3564 0440  
                   l3556 0378                     l3492 0070                     l3900 0C44  
                   l3708 2680                     l3716 2696                     l3740 2708  
                   l3732 26D8                     l3724 26B8                     l3812 21D6  
                   l3820 2220                     l3804 21A4                     l4292 1836  
                   l4284 1808                     l4276 17E2                     l4268 1796  
                   l4196 15C2                     l4188 15A4                     l3478 2C34  
                   l3670 2A7E                     l3662 0A98                     l3646 0950  
                   l3582 0520                     l3574 0470                     l3558 0380  
                   l3654 09F8                     l3494 008C                     l3910 0C4C  
                   l3902 0C46                     l3718 26A6                     l3750 2742  
                   l3742 2710                     l3734 26E6                     l3726 26BE  
                   l3830 2272                     l3822 223C                     l3814 21DA  
                   l3806 21AA                     l4294 183A                     l4286 180C  
                   l4278 17EC                     l4198 15C4                     l3760 2518  
                   l3672 2A90                     l3664 0A9C                     l3648 09F0  
                   l3592 05E8                     l3576 0510                     l3568 0448  
                   l3656 0A64                     l3496 00A6                     l3488 001C  
                   l3920 0CC0                     l3912 0C64                     l3904 0C48  
                   l3680 25F2                     l3744 271E                     l3752 2748  
                   l3736 26EE                     l3728 26CC                     l3840 22E0  
                   l3824 224A                     l3816 21E8                     l3808 21AE  
                   l4296 1856                     l4288 1828                     l3762 2566  
                   l3674 2A9E                     l3658 0A80                     l4378 0A0E  
                   l3594 05F0                     l3586 0540                     l3930 0CF2  
                   l3922 0CC4                     l3914 0C98                     l3906 0C4A  
                   l3690 2620                     l3682 25F8                     l3754 2758  
                   l3746 2734                     l3738 2700                     l3850 2346  
                   l3842 22E4                     l3826 2252                     l3818 2218  
                   l4298 1862                     l3772 2580                     l3764 2568  
                   l3676 2AAE                     l3588 05E0                     l3940 0D62  
                   l3932 0D0E                     l3924 0CE0                     l3916 0CB2  
                   l3908 0C4C                     l3860 0AD4                     l3852 0ABA  
                   l3692 2628                     l3684 2606                     l3756 2760  
                   l3748 273C                     l3844 230A                     l3836 228A  
                   l3828 2256                     l3780 20E8                     l3774 25D0  
                   l3766 256A                     l3678 2AB8                     l3598 0610  
                   l3950 0DC6                     l3934 0D1A                     l3926 0CE8  
                   l3918 0CBA                     l3862 0AFC                     l3694 262C  
                   l3686 260E                     l3846 230E                     l3838 22AE  
                   l3790 2146                     l3776 25D4                     l3960 0E20  
                   l3944 0D78                     l3952 0DD4                     l3936 0D1E  
                   l3928 0CEE                     l3880 0B9C                     l3864 0B2C  
                   l3696 2634                     l3688 2612                     l3848 232A  
                   l3792 2162                     l3970 0E86                     l3962 0E3A  
                   l3954 0DDC                     l3946 0DA2                     l3938 0D2C  
                   l3890 0C10                     l3882 0BB6                     l3874 0B54  
                   l3866 0B30                     l3858 0ACC                     l3698 2646  
                   l3794 216E                     l3786 20F2                     l3778 20CE  
                   l3980 0EDA                     l3964 0E4C                     l3956 0DF6  
                   l3948 0DAA                     l3892 0C14                     l3876 0B7C  
                   l3868 0B4C                     l3796 2176                     l3788 2142  
                   l3990 0F40                     l3982 0EEC                     l3974 0EA6  
                   l3966 0E6C                     l3958 0E08                     l3894 0C30  
                   l3878 0B80                     l3798 217C                     l3984 0EF4  
                   l3976 0ED2                     l3968 0E7E                     l3896 0C40  
                   l3888 0BC0                     _ADFM 007E07                     l3994 0F48  
                   l3898 0C42                     l3996 0F5C                     l3988 0F14  
                   l3998 0F64                     u3000 0AB8                     u3001 0AB4  
                   u3010 2A9E                     u3011 2A9A                     u3020 2AD8  
                   u3100 26E6                     u3021 2AD4                     u3101 26E2  
                   _LATA 000F89                     u3030 2606                     u3110 2700  
                   _LATB 000F8A                     u3031 2602                     u3111 26FC  
                   _LATC 000F8B                     u3040 2620                     u3120 271E  
                   u3200 223C                     _LATD 000F8C                     u3041 261C  
                   u3121 271A                     u3201 2238                     u3050 2646  
                   u3130 2734                     u3210 224A                     u3051 2642  
                   u3131 2730                     u3211 2246                     u3300 0D0E  
                   u3060 2664                     u3140 2758                     u3220 2272  
                   u3301 0D0A                     u3061 2660                     u3141 2754  
                   u3221 226E                     u3150 25F0                     u3310 0D2C  
                   u3070 2680                     u3230 22AE                     u3151 25EC  
                   u3311 0D28                     u3071 267C                     u3231 22AA  
                   u3400 0E4C                     u3320 0D62                     u3080 26A6  
                   u3240 22E0                     u3160 2162                     u3401 0E48  
                   u3321 0D5E                     u3081 26A2                     u3241 22DC  
                   u3161 215E                     u3410 0E7E                     u3330 0D78  
                   u3090 26CC                     u3250 232A                     u3170 219C  
                   u3411 0E7A                     u3331 0D74                     u3091 26C8  
                   u3251 2326                     u3171 2198                     u3500 1078  
                   u3420 0EA2                     u3340 0DA2                     u3260 0B4C  
                   u3180 21CA                     u3501 1074                     u3421 0E9E  
                   u3341 0D9E                     u3261 0B48                     u3181 21C6  
                   u3510 109C                     u3430 0EEC                     u3350 0DC6  
                   u3270 0B9C                     u3190 21E8                     u3511 1098  
                   u3431 0EE8                     u3351 0DC2                     u3271 0B98  
                   u3191 21E4                     u2800 2AFE                     u3600 12E6  
                   u3520 10FC                     u3440 0F10                     u3360 0DD4  
                   u3280 0C30                     u2801 2AFA                     u3601 12E2  
                   u3521 10F8                     u3441 0F0C                     u3361 0DD0  
                   u3281 0C2C                     u2810 2B1C                     u3610 130A  
                   u3530 1110                     u3450 0F5C                     u3370 0DF6  
                   u3290 0CE0                     u2811 2B18                     u3611 1306  
                   u3531 110C                     u3451 0F58                     u3371 0DF2  
                   u3291 0CDC                     u2820 2B32                     u2900 0374  
                   u3620 1390                     u3540 1124                     u3460 0F80  
                   u3380 0E08                     u3700 16F6                     u2821 2B2E  
                   u2901 0370                     u3621 138C                     u3541 1120  
                   u3461 0F7C                     u3381 0E04                     u3701 16F2  
                   u2830 2C1C                     u2910 039C                     u3630 1516  
                   u3550 1148                     u3470 0FE0                     u3390 0E3A  
                   u3710 1734                     u2831 2C18                     u2911 0398  
                   u3631 1512                     u3551 1144                     u3471 0FDC  
                   u3391 0E36                     u3711 1730                     u2920 046C  
                   u2840 008C                     u3560 11A6                     u3480 1004  
                   u3640 2BC8                     u3800 18C8                     u3720 1756  
                   u2921 0468                     u2841 0088                     u3561 11A2  
                   u3481 1000                     u3641 2BC4                     u3801 18C4  
                   u3721 1752                     u2770 2A24                     u2930 053C  
                   u2850 0120                     u3570 11CA                     u3490 1064  
                   u3810 1906                     u3730 17B6                     u3650 1656  
                   u2771 2A20                     u2931 0538                     u2851 011C  
                   u3571 11C6                     u3491 1060                     u3811 1902  
                   u3731 17B2                     u3651 1652                     u2780 2A42  
                   u2940 060C                     u2860 0192                     u3580 124C  
                   u3820 1918                     u3740 17C8                     u3660 1684  
                   u2781 2A3E                     u2941 0608                     u2861 018E  
                   u3581 1248                     u3821 1914                     u3741 17C4  
                   u3661 1680                     u2790 2A5E                     u2950 06DC  
                   u2870 01B0                     u3590 1270                     u3830 19B0  
                   u3750 1828                     u3670 16A2                     u2791 2A5A  
                   u2951 06D8                     u2871 01AC                     u3591 126C  
                   u3831 19AC                     u3751 1824                     u3671 169E  
                   u2960 07AC                     u2880 01D0                     u3760 1856  
                   u3680 16C2                     u2961 07A8                     u2881 01CC  
                   u3761 1852                     u3681 16BE                     u2970 087C  
                   u2890 02A8                     u3770 1874                     u3690 16E8  
                   u2971 0878                     u2891 02A4                     u3907 0C38  
                   u3771 1870                     u3691 16E4                     u2980 094C  
                   u3780 1894                     u2981 0948                     u3917 0098  
                   u3781 1890                     u2990 0A94                     u3790 18BA  
                   u2991 0A90                     u3927 012C                     u3791 18B6  
                   u3847 16FE                     u3857 17D4                     u3867 18D0  
                   u3877 20DA                     u3887 2352                     u3897 0BA8  
                   _TMR0 000FD6                     _TMR3 000FB2             __CFG_WDTPS$1 000000  
                   _main 1544                     _hold 0240                     _line 006B  
                   end@i 0095                     end@j 0099                     _num0 0260  
                   _num1 0140                     _num2 0130                     _num3 0120  
                   _num4 0110                     _num5 0100                     _num6 02A0  
                   _rand 2362                     _num7 0290                     _num8 0280  
                   _num9 0270                     _seed 005F                     _time 2BB4  
                   fsr1h 000FE2                     fsr2h 000FDA                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9                     btemp 006D  
            main@nothing 01F4         __end_of_ADC_Read 2C3E                     prodh 000FF4  
                   prodl 000FF3                     start 000E            __CFG_MCLRE$ON 000000  
           ___param_bank 000000                    ??_end 0087                    ?_main 0001  
                  ?_rand 0019          __end_of___awdiv 26B8          __end_of___awmod 276A  
                  ?_time 0080                    _T0CON 000FD5          ___awdiv@divisor 0082  
                  _T1CON 000FCD                    _T2CON 000FCA                    _T3CON 000FB1  
        __end_of___lwdiv 2A7E          __end_of___lwmod 2B50                    i2l401 1A9E  
                  i2l410 1B14                    i2l403 1DF2                    i2l404 1AEA  
                  i2l406 1C0E                    i2l430 1DF2                    i2l416 1B74  
                  i2l408 1B04                    i2l450 29E6                    i2l451 2A06  
                  i2l399 1AD6                    i2l677 28C8                    i2l941 2BB2  
                  i2l934 2BAA          ___awdiv@counter 0084                    _TMR1H 000FCF  
                  _TMR1L 000FCE                    _TMR3H 000FB3                    _TMR3L 000FB2  
                  _PORTA 000F80                    _PORTB 000F81                    _PORTC 000F82  
                  _PORTD 000F83                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
    ___lmul@multiplicand 0084            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    _det_i 0049  
                  _dis_i 004D                    _arrow 0150                    _crush 01A0  
        __end_of_initial 25F2                    _rock1 0170                    _rock2 0160  
                  _score 00F7                    _test1 0051                    _test2 004F  
                  _srand 2C3E                    _start 20CE                    main@i 01FA  
                  tablat 000FF5             _running_flag 005B                    time@t 0080  
                  plusw2 000FDB                    ttemp5 006E                    ttemp6 0071  
                  ttemp7 0075                    status 000FD8                    wtemp8 006E  
        __end_of_running 1544       __size_ofi2___awmod 00B0           __CFG_PBADEN$ON 000000  
     __size_ofi2___lwmod 0064          __initialization 243E             __end_of_main 19C8  
           __end_of_rand 243E             __end_of_time 2C02                   ??_main 00CB  
                 ??_rand 001B                   ??_time 0088            __activetblptr 000002  
                 _ADCON1 000FC1                   _ADRESH 000FC4                   _ADRESL 000FC3  
                 _CCPR1L 000FBE         ___awdiv@dividend 0080                   ?_srand 0088  
                 ?_start 0001                   i2l1112 243C                   i2l3000 23F6  
                 i2l3010 2834                   i2l3020 2868                   i2l3012 2838  
                 i2l3004 281A                   i2l3030 28A2                   i2l3022 2870  
                 i2l3014 2846                   i2l3006 281E                   i2l3024 287E  
                 i2l3032 28A8                   i2l3016 284E                   i2l3008 282C  
                 i2l3040 2B50                   i2l3034 28B8                   i2l3026 2894  
                 i2l3018 2860                   i2l3050 2B96                   i2l3042 2B62  
                 i2l3036 28C0                   i2l3028 289C                   i2l3052 2B9E  
                 i2l3044 2B6A                   i2l3300 1B58                   i2l3054 2BA4  
                 i2l3046 2B72                   i2l3310 1B7C                   i2l3302 1B5C  
                 i2l3048 2B80                   i2l3320 1C00                   i2l3304 1B64  
                 i2l2530 2984                   i2l3330 1C40                   i2l3322 1C08  
                 i2l3306 1B68                   i2l3314 1B84                   i2l2532 29A4  
                 i2l3340 1CBA                   i2l3332 1C40                   i2l3324 1C1C  
                 i2l3308 1B6C                   i2l3316 1BE0                   i2l3260 1A24  
                 i2l3252 19D2                   i2l2534 29B6                   i2l2526 296A  
                 i2l3350 1D06                   i2l3342 1CBE                   i2l3326 1C2E  
                 i2l3318 1BE4                   i2l3262 1A2C                   i2l3270 1ACA  
                 i2l3254 19E0                   i2l2528 2976                   i2l3360 1D4A  
                 i2l3352 1D16                   i2l3344 1CDA                   i2l3328 1C38  
                 i2l3280 1B24                   i2l3272 1AE4                   i2l3264 1A32  
                 i2l3256 19E2                   i2l3370 1D9C                   i2l3362 1D5C  
                 i2l3354 1D2A                   i2l3346 1CEC                   i2l3338 1C48  
                 i2l3290 1B3C                   i2l3282 1B28                   i2l3274 1AF8  
                 i2l3266 1A6A                   i2l3258 19E6                   i2l3372 1DAC  
                 i2l3364 1D6E                   i2l3356 1D30                   i2l3348 1CF2  
                 i2l3292 1B44                   i2l3284 1B2C                   i2l3276 1B0C  
                 i2l3268 1AA0                   i2l3374 1DC0                   i2l3366 1D80  
                 i2l3358 1D42                   i2l3294 1B48                   i2l3286 1B34  
                 i2l3278 1B1C                   i2l3376 1DE4                   i2l3368 1D86  
                 i2l3296 1B4C                   i2l3288 1B38                   i2l3378 1DEC  
                 i2l3298 1B54                   i2l4380 1B9A                   i2l2998 2362  
                 _Hi_ISR 0008           __CFG_XINST$OFF 000000                   ___lmul 2A7E  
                 ___omul 296A                   ___wmul 2C6E                ??___awdiv 0084  
         __CFG_STVREN$ON 000000                ??___awmod 0084                   _detect 01E0  
              ??___lwdiv 0084                   _create 0053                ??___lwmod 0084  
                 _endimg 0200          ADC_Read@digital 0084                   clear_0 24E0  
                 end@num 0093                   clear_1 24EC                   clear_2 24F8  
                 clear_3 2504         ___awdiv@quotient 0086          ___awmod@divisor 0082  
                 _pr_arr 042C                   _pr_idx 00F9          ___awmod@counter 0084  
           __pdataBIGRAM 02C4             __pdataCOMRAM 0067                ??_initial 0080  
      __end_ofi2___awmod 28CA                ?_ADC_Read 0080        __end_ofi2___lwmod 2BB4  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
                 srand@s 0088                   start@i 0092           i2___awmod@sign 0028  
              ??_running 00B1               __accesstop 0080  __end_of__initialization 250A  
          ___rparam_used 000001       i2___lwmod@dividend 0001           __pcstackCOMRAM 0001  
           __pidataBANK0 2C9C             __pidataBANK1 28CA             __pidataBANK2 276A  
          __end_of_srand 2C6E            __end_of_start 2362               ??_ADC_Read 0082  
                ??_srand 008A                  ??_start 0088               __pbssBANK0 00D3  
             __pbssBANK1 01A0               __pbssBANK2 02B0                  ?_Hi_ISR 0001  
                ?___lmul 0080                  ?___omul 0001                  ?___wmul 0080  
           running@i_934 00C9             running@i_890 00C3             running@i_891 00C7  
                _CCP1CON 000FBD      ___omul@multiplicand 0009           ___lmul@product 0088  
                Hi_ISR@i 0037           running@digital 00BF          __size_of_Hi_ISR 1DF6  
                __Hparam 0000                  __Lparam 0000                  ___awdiv 25F2  
        __size_of___lmul 006C                  ___awmod 26B8          __size_of___omul 009E  
        __size_of___wmul 0028                  ___lwdiv 2A08                  ___lwmod 2AEA  
                __pcinit 243E                  __ramtop 0600                  _din_dun 0180  
                _din_ori 0190                  __ptext0 1544                  __ptext1 2BB4  
                __ptext2 20CE                  __ptext3 26B8                  __ptext4 25F2  
                __ptext5 2C3E                  __ptext6 0ABA                  __ptext7 0012  
                __ptext8 2C6E                  __ptext9 2AEA                  _dis_avr 004B  
              _T0CONbits 000FD5                _T2CONbits 000FCA             __size_of_end 0AA8  
                _initial 2518                _T3CONbits 000FB1         ___awmod@dividend 0080  
                _tmr_arr 02C4                  _running 0ABA           __pintcode_body 19C8  
   end_of_initialization 250A           ___omul@product 0011               _tmr1_count 005D  
          __Lmediumconst 0000                  int_func 19C8                  postdec1 000FE5  
                postdec2 000FDD               _timer3_val 0067                  postinc0 000FEE  
                postinc1 000FE6                  postinc2 000FDE               _time_count 00F3  
              _PORTCbits 000F82                _TRISCbits 000F94               main@i_1000 01FC  
      __size_of_ADC_Read 003C                i2___awmod 281A                i2___lwmod 2B50  
             main@access 01F8           __end_of_Hi_ISR 1DFE           __end_of___lmul 2AEA  
         __end_of___omul 2A08            __pidataBIGRAM 1DFE           __end_of___wmul 2C96  
          __pidataCOMRAM 2C96      start_initialization 243E              __end_of_end 0ABA  
             ?i2___awmod 0023               ?i2___lwmod 0001        ___omul@multiplier 0001  
       __CFG_OSC$INTIO67 000000                 ??_Hi_ISR 0029                 ??___lmul 0088  
               ??___omul 0011                 ??___wmul 0084              __pdataBANK0 00FB  
            __pdataBANK1 0100              __pdataBANK2 0200         __CFG_LPT1OSC$OFF 000000  
            __pbssCOMRAM 0039            __pcstackBANK0 0080            __pcstackBANK1 01F4  
      i2___lwmod@divisor 0003        i2___lwmod@counter 0005         ___lwdiv@dividend 0080  
              _fall_flag 00F5        __CFG_CCP2MX$PORTC 000000                __pintcode 0008  
               ?___awdiv 0080                 ?___awmod 0080                 ?___lwdiv 0080  
               ?___lwmod 0080                 ?_initial 0001                 _ADC_Read 2C02  
       ___lwdiv@quotient 0085              ??i2___awmod 0027                 ?_running 0001  
            ??i2___lwmod 0005           __size_of_srand 0030           __size_of_start 0294  
         ___wmul@product 0084                 _LATCbits 000F8B                 _IPR1bits 000F9F  
               _IPR2bits 000FA2                 _PIE1bits 000F9D                 _PIE2bits 000FA0  
              _jump_flag 0059                _jump_time 00FB                 i2u230_40 242E  
               i2u230_45 241C                 i2u231_40 282C                 i2u231_41 2828  
               i2u232_40 2846                 i2u232_41 2842                 i2u233_40 2860  
               i2u233_41 285C                 i2u234_40 287E                 i2u234_41 287A  
               i2u235_40 2894                 i2u235_41 2890                 i2u236_40 28B8  
               i2u260_40 1A24                 i2u236_41 28B4                 i2u260_41 1A20  
               i2u237_40 2B62                 i2u261_40 1A6A                 i2u165_41 2970  
               i2u237_41 2B5E                 i2u261_41 1A66                 i2u166_40 2984  
               i2u238_40 2B80                 i2u270_40 1D2A                 i2u262_40 1AE4  
               i2u166_41 2980                 i2u238_41 2B7C                 i2u270_41 1D26  
               i2u262_41 1AE0                 i2u167_40 29E6                 i2u239_40 2B96  
               i2u271_40 1D42                 i2u263_40 1AF8                 i2u167_41 29E2  
               i2u239_41 2B92                 i2u271_41 1D3E                 i2u263_41 1AF4  
               i2u272_40 1D5C                 i2u264_40 1C00                 i2u272_41 1D58  
               i2u264_41 1BFC                 i2u273_40 1D6E                 i2u265_40 1C1C  
               i2u273_41 1D6A                 i2u265_41 1C18                 _PIR1bits 000F9E  
               i2u274_40 1D80                 i2u266_40 1C2E                 i2u274_41 1D7C  
               i2u266_41 1C2A                 i2u275_40 1D9C                 i2u267_40 1CDA  
               i2u259_40 19E0                 i2u275_41 1D98                 i2u267_41 1CD6  
               i2u259_41 19DC                 _PIR2bits 000FA1                 i2u276_40 1DC0  
               i2u268_40 1CEC                 i2u276_41 1DBC                 i2u268_41 1CE8  
               i2u269_40 1D06                 i2u269_41 1D02                 _RCONbits 000FD0  
             _ADCON0bits 000FC2               _ADCON2bits 000FC0        ___wmul@multiplier 0080  
      ___lmul@multiplier 0080              _INTCON2bits 000FF1                copy_data0 2452  
              copy_data1 2476                copy_data2 2496                copy_data3 24CE  
     i2___awmod@dividend 0023               start@i_871 0094               start@nzero 008E  
               __Hrparam 0000                 __Lrparam 0000       __CFG_BOREN$SBORDIS 000000  
       __size_of___awdiv 00C6         __size_of___awmod 00B2         __size_of___lwdiv 0076  
       __size_of___lwmod 0066         __size_of_initial 00DA          ___lwdiv@divisor 0082  
        ___lwdiv@counter 0084                 __ptext10 2A08                 __ptext11 2A7E  
               __ptext12 2C02                 __ptext13 2518                 __ptext15 2B50  
               __ptext16 281A                 __ptext17 2362                 __ptext18 296A  
               _distance 02B0         __size_of_running 0A8A                 _dun_flag 0057  
               end@i_880 009F                 end@i_881 00A1                 end@i_882 00A3  
               end@i_874 0097                 end@i_883 00A5                 end@i_884 00A7  
               end@i_885 00A9                 end@i_886 00AB                 end@i_878 009B  
               end@i_887 00AD                 end@i_879 009D            __size_of_main 0484  
          __size_of_rand 00DC            __size_of_time 004E                 end@shift 00AF  
               int$flags 006D                 main@temp 01F6             _timer3_count 0055  
      i2___awmod@divisor 0025        i2___awmod@counter 0027               _INTCONbits 000FF2  
              start@temp 008C                 initial@i 0082                 intlevel2 0000  
       ___lwmod@dividend 0080                 start@sum 0090                 running@i 00C5  
        ___lwmod@divisor 0082          ___lwmod@counter 0084  
