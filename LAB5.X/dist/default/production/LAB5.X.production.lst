

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Oct 21 17:33:00 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
     9                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    10  0000                     
    11                           ; Version 2.10
    12                           ; Generated 31/07/2019 GMT
    13                           ; 
    14                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC18F4520 Definitions
    43                           ; 
    44                           ; SFR Addresses
    45  0000                     
    46                           ; #config settings
    47                           
    48                           	psect	cinit
    49  007F96                     __pcinit:
    50                           	opt callstack 0
    51  007F96                     start_initialization:
    52                           	opt callstack 0
    53  007F96                     __initialization:
    54                           	opt callstack 0
    55  007F96                     end_of_initialization:
    56                           	opt callstack 0
    57  007F96                     __end_of__initialization:
    58                           	opt callstack 0
    59  007F96  0100               	movlb	0
    60  007F98  EFCE  F03F         	goto	_main	;jump to C main() function
    61                           
    62                           	psect	cstackCOMRAM
    63  000001                     __pcstackCOMRAM:
    64                           	opt callstack 0
    65  000001                     ?_divide:
    66  000001                     main@quo:
    67                           	opt callstack 0
    68  000001                     _divide$0:
    69                           	opt callstack 0
    70                           
    71                           ; 2 bytes @ 0x0
    72  000001                     	ds	1
    73  000002                     main@rem:
    74                           	opt callstack 0
    75                           
    76                           ; 1 bytes @ 0x1
    77  000002                     	ds	1
    78  000003                     _divide$1:
    79                           	opt callstack 0
    80  000003                     main@res:
    81                           	opt callstack 0
    82                           
    83                           ; 2 bytes @ 0x2
    84  000003                     	ds	2
    85                           
    86 ;;
    87 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    88 ;;
    89 ;; *************** function _main *****************
    90 ;; Defined at:
    91 ;;		line 5 in file "newmain.c"
    92 ;; Parameters:    Size  Location     Type
    93 ;;		None
    94 ;; Auto vars:     Size  Location     Type
    95 ;;  res             2    2[COMRAM] volatile unsigned int 
    96 ;;  rem             1    1[COMRAM] volatile unsigned char 
    97 ;;  quo             1    0[COMRAM] volatile unsigned char 
    98 ;; Return value:  Size  Location     Type
    99 ;;                  1    wreg      void 
   100 ;; Registers used:
   101 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
   102 ;; Tracked objects:
   103 ;;		On entry : 0/0
   104 ;;		On exit  : 0/0
   105 ;;		Unchanged: 0/0
   106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   107 ;;      Params:         0       0       0       0       0       0       0
   108 ;;      Locals:         4       0       0       0       0       0       0
   109 ;;      Temps:          0       0       0       0       0       0       0
   110 ;;      Totals:         4       0       0       0       0       0       0
   111 ;;Total ram usage:        4 bytes
   112 ;; Hardware stack levels required when called:    1
   113 ;; This function calls:
   114 ;;		_divide
   115 ;; This function is called by:
   116 ;;		Startup code after reset
   117 ;; This function uses a non-reentrant model
   118 ;;
   119                           
   120                           	psect	text0
   121  007F9C                     __ptext0:
   122                           	opt callstack 0
   123  007F9C                     _main:
   124                           	opt callstack 30
   125  007F9C                     
   126                           ;newmain.c: 6:     volatile unsigned int res = divide(255, 8);
   127  007F9C  0E00               	movlw	0
   128  007F9E  6E02               	movwf	(_divide$0+1)^0,c
   129  007FA0  6801               	setf	_divide$0^0,c
   130  007FA2  0E00               	movlw	0
   131  007FA4  6E04               	movwf	(_divide$1+1)^0,c
   132  007FA6  0E08               	movlw	8
   133  007FA8  6E03               	movwf	_divide$1^0,c
   134  007FAA  ECE3  F03F         	call	_divide	;wreg free
   135  007FAE  C001  F003         	movff	?_divide,main@res	;volatile
   136  007FB2  C002  F004         	movff	?_divide+1,main@res+1	;volatile
   137  007FB6                     
   138                           ;newmain.c: 7:     volatile unsigned char quo = res >> 8;
   139  007FB6  5004               	movf	(main@res+1)^0,w,c	;volatile
   140  007FB8  6E01               	movwf	main@quo^0,c	;volatile
   141  007FBA                     
   142                           ;newmain.c: 8:     volatile unsigned char rem = res % 256;
   143  007FBA  C003  F002         	movff	main@res,main@rem	;volatile
   144  007FBE                     l7:
   145  007FBE  EFDF  F03F         	goto	l7
   146  007FC2  EF00  F000         	goto	start
   147  007FC6                     __end_of_main:
   148                           	opt callstack 0
   149  0000                     
   150                           	psect	rparam
   151  0000                     tosu	equ	0xFFF
   152                           tosh	equ	0xFFE
   153                           tosl	equ	0xFFD
   154                           stkptr	equ	0xFFC
   155                           pclatu	equ	0xFFB
   156                           pclath	equ	0xFFA
   157                           pcl	equ	0xFF9
   158                           tblptru	equ	0xFF8
   159                           tblptrh	equ	0xFF7
   160                           tblptrl	equ	0xFF6
   161                           tablat	equ	0xFF5
   162                           prodh	equ	0xFF4
   163                           prodl	equ	0xFF3
   164                           indf0	equ	0xFEF
   165                           postinc0	equ	0xFEE
   166                           postdec0	equ	0xFED
   167                           preinc0	equ	0xFEC
   168                           plusw0	equ	0xFEB
   169                           fsr0h	equ	0xFEA
   170                           fsr0l	equ	0xFE9
   171                           wreg	equ	0xFE8
   172                           indf1	equ	0xFE7
   173                           postinc1	equ	0xFE6
   174                           postdec1	equ	0xFE5
   175                           preinc1	equ	0xFE4
   176                           plusw1	equ	0xFE3
   177                           fsr1h	equ	0xFE2
   178                           fsr1l	equ	0xFE1
   179                           bsr	equ	0xFE0
   180                           indf2	equ	0xFDF
   181                           postinc2	equ	0xFDE
   182                           postdec2	equ	0xFDD
   183                           preinc2	equ	0xFDC
   184                           plusw2	equ	0xFDB
   185                           fsr2h	equ	0xFDA
   186                           fsr2l	equ	0xFD9
   187                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      4       4
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      71
                                              0 COMRAM     4     4      0
                             _divide
 ---------------------------------------------------------------------------------
 (1) _divide                                               4     0      4      24
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _divide

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F      4       4       1        3.1%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
ABS                  0      0       0      15        0.0%
BITBANK5           100      0       0      16        0.0%
BIGRAM             5FF      0       0      17        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Oct 21 17:33:00 2019

                      l7 7FBE                        l8 7FBE                      l692 7F9C  
                    l694 7FB6                      l696 7FBA                     _main 7F9C  
                   start 0000             ___param_bank 000000                    ?_main 0001  
        __initialization 7F96             __end_of_main 7FC6                   ??_main 0001  
          __activetblptr 000000                   _divide 7FC6               __accesstop 0080  
__end_of__initialization 7F96            ___rparam_used 000001           __pcstackCOMRAM 0001  
                ?_divide 0001                  __Hparam 0000                  __Lparam 0000  
                __pcinit 7F96                  __ramtop 0600                  __ptext0 7F9C  
                main@rem 0002                  main@res 0003                  main@quo 0001  
   end_of_initialization 7F96      start_initialization 7F96                 ??_divide 0001  
               __Hrparam 0000                 __Lrparam 0000                 _divide$0 0001  
               _divide$1 0003            __size_of_main 002A  
