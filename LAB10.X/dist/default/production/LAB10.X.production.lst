

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Dec 09 17:49:39 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC18F4520 Definitions
    37                           ; 
    38  0000                     fsr0 equ 0FE9h
    39  0000                     fsr0h equ 0FEAh
    40  0000                     fsr0l equ 0FE9h
    41  0000                     fsr1 equ 0FE1h
    42  0000                     fsr1h equ 0FE2h
    43  0000                     fsr1l equ 0FE1h
    44  0000                     fsr2 equ 0FD9h
    45  0000                     fsr2h equ 0FDAh
    46  0000                     fsr2l equ 0FD9h
    47  0000                     indf0 equ 0FEFh
    48  0000                     indf1 equ 0FE7h
    49  0000                     indf2 equ 0FDFh
    50  0000                     intcon equ 0FF2h
    51  0000                     nvmcon equ 00h
    52  0000                     pcl equ 0FF9h
    53  0000                     pclath equ 0FFAh
    54  0000                     pclatu equ 0FFBh
    55  0000                     plusw0 equ 0FEBh
    56  0000                     plusw1 equ 0FE3h
    57  0000                     plusw2 equ 0FDBh
    58  0000                     postdec0 equ 0FEDh
    59  0000                     postdec1 equ 0FE5h
    60  0000                     postdec2 equ 0FDDh
    61  0000                     postinc0 equ 0FEEh
    62  0000                     postinc1 equ 0FE6h
    63  0000                     postinc2 equ 0FDEh
    64  0000                     preinc0 equ 0FECh
    65  0000                     preinc1 equ 0FE4h
    66  0000                     preinc2 equ 0FDCh
    67  0000                     prod equ 0FF3h
    68  0000                     prodh equ 0FF4h
    69  0000                     prodl equ 0FF3h
    70  0000                     status equ 0FD8h
    71  0000                     tablat equ 0FF5h
    72  0000                     tblptr equ 0FF6h
    73  0000                     tblptrh equ 0FF7h
    74  0000                     tblptrl equ 0FF6h
    75  0000                     tblptru equ 0FF8h
    76  0000                     tosl equ 0FFDh
    77  0000                     wreg equ 0FE8h
    78  0000                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc   macro
    64                           	bcf	status,0
    65                           endm
    66  0000                     setc   macro
    67                           	bsf	status,0
    68                           endm
    69  0000                     clrz   macro
    70                           	bcf	status,2
    71                           endm
    72  0000                     setz   macro
    73                           	bsf	status,2
    74                           endm
    75  0000                     skipnz macro
    76                           	btfsc	status,2
    77                           endm
    78  0000                     skipz  macro
    79                           	btfss	status,2
    80                           endm
    81  0000                     skipnc macro
    82                           	btfsc	status,0
    83                           endm
    84  0000                     skipc  macro
    85                           	btfss	status,0
    86                           endm
    87  0000                     pushw macro
    88                           	movwf postinc1
    89                           endm
    90  0000                     pushf macro arg1
    91                           	movff arg1, postinc1
    92                           endm
    93  0000                     popw macro
    94                           	movf postdec1,f
    95                           	movf indf1,w
    96                           endm
    97  0000                     popf macro arg1
    98                           	movf postdec1,f
    99                           	movff indf1,arg1
   100                           endm
   101  0000                     popfc macro arg1
   102                           	movff plusw1,arg1
   103                           	decfsz fsr1,f
   104                           endm
   105  0000                     	global	__ramtop
   106                           	global	__accesstop
   107                           # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   108                           PORTA equ 0F80h ;# 
   109  0000                     # 273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   110                           PORTB equ 0F81h ;# 
   111  0000                     # 452 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   112                           PORTC equ 0F82h ;# 
   113  0000                     # 634 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   114                           PORTD equ 0F83h ;# 
   115  0000                     # 776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   116                           PORTE equ 0F84h ;# 
   117  0000                     # 979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   118                           LATA equ 0F89h ;# 
   119  0000                     # 1091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   120                           LATB equ 0F8Ah ;# 
   121  0000                     # 1203 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   122                           LATC equ 0F8Bh ;# 
   123  0000                     # 1315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   124                           LATD equ 0F8Ch ;# 
   125  0000                     # 1427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   126                           LATE equ 0F8Dh ;# 
   127  0000                     # 1479 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   128                           TRISA equ 0F92h ;# 
   129  0000                     # 1484 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   130                           DDRA equ 0F92h ;# 
   131  0000                     # 1701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   132                           TRISB equ 0F93h ;# 
   133  0000                     # 1706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   134                           DDRB equ 0F93h ;# 
   135  0000                     # 1923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   136                           TRISC equ 0F94h ;# 
   137  0000                     # 1928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   138                           DDRC equ 0F94h ;# 
   139  0000                     # 2145 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   140                           TRISD equ 0F95h ;# 
   141  0000                     # 2150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   142                           DDRD equ 0F95h ;# 
   143  0000                     # 2367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   144                           TRISE equ 0F96h ;# 
   145  0000                     # 2372 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   146                           DDRE equ 0F96h ;# 
   147  0000                     # 2531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   148                           OSCTUNE equ 0F9Bh ;# 
   149  0000                     # 2596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   150                           PIE1 equ 0F9Dh ;# 
   151  0000                     # 2673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   152                           PIR1 equ 0F9Eh ;# 
   153  0000                     # 2750 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   154                           IPR1 equ 0F9Fh ;# 
   155  0000                     # 2827 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   156                           PIE2 equ 0FA0h ;# 
   157  0000                     # 2893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   158                           PIR2 equ 0FA1h ;# 
   159  0000                     # 2959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   160                           IPR2 equ 0FA2h ;# 
   161  0000                     # 3025 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   162                           EECON1 equ 0FA6h ;# 
   163  0000                     # 3091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   164                           EECON2 equ 0FA7h ;# 
   165  0000                     # 3098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   166                           EEDATA equ 0FA8h ;# 
   167  0000                     # 3105 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   168                           EEADR equ 0FA9h ;# 
   169  0000                     # 3112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   170                           RCSTA equ 0FABh ;# 
   171  0000                     # 3117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   172                           RCSTA1 equ 0FABh ;# 
   173  0000                     # 3322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   174                           TXSTA equ 0FACh ;# 
   175  0000                     # 3327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   176                           TXSTA1 equ 0FACh ;# 
   177  0000                     # 3578 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   178                           TXREG equ 0FADh ;# 
   179  0000                     # 3583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   180                           TXREG1 equ 0FADh ;# 
   181  0000                     # 3590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   182                           RCREG equ 0FAEh ;# 
   183  0000                     # 3595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   184                           RCREG1 equ 0FAEh ;# 
   185  0000                     # 3602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   186                           SPBRG equ 0FAFh ;# 
   187  0000                     # 3607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   188                           SPBRG1 equ 0FAFh ;# 
   189  0000                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   190                           SPBRGH equ 0FB0h ;# 
   191  0000                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   192                           T3CON equ 0FB1h ;# 
   193  0000                     # 3733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   194                           TMR3 equ 0FB2h ;# 
   195  0000                     # 3740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   196                           TMR3L equ 0FB2h ;# 
   197  0000                     # 3747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   198                           TMR3H equ 0FB3h ;# 
   199  0000                     # 3754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   200                           CMCON equ 0FB4h ;# 
   201  0000                     # 3844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   202                           CVRCON equ 0FB5h ;# 
   203  0000                     # 3923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   204                           ECCP1AS equ 0FB6h ;# 
   205  0000                     # 3928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   206                           ECCPAS equ 0FB6h ;# 
   207  0000                     # 4085 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   208                           PWM1CON equ 0FB7h ;# 
   209  0000                     # 4090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   210                           ECCP1DEL equ 0FB7h ;# 
   211  0000                     # 4223 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   212                           BAUDCON equ 0FB8h ;# 
   213  0000                     # 4228 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   214                           BAUDCTL equ 0FB8h ;# 
   215  0000                     # 4403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   216                           CCP2CON equ 0FBAh ;# 
   217  0000                     # 4482 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   218                           CCPR2 equ 0FBBh ;# 
   219  0000                     # 4489 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   220                           CCPR2L equ 0FBBh ;# 
   221  0000                     # 4496 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   222                           CCPR2H equ 0FBCh ;# 
   223  0000                     # 4503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   224                           CCP1CON equ 0FBDh ;# 
   225  0000                     # 4600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   226                           CCPR1 equ 0FBEh ;# 
   227  0000                     # 4607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   228                           CCPR1L equ 0FBEh ;# 
   229  0000                     # 4614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   230                           CCPR1H equ 0FBFh ;# 
   231  0000                     # 4621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   232                           ADCON2 equ 0FC0h ;# 
   233  0000                     # 4692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   234                           ADCON1 equ 0FC1h ;# 
   235  0000                     # 4777 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   236                           ADCON0 equ 0FC2h ;# 
   237  0000                     # 4896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   238                           ADRES equ 0FC3h ;# 
   239  0000                     # 4903 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   240                           ADRESL equ 0FC3h ;# 
   241  0000                     # 4910 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   242                           ADRESH equ 0FC4h ;# 
   243  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   244                           SSPCON2 equ 0FC5h ;# 
   245  0000                     # 5012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   246                           SSPCON1 equ 0FC6h ;# 
   247  0000                     # 5082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   248                           SSPSTAT equ 0FC7h ;# 
   249  0000                     # 5303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   250                           SSPADD equ 0FC8h ;# 
   251  0000                     # 5310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   252                           SSPBUF equ 0FC9h ;# 
   253  0000                     # 5317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   254                           T2CON equ 0FCAh ;# 
   255  0000                     # 5415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   256                           PR2 equ 0FCBh ;# 
   257  0000                     # 5420 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   258                           MEMCON equ 0FCBh ;# 
   259  0000                     # 5525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   260                           TMR2 equ 0FCCh ;# 
   261  0000                     # 5532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   262                           T1CON equ 0FCDh ;# 
   263  0000                     # 5635 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   264                           TMR1 equ 0FCEh ;# 
   265  0000                     # 5642 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   266                           TMR1L equ 0FCEh ;# 
   267  0000                     # 5649 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   268                           TMR1H equ 0FCFh ;# 
   269  0000                     # 5656 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   270                           RCON equ 0FD0h ;# 
   271  0000                     # 5789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   272                           WDTCON equ 0FD1h ;# 
   273  0000                     # 5817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   274                           HLVDCON equ 0FD2h ;# 
   275  0000                     # 5822 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   276                           LVDCON equ 0FD2h ;# 
   277  0000                     # 6087 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   278                           OSCCON equ 0FD3h ;# 
   279  0000                     # 6170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   280                           T0CON equ 0FD5h ;# 
   281  0000                     # 6253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   282                           TMR0 equ 0FD6h ;# 
   283  0000                     # 6260 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   284                           TMR0L equ 0FD6h ;# 
   285  0000                     # 6267 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   286                           TMR0H equ 0FD7h ;# 
   287  0000                     # 6274 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   288                           STATUS equ 0FD8h ;# 
   289  0000                     # 6345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   290                           FSR2 equ 0FD9h ;# 
   291  0000                     # 6352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   292                           FSR2L equ 0FD9h ;# 
   293  0000                     # 6359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   294                           FSR2H equ 0FDAh ;# 
   295  0000                     # 6366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   296                           PLUSW2 equ 0FDBh ;# 
   297  0000                     # 6373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   298                           PREINC2 equ 0FDCh ;# 
   299  0000                     # 6380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   300                           POSTDEC2 equ 0FDDh ;# 
   301  0000                     # 6387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   302                           POSTINC2 equ 0FDEh ;# 
   303  0000                     # 6394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   304                           INDF2 equ 0FDFh ;# 
   305  0000                     # 6401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   306                           BSR equ 0FE0h ;# 
   307  0000                     # 6408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   308                           FSR1 equ 0FE1h ;# 
   309  0000                     # 6415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   310                           FSR1L equ 0FE1h ;# 
   311  0000                     # 6422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   312                           FSR1H equ 0FE2h ;# 
   313  0000                     # 6429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   314                           PLUSW1 equ 0FE3h ;# 
   315  0000                     # 6436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   316                           PREINC1 equ 0FE4h ;# 
   317  0000                     # 6443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   318                           POSTDEC1 equ 0FE5h ;# 
   319  0000                     # 6450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   320                           POSTINC1 equ 0FE6h ;# 
   321  0000                     # 6457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   322                           INDF1 equ 0FE7h ;# 
   323  0000                     # 6464 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   324                           WREG equ 0FE8h ;# 
   325  0000                     # 6476 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   326                           FSR0 equ 0FE9h ;# 
   327  0000                     # 6483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   328                           FSR0L equ 0FE9h ;# 
   329  0000                     # 6490 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   330                           FSR0H equ 0FEAh ;# 
   331  0000                     # 6497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   332                           PLUSW0 equ 0FEBh ;# 
   333  0000                     # 6504 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   334                           PREINC0 equ 0FECh ;# 
   335  0000                     # 6511 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   336                           POSTDEC0 equ 0FEDh ;# 
   337  0000                     # 6518 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   338                           POSTINC0 equ 0FEEh ;# 
   339  0000                     # 6525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   340                           INDF0 equ 0FEFh ;# 
   341  0000                     # 6532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   342                           INTCON3 equ 0FF0h ;# 
   343  0000                     # 6624 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   344                           INTCON2 equ 0FF1h ;# 
   345  0000                     # 6694 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   346                           INTCON equ 0FF2h ;# 
   347  0000                     # 6811 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   348                           PROD equ 0FF3h ;# 
   349  0000                     # 6818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   350                           PRODL equ 0FF3h ;# 
   351  0000                     # 6825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   352                           PRODH equ 0FF4h ;# 
   353  0000                     # 6832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   354                           TABLAT equ 0FF5h ;# 
   355  0000                     # 6841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   356                           TBLPTR equ 0FF6h ;# 
   357  0000                     # 6848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   358                           TBLPTRL equ 0FF6h ;# 
   359  0000                     # 6855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   360                           TBLPTRH equ 0FF7h ;# 
   361  0000                     # 6862 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   362                           TBLPTRU equ 0FF8h ;# 
   363  0000                     # 6871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   364                           PCLAT equ 0FF9h ;# 
   365  0000                     # 6878 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   366                           PC equ 0FF9h ;# 
   367  0000                     # 6885 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   368                           PCL equ 0FF9h ;# 
   369  0000                     # 6892 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   370                           PCLATH equ 0FFAh ;# 
   371  0000                     # 6899 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   372                           PCLATU equ 0FFBh ;# 
   373  0000                     # 6906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   374                           STKPTR equ 0FFCh ;# 
   375  0000                     # 6980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   376                           TOS equ 0FFDh ;# 
   377  0000                     # 6987 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   378                           TOSL equ 0FFDh ;# 
   379  0000                     # 6994 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   380                           TOSH equ 0FFEh ;# 
   381  0000                     # 7001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   382                           TOSU equ 0FFFh ;# 
   383  0000                     	FNCALL	_main,_adc_init
   384                           	FNCALL	_main,_ccp2_init
   385                           	FNCALL	_main,_tmr3_init
   386                           	FNROOT	_main
   387                           	FNCALL	intlevel2,_ISR
   388                           	global	intlevel2
   389                           	FNROOT	intlevel2
   390                           	global	_CCPR2
   391                           _CCPR2	set	0xFBB
   392  0000                     	global	_TMR3
   393                           _TMR3	set	0xFB2
   394  0000                     	global	_ADRES
   395                           _ADRES	set	0xFC3
   396  0000                     	global	_TRISD
   397                           _TRISD	set	0xF95
   398  0000                     	global	_OSCCONbits
   399                           _OSCCONbits	set	0xFD3
   400  0000                     	global	_T3CONbits
   401                           _T3CONbits	set	0xFB1
   402  0000                     	global	_PIE2bits
   403                           _PIE2bits	set	0xFA0
   404  0000                     	global	_CCP2CONbits
   405                           _CCP2CONbits	set	0xFBA
   406  0000                     	global	_RCONbits
   407                           _RCONbits	set	0xFD0
   408  0000                     	global	_INTCONbits
   409                           _INTCONbits	set	0xFF2
   410  0000                     	global	_PIE1bits
   411                           _PIE1bits	set	0xF9D
   412  0000                     	global	_ADCON1bits
   413                           _ADCON1bits	set	0xFC1
   414  0000                     	global	_ADCON0bits
   415                           _ADCON0bits	set	0xFC2
   416  0000                     	global	_TRISBbits
   417                           _TRISBbits	set	0xF93
   418  0000                     	global	_ADCON2bits
   419                           _ADCON2bits	set	0xFC0
   420  0000                     	global	_PIR2bits
   421                           _PIR2bits	set	0xFA1
   422  0000                     	global	_LATD
   423                           _LATD	set	0xF8C
   424  0000                     	global	_PIR1bits
   425                           _PIR1bits	set	0xF9E
   426  0000                     ; #config settings
   427                           global __CFG_OSC$INTIO67
   428                           __CFG_OSC$INTIO67 equ 0x0
   429  0000                     global __CFG_FCMEN$OFF
   430                           __CFG_FCMEN$OFF equ 0x0
   431  0000                     global __CFG_IESO$OFF
   432                           __CFG_IESO$OFF equ 0x0
   433  0000                     global __CFG_PWRT$OFF
   434                           __CFG_PWRT$OFF equ 0x0
   435  0000                     global __CFG_BOREN$SBORDIS
   436                           __CFG_BOREN$SBORDIS equ 0x0
   437  0000                     global __CFG_BORV$3
   438                           __CFG_BORV$3 equ 0x0
   439  0000                     global __CFG_WDT$OFF
   440                           __CFG_WDT$OFF equ 0x0
   441  0000                     global __CFG_WDTPS$32768
   442                           __CFG_WDTPS$32768 equ 0x0
   443  0000                     global __CFG_CCP2MX$PORTC
   444                           __CFG_CCP2MX$PORTC equ 0x0
   445  0000                     global __CFG_PBADEN$OFF
   446                           __CFG_PBADEN$OFF equ 0x0
   447  0000                     global __CFG_LPT1OSC$OFF
   448                           __CFG_LPT1OSC$OFF equ 0x0
   449  0000                     global __CFG_MCLRE$ON
   450                           __CFG_MCLRE$ON equ 0x0
   451  0000                     global __CFG_STVREN$ON
   452                           __CFG_STVREN$ON equ 0x0
   453  0000                     global __CFG_LVP$ON
   454                           __CFG_LVP$ON equ 0x0
   455  0000                     global __CFG_XINST$OFF
   456                           __CFG_XINST$OFF equ 0x0
   457  0000                     global __CFG_CP0$OFF
   458                           __CFG_CP0$OFF equ 0x0
   459  0000                     global __CFG_CP1$OFF
   460                           __CFG_CP1$OFF equ 0x0
   461  0000                     global __CFG_CP2$OFF
   462                           __CFG_CP2$OFF equ 0x0
   463  0000                     global __CFG_CP3$OFF
   464                           __CFG_CP3$OFF equ 0x0
   465  0000                     global __CFG_CPB$OFF
   466                           __CFG_CPB$OFF equ 0x0
   467  0000                     global __CFG_CPD$OFF
   468                           __CFG_CPD$OFF equ 0x0
   469  0000                     global __CFG_WRT0$OFF
   470                           __CFG_WRT0$OFF equ 0x0
   471  0000                     global __CFG_WRT1$OFF
   472                           __CFG_WRT1$OFF equ 0x0
   473  0000                     global __CFG_WRT2$OFF
   474                           __CFG_WRT2$OFF equ 0x0
   475  0000                     global __CFG_WRT3$OFF
   476                           __CFG_WRT3$OFF equ 0x0
   477  0000                     global __CFG_WRTC$OFF
   478                           __CFG_WRTC$OFF equ 0x0
   479  0000                     global __CFG_WRTB$OFF
   480                           __CFG_WRTB$OFF equ 0x0
   481  0000                     global __CFG_WRTD$OFF
   482                           __CFG_WRTD$OFF equ 0x0
   483  0000                     global __CFG_EBTR0$OFF
   484                           __CFG_EBTR0$OFF equ 0x0
   485  0000                     global __CFG_EBTR1$OFF
   486                           __CFG_EBTR1$OFF equ 0x0
   487  0000                     global __CFG_EBTR2$OFF
   488                           __CFG_EBTR2$OFF equ 0x0
   489  0000                     global __CFG_EBTR3$OFF
   490                           __CFG_EBTR3$OFF equ 0x0
   491  0000                     global __CFG_EBTRB$OFF
   492                           __CFG_EBTRB$OFF equ 0x0
   493  0000                     	file	"C:\Users\User\AppData\Local\Temp\s51s."
   494                           	line	#
   495                           psect	cinit,class=CODE,delta=1,reloc=2
   496                           global __pcinit
   497                           __pcinit:
   498  000266                     global start_initialization
   499                           start_initialization:
   500  000266                     
   501                           global __initialization
   502                           __initialization:
   503  000266                     psect cinit,class=CODE,delta=1
   504                           global end_of_initialization,__end_of__initialization
   505                           
   506                           ;End of C runtime variable initialization code
   507                           
   508                           end_of_initialization:
   509  000266                     __end_of__initialization:
   510  000266                     	bcf int$flags,0,c ;clear compiler interrupt flag (level 1)
   511  000266  9001               	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
   512  000268  9201               movlb 0
   513  00026A  0100               goto _main	;jump to C main() function
   514  00026C  EF10  F001         psect	cstackCOMRAM,class=COMRAM,space=1,noexec
   515                           global __pcstackCOMRAM
   516                           __pcstackCOMRAM:
   517  000000                     ?_ISR:	; 1 bytes @ 0x0
   518  000000                     ??_ISR:	; 1 bytes @ 0x0
   519  000000                     ?_adc_init:	; 1 bytes @ 0x0
   520  000000                     ??_adc_init:	; 1 bytes @ 0x0
   521  000000                     ?_ccp2_init:	; 1 bytes @ 0x0
   522  000000                     ??_ccp2_init:	; 1 bytes @ 0x0
   523  000000                     ?_tmr3_init:	; 1 bytes @ 0x0
   524  000000                     ??_tmr3_init:	; 1 bytes @ 0x0
   525  000000                     ?_main:	; 1 bytes @ 0x0
   526  000000                     ??_main:	; 1 bytes @ 0x0
   527  000000                     ;!
   528                           ;!Data Sizes:
   529                           ;!    Strings     0
   530                           ;!    Constant    0
   531                           ;!    Data        0
   532                           ;!    BSS         0
   533                           ;!    Persistent  0
   534                           ;!    Stack       0
   535                           ;!
   536                           ;!Auto Spaces:
   537                           ;!    Space          Size  Autos    Used
   538                           ;!    COMRAM          126      0       0
   539                           ;!    BANK0           128      0       0
   540                           ;!    BANK1           256      0       0
   541                           ;!    BANK2           256      0       0
   542                           ;!    BANK3           256      0       0
   543                           ;!    BANK4           256      0       0
   544                           ;!    BANK5           256      0       0
   545                           
   546                           ;!
   547                           ;!Pointer List with Targets:
   548                           ;!
   549                           ;!    None.
   550                           
   551                           
   552                           ;!
   553                           ;!Critical Paths under _main in COMRAM
   554                           ;!
   555                           ;!    None.
   556                           ;!
   557                           ;!Critical Paths under _ISR in COMRAM
   558                           ;!
   559                           ;!    None.
   560                           ;!
   561                           ;!Critical Paths under _main in BANK0
   562                           ;!
   563                           ;!    None.
   564                           ;!
   565                           ;!Critical Paths under _ISR in BANK0
   566                           ;!
   567                           ;!    None.
   568                           ;!
   569                           ;!Critical Paths under _main in BANK1
   570                           ;!
   571                           ;!    None.
   572                           ;!
   573                           ;!Critical Paths under _ISR in BANK1
   574                           ;!
   575                           ;!    None.
   576                           ;!
   577                           ;!Critical Paths under _main in BANK2
   578                           ;!
   579                           ;!    None.
   580                           ;!
   581                           ;!Critical Paths under _ISR in BANK2
   582                           ;!
   583                           ;!    None.
   584                           ;!
   585                           ;!Critical Paths under _main in BANK3
   586                           ;!
   587                           ;!    None.
   588                           ;!
   589                           ;!Critical Paths under _ISR in BANK3
   590                           ;!
   591                           ;!    None.
   592                           ;!
   593                           ;!Critical Paths under _main in BANK4
   594                           ;!
   595                           ;!    None.
   596                           ;!
   597                           ;!Critical Paths under _ISR in BANK4
   598                           ;!
   599                           ;!    None.
   600                           ;!
   601                           ;!Critical Paths under _main in BANK5
   602                           ;!
   603                           ;!    None.
   604                           ;!
   605                           ;!Critical Paths under _ISR in BANK5
   606                           ;!
   607                           ;!    None.
   608                           
   609 ;;
   610 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   611 ;;
   612                           
   613                           ;!
   614                           ;!Call Graph Tables:
   615                           ;!
   616                           ;! ---------------------------------------------------------------------------------
   617                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   618                           ;! ---------------------------------------------------------------------------------
   619                           ;! (0) _main                                                 0     0      0       0
   620                           ;!                           _adc_init
   621                           ;!                          _ccp2_init
   622                           ;!                          _tmr3_init
   623                           ;! ---------------------------------------------------------------------------------
   624                           ;! (1) _tmr3_init                                            0     0      0       0
   625                           ;! ---------------------------------------------------------------------------------
   626                           ;! (1) _ccp2_init                                            0     0      0       0
   627                           ;! ---------------------------------------------------------------------------------
   628                           ;! (1) _adc_init                                             0     0      0       0
   629                           ;! ---------------------------------------------------------------------------------
   630                           ;! Estimated maximum stack depth 1
   631                           ;! ---------------------------------------------------------------------------------
   632                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   633                           ;! ---------------------------------------------------------------------------------
   634                           ;! (2) _ISR                                                  0     0      0       0
   635                           ;! ---------------------------------------------------------------------------------
   636                           ;! Estimated maximum stack depth 2
   637                           ;! ---------------------------------------------------------------------------------
   638                           ;!
   639                           ;! Call Graph Graphs:
   640                           ;!
   641                           ;! _main (ROOT)
   642                           ;!   _adc_init
   643                           ;!   _ccp2_init
   644                           ;!   _tmr3_init
   645                           ;!
   646                           ;! _ISR (ROOT)
   647                           ;!
   648                           
   649                           ;! Address spaces:
   650                           
   651                           ;!Name               Size   Autos  Total    Cost      Usage
   652                           ;!BITCOMRAM           7E      0       0       0        0.0%
   653                           ;!EEDATA             100      0       0       0        0.0%
   654                           ;!NULL                 0      0       0       0        0.0%
   655                           ;!CODE                 0      0       0       0        0.0%
   656                           ;!COMRAM              7E      0       0       1        0.0%
   657                           ;!STACK                0      0       0       2        0.0%
   658                           ;!DATA                 0      0       0       3        0.0%
   659                           ;!BITBANK0            80      0       0       4        0.0%
   660                           ;!BANK0               80      0       0       5        0.0%
   661                           ;!BITBANK1           100      0       0       6        0.0%
   662                           ;!BANK1              100      0       0       7        0.0%
   663                           ;!BITBANK2           100      0       0       8        0.0%
   664                           ;!BANK2              100      0       0       9        0.0%
   665                           ;!BITBANK3           100      0       0      10        0.0%
   666                           ;!BANK3              100      0       0      11        0.0%
   667                           ;!BITBANK4           100      0       0      12        0.0%
   668                           ;!BANK4              100      0       0      13        0.0%
   669                           ;!BANK5              100      0       0      14        0.0%
   670                           ;!ABS                  0      0       0      15        0.0%
   671                           ;!BITBANK5           100      0       0      16        0.0%
   672                           ;!BIGRAM             5FF      0       0      17        0.0%
   673                           ;!BITSFR               0      0       0     200        0.0%
   674                           ;!SFR                  0      0       0     200        0.0%
   675                           
   676                           	global	_main
   677                           
   678 ;; *************** function _main *****************
   679 ;; Defined at:
   680 ;;		line 116 in file "newmain.c"
   681 ;; Parameters:    Size  Location     Type
   682 ;;		None
   683 ;; Auto vars:     Size  Location     Type
   684 ;;		None
   685 ;; Return value:  Size  Location     Type
   686 ;;                  1    wreg      void 
   687 ;; Registers used:
   688 ;;		wreg, status,2, cstack
   689 ;; Tracked objects:
   690 ;;		On entry : 0/0
   691 ;;		On exit  : 0/0
   692 ;;		Unchanged: 0/0
   693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   694 ;;      Params:         0       0       0       0       0       0       0
   695 ;;      Locals:         0       0       0       0       0       0       0
   696 ;;      Temps:          0       0       0       0       0       0       0
   697 ;;      Totals:         0       0       0       0       0       0       0
   698 ;;Total ram usage:        0 bytes
   699 ;; Hardware stack levels required when called:    2
   700 ;; This function calls:
   701 ;;		_adc_init
   702 ;;		_ccp2_init
   703 ;;		_tmr3_init
   704 ;; This function is called by:
   705 ;;		Startup code after reset
   706 ;; This function uses a non-reentrant model
   707 ;;
   708                           psect	text0,class=CODE,space=0,reloc=2,group=0
   709                           	file	"newmain.c"
   710                           	line	116
   711                           global __ptext0
   712                           __ptext0:
   713  000220                     psect	text0
   714                           	file	"newmain.c"
   715                           	line	116
   716                           	global	__size_of_main
   717                           	__size_of_main	equ	__end_of_main-_main
   718  0000                     	
   719                           _main:
   720  000220                     ;incstack = 0
   721                           	opt	stack 29
   722                           	line	117
   723                           	
   724                           l836:
   725  000220                     ;newmain.c: 117:     OSCCONbits.IRCF = 7;
   726                           		
   727                           	bsf	((c:4051)),c, 4+0	;volatile
   728  000220  88D3               	bsf	((c:4051)),c, 4+1	;volatile
   729  000222  8AD3               	bsf	((c:4051)),c, 4+2	;volatile
   730  000224  8CD3               
   731                           	line	118
   732                           	
   733                           l838:
   734  000226                     ;newmain.c: 118:     TRISD = 0;
   735                           	movlw	low(0)
   736  000226  0E00               	movwf	((c:3989)),c	;volatile
   737  000228  6E95               	line	119
   738                           	
   739                           l840:
   740  00022A                     ;newmain.c: 119:     adc_init();
   741                           	call	_adc_init	;wreg free
   742  00022A  ECF7  F000         	line	120
   743                           	
   744                           l842:
   745  00022E                     ;newmain.c: 120:     ccp2_init();
   746                           	call	_ccp2_init	;wreg free
   747  00022E  EC29  F001         	line	121
   748                           	
   749                           l844:
   750  000232                     ;newmain.c: 121:     tmr3_init();
   751                           	call	_tmr3_init	;wreg free
   752  000232  EC1F  F001         	line	122
   753                           ;newmain.c: 122:     while(1);
   754                           	
   755                           l73:
   756  000236                     	
   757                           l74:
   758  000236                     	goto	l73
   759  000236  EF1B  F001         	
   760                           l75:
   761  00023A                     	line	124
   762                           ;newmain.c: 123:     return;
   763                           	
   764                           l76:
   765  00023A                     	global	start
   766                           	goto	start
   767  00023A  EF07  F000         	opt stack 0
   768                           GLOBAL	__end_of_main
   769                           	__end_of_main:
   770  00023E                     	signat	_main,89
   771                           	global	_tmr3_init
   772                           
   773 ;; *************** function _tmr3_init *****************
   774 ;; Defined at:
   775 ;;		line 108 in file "newmain.c"
   776 ;; Parameters:    Size  Location     Type
   777 ;;		None
   778 ;; Auto vars:     Size  Location     Type
   779 ;;		None
   780 ;; Return value:  Size  Location     Type
   781 ;;                  1    wreg      void 
   782 ;; Registers used:
   783 ;;		wreg, status,2
   784 ;; Tracked objects:
   785 ;;		On entry : 0/0
   786 ;;		On exit  : 0/0
   787 ;;		Unchanged: 0/0
   788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   789 ;;      Params:         0       0       0       0       0       0       0
   790 ;;      Locals:         0       0       0       0       0       0       0
   791 ;;      Temps:          0       0       0       0       0       0       0
   792 ;;      Totals:         0       0       0       0       0       0       0
   793 ;;Total ram usage:        0 bytes
   794 ;; Hardware stack levels used:    1
   795 ;; Hardware stack levels required when called:    1
   796 ;; This function calls:
   797 ;;		Nothing
   798 ;; This function is called by:
   799 ;;		_main
   800 ;; This function uses a non-reentrant model
   801 ;;
   802                           psect	text1,class=CODE,space=0,reloc=2,group=0
   803                           	line	108
   804                           global __ptext1
   805                           __ptext1:
   806  00023E                     psect	text1
   807                           	file	"newmain.c"
   808                           	line	108
   809                           	global	__size_of_tmr3_init
   810                           	__size_of_tmr3_init	equ	__end_of_tmr3_init-_tmr3_init
   811  0000                     	
   812                           _tmr3_init:
   813  00023E                     ;incstack = 0
   814                           	opt	stack 29
   815                           	line	109
   816                           	
   817                           l772:
   818  00023E                     ;newmain.c: 109:     T3CONbits.T3CCP2 = 1;
   819                           	bsf	((c:4017)),c,6	;volatile
   820  00023E  8CB1               	line	110
   821                           	
   822                           l774:
   823  000240                     ;newmain.c: 110:     T3CONbits.T3CKPS = 3;
   824                           	movlw	(03h & ((1<<2)-1))<<4
   825  000240  0E30               	iorwf	((c:4017)),c	;volatile
   826  000242  12B1               	line	111
   827                           	
   828                           l776:
   829  000244                     ;newmain.c: 111:     T3CONbits.TMR3CS = 0;
   830                           	bcf	((c:4017)),c,1	;volatile
   831  000244  92B1               	line	112
   832                           	
   833                           l778:
   834  000246                     ;newmain.c: 112:     T3CONbits.TMR3ON = 1;
   835                           	bsf	((c:4017)),c,0	;volatile
   836  000246  80B1               	line	113
   837                           ;newmain.c: 113:     TMR3 = 0;
   838                           	movlw	high(0)
   839  000248  0E00               	movwf	((c:4018+1)),c	;volatile
   840  00024A  6EB3               	movlw	low(0)
   841  00024C  0E00               	movwf	((c:4018)),c	;volatile
   842  00024E  6EB2               	line	114
   843                           	
   844                           l68:
   845  000250                     	return	;funcret
   846  000250  0012               	opt stack 0
   847                           GLOBAL	__end_of_tmr3_init
   848                           	__end_of_tmr3_init:
   849  000252                     	signat	_tmr3_init,89
   850                           	global	_ccp2_init
   851                           
   852 ;; *************** function _ccp2_init *****************
   853 ;; Defined at:
   854 ;;		line 101 in file "newmain.c"
   855 ;; Parameters:    Size  Location     Type
   856 ;;		None
   857 ;; Auto vars:     Size  Location     Type
   858 ;;		None
   859 ;; Return value:  Size  Location     Type
   860 ;;                  1    wreg      void 
   861 ;; Registers used:
   862 ;;		wreg, status,2
   863 ;; Tracked objects:
   864 ;;		On entry : 0/0
   865 ;;		On exit  : 0/0
   866 ;;		Unchanged: 0/0
   867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   868 ;;      Params:         0       0       0       0       0       0       0
   869 ;;      Locals:         0       0       0       0       0       0       0
   870 ;;      Temps:          0       0       0       0       0       0       0
   871 ;;      Totals:         0       0       0       0       0       0       0
   872 ;;Total ram usage:        0 bytes
   873 ;; Hardware stack levels used:    1
   874 ;; Hardware stack levels required when called:    1
   875 ;; This function calls:
   876 ;;		Nothing
   877 ;; This function is called by:
   878 ;;		_main
   879 ;; This function uses a non-reentrant model
   880 ;;
   881                           psect	text2,class=CODE,space=0,reloc=2,group=0
   882                           	line	101
   883                           global __ptext2
   884                           __ptext2:
   885  000252                     psect	text2
   886                           	file	"newmain.c"
   887                           	line	101
   888                           	global	__size_of_ccp2_init
   889                           	__size_of_ccp2_init	equ	__end_of_ccp2_init-_ccp2_init
   890  0000                     	
   891                           _ccp2_init:
   892  000252                     ;incstack = 0
   893                           	opt	stack 29
   894                           	line	102
   895                           	
   896                           l768:
   897  000252                     ;newmain.c: 102:     CCP2CONbits.CCP2M = 11;
   898                           	movf	((c:4026)),c,w	;volatile
   899  000252  50BA               	andlw	not (((1<<4)-1)<<0)
   900  000254  0BF0               	iorlw	(0Bh & ((1<<4)-1))<<0
   901  000256  090B               	movwf	((c:4026)),c	;volatile
   902  000258  6EBA               	line	103
   903                           	
   904                           l770:
   905  00025A                     ;newmain.c: 103:     PIE2bits.CCP2IE = 1;
   906                           	bsf	((c:4000)),c,0	;volatile
   907  00025A  80A0               	line	105
   908                           ;newmain.c: 105:     CCPR2 = 1;
   909                           	movlw	high(01h)
   910  00025C  0E00               	movwf	((c:4027+1)),c	;volatile
   911  00025E  6EBC               	movlw	low(01h)
   912  000260  0E01               	movwf	((c:4027)),c	;volatile
   913  000262  6EBB               	line	106
   914                           	
   915                           l65:
   916  000264                     	return	;funcret
   917  000264  0012               	opt stack 0
   918                           GLOBAL	__end_of_ccp2_init
   919                           	__end_of_ccp2_init:
   920  000266                     	signat	_ccp2_init,89
   921                           	global	_adc_init
   922                           
   923 ;; *************** function _adc_init *****************
   924 ;; Defined at:
   925 ;;		line 84 in file "newmain.c"
   926 ;; Parameters:    Size  Location     Type
   927 ;;		None
   928 ;; Auto vars:     Size  Location     Type
   929 ;;		None
   930 ;; Return value:  Size  Location     Type
   931 ;;                  1    wreg      void 
   932 ;; Registers used:
   933 ;;		wreg, status,2
   934 ;; Tracked objects:
   935 ;;		On entry : 0/0
   936 ;;		On exit  : 0/0
   937 ;;		Unchanged: 0/0
   938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   939 ;;      Params:         0       0       0       0       0       0       0
   940 ;;      Locals:         0       0       0       0       0       0       0
   941 ;;      Temps:          0       0       0       0       0       0       0
   942 ;;      Totals:         0       0       0       0       0       0       0
   943 ;;Total ram usage:        0 bytes
   944 ;; Hardware stack levels used:    1
   945 ;; Hardware stack levels required when called:    1
   946 ;; This function calls:
   947 ;;		Nothing
   948 ;; This function is called by:
   949 ;;		_main
   950 ;; This function uses a non-reentrant model
   951 ;;
   952                           psect	text3,class=CODE,space=0,reloc=2,group=0
   953                           	line	84
   954                           global __ptext3
   955                           __ptext3:
   956  0001EE                     psect	text3
   957                           	file	"newmain.c"
   958                           	line	84
   959                           	global	__size_of_adc_init
   960                           	__size_of_adc_init	equ	__end_of_adc_init-_adc_init
   961  0000                     	
   962                           _adc_init:
   963  0001EE                     ;incstack = 0
   964                           	opt	stack 29
   965                           	line	85
   966                           	
   967                           l752:
   968  0001EE                     ;newmain.c: 85:     ADCON2bits.ADCS = 1;
   969                           	movf	((c:4032)),c,w	;volatile
   970  0001EE  50C0               	andlw	not (((1<<3)-1)<<0)
   971  0001F0  0BF8               	iorlw	(01h & ((1<<3)-1))<<0
   972  0001F2  0901               	movwf	((c:4032)),c	;volatile
   973  0001F4  6EC0               	line	86
   974                           	
   975                           l754:
   976  0001F6                     ;newmain.c: 86:     ADCON2bits.ADFM = 1;
   977                           	bsf	((c:4032)),c,7	;volatile
   978  0001F6  8EC0               	line	87
   979                           ;newmain.c: 87:     ADCON2bits.ACQT = 2;
   980                           	movf	((c:4032)),c,w	;volatile
   981  0001F8  50C0               	andlw	not (((1<<3)-1)<<3)
   982  0001FA  0BC7               	iorlw	(02h & ((1<<3)-1))<<3
   983  0001FC  0910               	movwf	((c:4032)),c	;volatile
   984  0001FE  6EC0               	line	89
   985                           	
   986                           l756:
   987  000200                     ;newmain.c: 89:     TRISBbits.RB3 = 1;
   988                           	bsf	((c:3987)),c,3	;volatile
   989  000200  8693               	line	90
   990                           ;newmain.c: 90:     ADCON0bits.CHS = 9;
   991                           	movf	((c:4034)),c,w	;volatile
   992  000202  50C2               	andlw	not (((1<<4)-1)<<2)
   993  000204  0BC3               	iorlw	(09h & ((1<<4)-1))<<2
   994  000206  0924               	movwf	((c:4034)),c	;volatile
   995  000208  6EC2               	line	91
   996                           	
   997                           l758:
   998  00020A                     ;newmain.c: 91:     ADCON0bits.ADON = 1;
   999                           	bsf	((c:4034)),c,0	;volatile
  1000  00020A  80C2               	line	93
  1001                           ;newmain.c: 93:     ADCON1bits.VCFG = 0;
  1002                           	movlw	((0 & ((1<<2)-1))<<4)|not (((1<<2)-1)<<4)
  1003  00020C  0ECF               	andwf	((c:4033)),c	;volatile
  1004  00020E  16C1               	line	94
  1005                           	
  1006                           l760:
  1007  000210                     ;newmain.c: 94:     ADCON1bits.PCFG = 0;
  1008                           		
  1009                           	bcf	((c:4033)),c, 0+0	;volatile
  1010  000210  90C1               	bcf	((c:4033)),c, 0+1	;volatile
  1011  000212  92C1               	bcf	((c:4033)),c, 0+2	;volatile
  1012  000214  94C1               	bcf	((c:4033)),c, 0+3	;volatile
  1013  000216  96C1               
  1014                           	line	96
  1015                           	
  1016                           l762:
  1017  000218                     ;newmain.c: 96:     PIE1bits.ADIE = 1;
  1018                           	bsf	((c:3997)),c,6	;volatile
  1019  000218  8C9D               	line	97
  1020                           	
  1021                           l764:
  1022  00021A                     ;newmain.c: 97:     INTCONbits.GIE = 1;
  1023                           	bsf	((c:4082)),c,7	;volatile
  1024  00021A  8EF2               	line	98
  1025                           	
  1026                           l766:
  1027  00021C                     ;newmain.c: 98:     RCONbits.IPEN = 1;
  1028                           	bsf	((c:4048)),c,7	;volatile
  1029  00021C  8ED0               	line	99
  1030                           	
  1031                           l62:
  1032  00021E                     	return	;funcret
  1033  00021E  0012               	opt stack 0
  1034                           GLOBAL	__end_of_adc_init
  1035                           	__end_of_adc_init:
  1036  000220                     	signat	_adc_init,89
  1037                           	global	_ISR
  1038                           
  1039 ;; *************** function _ISR *****************
  1040 ;; Defined at:
  1041 ;;		line 61 in file "newmain.c"
  1042 ;; Parameters:    Size  Location     Type
  1043 ;;		None
  1044 ;; Auto vars:     Size  Location     Type
  1045 ;;		None
  1046 ;; Return value:  Size  Location     Type
  1047 ;;                  1    wreg      void 
  1048 ;; Registers used:
  1049 ;;		wreg, status,2, status,0
  1050 ;; Tracked objects:
  1051 ;;		On entry : 0/0
  1052 ;;		On exit  : 0/0
  1053 ;;		Unchanged: 0/0
  1054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1055 ;;      Params:         0       0       0       0       0       0       0
  1056 ;;      Locals:         0       0       0       0       0       0       0
  1057 ;;      Temps:          0       0       0       0       0       0       0
  1058 ;;      Totals:         0       0       0       0       0       0       0
  1059 ;;Total ram usage:        0 bytes
  1060 ;; Hardware stack levels used:    1
  1061 ;; This function calls:
  1062 ;;		Nothing
  1063 ;; This function is called by:
  1064 ;;		Interrupt level 2
  1065 ;; This function uses a non-reentrant model
  1066 ;;
  1067                           psect	intcode,class=CODE,space=0,reloc=2
  1068                           global __pintcode
  1069                           __pintcode:
  1070  000008                     psect	intcode
  1071                           	file	"newmain.c"
  1072                           	line	61
  1073                           	global	__size_of_ISR
  1074                           	__size_of_ISR	equ	__end_of_ISR-_ISR
  1075  0000                     	
  1076                           _ISR:
  1077  000008                     ;incstack = 0
  1078                           	opt	stack 29
  1079                           	bsf int$flags,1,c ;set compiler interrupt flag (level 2)
  1080  000008  8201               	global	int_func
  1081                           	call	int_func,f	;refresh shadow registers
  1082  00000A  ED09  F000         psect	intcode_body,class=CODE,space=0,reloc=2
  1083                           global __pintcode_body
  1084                           __pintcode_body:
  1085  000012                     int_func:
  1086  000012                     
  1087                           	pop	; remove dummy address from shadow register refresh
  1088  000012  0006               	line	62
  1089                           	
  1090                           i2l780:
  1091  000014                     ;newmain.c: 62:     if (PIR1bits.ADIF) {
  1092                           	btfss	((c:3998)),c,6	;volatile
  1093  000014  AC9E               	goto	i2u1_41
  1094  000016  EF0F  F000         	goto	i2u1_40
  1095  00001A  EF11  F000         i2u1_41:
  1096  00001E                     	goto	i2l41
  1097  00001E  EFE3  F000         i2u1_40:
  1098  000022                     	line	63
  1099                           	
  1100                           i2l782:
  1101  000022                     ;newmain.c: 63:         PIR1bits.ADIF = 0;
  1102                           	bcf	((c:3998)),c,6	;volatile
  1103  000022  9C9E               	line	67
  1104                           	
  1105                           i2l784:
  1106  000024                     ;newmain.c: 67:         if(ADRES >= 0 && ADRES < 127) LATD = 0;
  1107                           		movf	((c:4035+1)),c,w	;volatile
  1108  000024  50C4               	bnz	i2u2_41
  1109  000026  E107               	movlw	127
  1110  000028  0E7F               	subwf	 ((c:4035)),c,w	;volatile
  1111  00002A  5CC3               	btfsc	status,0
  1112  00002C  B0D8               	goto	i2u2_41
  1113  00002E  EF1B  F000         	goto	i2u2_40
  1114  000032  EF1D  F000         
  1115                           i2u2_41:
  1116  000036                     	goto	i2l788
  1117  000036  EF21  F000         i2u2_40:
  1118  00003A                     	
  1119                           i2l786:
  1120  00003A                     	movlw	low(0)
  1121  00003A  0E00               	movwf	((c:3980)),c	;volatile
  1122  00003C  6E8C               	goto	i2l59
  1123  00003E  EFF5  F000         	line	68
  1124                           ;newmain.c: 68:         else if (ADRES >= 128 && ADRES < 255) LATD = 1;
  1125                           	
  1126                           i2l42:
  1127  000042                     	
  1128                           i2l788:
  1129  000042                     		movf	((c:4035+1)),c,w	;volatile
  1130  000042  50C4               	bnz	i2u3_40
  1131  000044  E109               	movlw	128
  1132  000046  0E80               	subwf	 ((c:4035)),c,w	;volatile
  1133  000048  5CC3               	btfss	status,0
  1134  00004A  A0D8               	goto	i2u3_41
  1135  00004C  EF2A  F000         	goto	i2u3_40
  1136  000050  EF2C  F000         
  1137                           i2u3_41:
  1138  000054                     	goto	i2l794
  1139  000054  EF3A  F000         i2u3_40:
  1140  000058                     	
  1141                           i2l790:
  1142  000058                     		movf	((c:4035+1)),c,w	;volatile
  1143  000058  50C4               	bnz	i2u4_41
  1144  00005A  E106               	incf	((c:4035)),c,w	;volatile
  1145  00005C  28C3               	btfsc	status,0
  1146  00005E  B0D8               	goto	i2u4_41
  1147  000060  EF34  F000         	goto	i2u4_40
  1148  000064  EF36  F000         
  1149                           i2u4_41:
  1150  000068                     	goto	i2l794
  1151  000068  EF3A  F000         i2u4_40:
  1152  00006C                     	
  1153                           i2l792:
  1154  00006C                     	movlw	low(01h)
  1155  00006C  0E01               	movwf	((c:3980)),c	;volatile
  1156  00006E  6E8C               	goto	i2l59
  1157  000070  EFF5  F000         	line	69
  1158                           ;newmain.c: 69:         else if (ADRES >= 256 && ADRES < 383) LATD = 2;
  1159                           	
  1160                           i2l44:
  1161  000074                     	
  1162                           i2l794:
  1163  000074                     		movlw	0
  1164  000074  0E00               	subwf	 ((c:4035)),c,w	;volatile
  1165  000076  5CC3               	movlw	1
  1166  000078  0E01               	subwfb	((c:4035+1)),c,w	;volatile
  1167  00007A  58C4               	btfss	status,0
  1168  00007C  A0D8               	goto	i2u5_41
  1169  00007E  EF43  F000         	goto	i2u5_40
  1170  000082  EF45  F000         
  1171                           i2u5_41:
  1172  000086                     	goto	i2l800
  1173  000086  EF54  F000         i2u5_40:
  1174  00008A                     	
  1175                           i2l796:
  1176  00008A                     		movlw	127
  1177  00008A  0E7F               	subwf	 ((c:4035)),c,w	;volatile
  1178  00008C  5CC3               	movlw	1
  1179  00008E  0E01               	subwfb	((c:4035+1)),c,w	;volatile
  1180  000090  58C4               	btfsc	status,0
  1181  000092  B0D8               	goto	i2u6_41
  1182  000094  EF4E  F000         	goto	i2u6_40
  1183  000098  EF50  F000         
  1184                           i2u6_41:
  1185  00009C                     	goto	i2l800
  1186  00009C  EF54  F000         i2u6_40:
  1187  0000A0                     	
  1188                           i2l798:
  1189  0000A0                     	movlw	low(02h)
  1190  0000A0  0E02               	movwf	((c:3980)),c	;volatile
  1191  0000A2  6E8C               	goto	i2l59
  1192  0000A4  EFF5  F000         	line	70
  1193                           ;newmain.c: 70:         else if (ADRES >= 384 && ADRES < 511) LATD = 3;
  1194                           	
  1195                           i2l46:
  1196  0000A8                     	
  1197                           i2l800:
  1198  0000A8                     		movlw	128
  1199  0000A8  0E80               	subwf	 ((c:4035)),c,w	;volatile
  1200  0000AA  5CC3               	movlw	1
  1201  0000AC  0E01               	subwfb	((c:4035+1)),c,w	;volatile
  1202  0000AE  58C4               	btfss	status,0
  1203  0000B0  A0D8               	goto	i2u7_41
  1204  0000B2  EF5D  F000         	goto	i2u7_40
  1205  0000B6  EF5F  F000         
  1206                           i2u7_41:
  1207  0000BA                     	goto	i2l806
  1208  0000BA  EF6D  F000         i2u7_40:
  1209  0000BE                     	
  1210                           i2l802:
  1211  0000BE                     		incf	((c:4035)),c,w	;volatile
  1212  0000BE  28C3               	movlw	1
  1213  0000C0  0E01               	subwfb	((c:4035+1)),c,w	;volatile
  1214  0000C2  58C4               	btfsc	status,0
  1215  0000C4  B0D8               	goto	i2u8_41
  1216  0000C6  EF67  F000         	goto	i2u8_40
  1217  0000CA  EF69  F000         
  1218                           i2u8_41:
  1219  0000CE                     	goto	i2l806
  1220  0000CE  EF6D  F000         i2u8_40:
  1221  0000D2                     	
  1222                           i2l804:
  1223  0000D2                     	movlw	low(03h)
  1224  0000D2  0E03               	movwf	((c:3980)),c	;volatile
  1225  0000D4  6E8C               	goto	i2l59
  1226  0000D6  EFF5  F000         	line	71
  1227                           ;newmain.c: 71:         else if (ADRES >= 512 && ADRES < 639) LATD = 4;
  1228                           	
  1229                           i2l48:
  1230  0000DA                     	
  1231                           i2l806:
  1232  0000DA                     		movlw	0
  1233  0000DA  0E00               	subwf	 ((c:4035)),c,w	;volatile
  1234  0000DC  5CC3               	movlw	2
  1235  0000DE  0E02               	subwfb	((c:4035+1)),c,w	;volatile
  1236  0000E0  58C4               	btfss	status,0
  1237  0000E2  A0D8               	goto	i2u9_41
  1238  0000E4  EF76  F000         	goto	i2u9_40
  1239  0000E8  EF78  F000         
  1240                           i2u9_41:
  1241  0000EC                     	goto	i2l812
  1242  0000EC  EF87  F000         i2u9_40:
  1243  0000F0                     	
  1244                           i2l808:
  1245  0000F0                     		movlw	127
  1246  0000F0  0E7F               	subwf	 ((c:4035)),c,w	;volatile
  1247  0000F2  5CC3               	movlw	2
  1248  0000F4  0E02               	subwfb	((c:4035+1)),c,w	;volatile
  1249  0000F6  58C4               	btfsc	status,0
  1250  0000F8  B0D8               	goto	i2u10_41
  1251  0000FA  EF81  F000         	goto	i2u10_40
  1252  0000FE  EF83  F000         
  1253                           i2u10_41:
  1254  000102                     	goto	i2l812
  1255  000102  EF87  F000         i2u10_40:
  1256  000106                     	
  1257                           i2l810:
  1258  000106                     	movlw	low(04h)
  1259  000106  0E04               	movwf	((c:3980)),c	;volatile
  1260  000108  6E8C               	goto	i2l59
  1261  00010A  EFF5  F000         	line	72
  1262                           ;newmain.c: 72:         else if (ADRES >= 640 && ADRES < 767) LATD = 5;
  1263                           	
  1264                           i2l50:
  1265  00010E                     	
  1266                           i2l812:
  1267  00010E                     		movlw	128
  1268  00010E  0E80               	subwf	 ((c:4035)),c,w	;volatile
  1269  000110  5CC3               	movlw	2
  1270  000112  0E02               	subwfb	((c:4035+1)),c,w	;volatile
  1271  000114  58C4               	btfss	status,0
  1272  000116  A0D8               	goto	i2u11_41
  1273  000118  EF90  F000         	goto	i2u11_40
  1274  00011C  EF92  F000         
  1275                           i2u11_41:
  1276  000120                     	goto	i2l818
  1277  000120  EFA0  F000         i2u11_40:
  1278  000124                     	
  1279                           i2l814:
  1280  000124                     		incf	((c:4035)),c,w	;volatile
  1281  000124  28C3               	movlw	2
  1282  000126  0E02               	subwfb	((c:4035+1)),c,w	;volatile
  1283  000128  58C4               	btfsc	status,0
  1284  00012A  B0D8               	goto	i2u12_41
  1285  00012C  EF9A  F000         	goto	i2u12_40
  1286  000130  EF9C  F000         
  1287                           i2u12_41:
  1288  000134                     	goto	i2l818
  1289  000134  EFA0  F000         i2u12_40:
  1290  000138                     	
  1291                           i2l816:
  1292  000138                     	movlw	low(05h)
  1293  000138  0E05               	movwf	((c:3980)),c	;volatile
  1294  00013A  6E8C               	goto	i2l59
  1295  00013C  EFF5  F000         	line	73
  1296                           ;newmain.c: 73:         else if (ADRES >= 768 && ADRES < 895) LATD = 6;
  1297                           	
  1298                           i2l52:
  1299  000140                     	
  1300                           i2l818:
  1301  000140                     		movlw	0
  1302  000140  0E00               	subwf	 ((c:4035)),c,w	;volatile
  1303  000142  5CC3               	movlw	3
  1304  000144  0E03               	subwfb	((c:4035+1)),c,w	;volatile
  1305  000146  58C4               	btfss	status,0
  1306  000148  A0D8               	goto	i2u13_41
  1307  00014A  EFA9  F000         	goto	i2u13_40
  1308  00014E  EFAB  F000         
  1309                           i2u13_41:
  1310  000152                     	goto	i2l824
  1311  000152  EFBA  F000         i2u13_40:
  1312  000156                     	
  1313                           i2l820:
  1314  000156                     		movlw	127
  1315  000156  0E7F               	subwf	 ((c:4035)),c,w	;volatile
  1316  000158  5CC3               	movlw	3
  1317  00015A  0E03               	subwfb	((c:4035+1)),c,w	;volatile
  1318  00015C  58C4               	btfsc	status,0
  1319  00015E  B0D8               	goto	i2u14_41
  1320  000160  EFB4  F000         	goto	i2u14_40
  1321  000164  EFB6  F000         
  1322                           i2u14_41:
  1323  000168                     	goto	i2l824
  1324  000168  EFBA  F000         i2u14_40:
  1325  00016C                     	
  1326                           i2l822:
  1327  00016C                     	movlw	low(06h)
  1328  00016C  0E06               	movwf	((c:3980)),c	;volatile
  1329  00016E  6E8C               	goto	i2l59
  1330  000170  EFF5  F000         	line	74
  1331                           ;newmain.c: 74:         else if (ADRES >= 896 && ADRES < 1023) LATD = 7;
  1332                           	
  1333                           i2l54:
  1334  000174                     	
  1335                           i2l824:
  1336  000174                     		movlw	128
  1337  000174  0E80               	subwf	 ((c:4035)),c,w	;volatile
  1338  000176  5CC3               	movlw	3
  1339  000178  0E03               	subwfb	((c:4035+1)),c,w	;volatile
  1340  00017A  58C4               	btfss	status,0
  1341  00017C  A0D8               	goto	i2u15_41
  1342  00017E  EFC3  F000         	goto	i2u15_40
  1343  000182  EFC5  F000         
  1344                           i2u15_41:
  1345  000186                     	goto	i2l59
  1346  000186  EFF5  F000         i2u15_40:
  1347  00018A                     	
  1348                           i2l826:
  1349  00018A                     		incf	((c:4035)),c,w	;volatile
  1350  00018A  28C3               	movlw	3
  1351  00018C  0E03               	subwfb	((c:4035+1)),c,w	;volatile
  1352  00018E  58C4               	btfsc	status,0
  1353  000190  B0D8               	goto	i2u16_41
  1354  000192  EFCD  F000         	goto	i2u16_40
  1355  000196  EFCF  F000         
  1356                           i2u16_41:
  1357  00019A                     	goto	i2l59
  1358  00019A  EFF5  F000         i2u16_40:
  1359  00019E                     	
  1360                           i2l828:
  1361  00019E                     	movlw	low(07h)
  1362  00019E  0E07               	movwf	((c:3980)),c	;volatile
  1363  0001A0  6E8C               	goto	i2l59
  1364  0001A2  EFF5  F000         	
  1365                           i2l56:
  1366  0001A6                     	goto	i2l59
  1367  0001A6  EFF5  F000         	
  1368                           i2l55:
  1369  0001AA                     	goto	i2l59
  1370  0001AA  EFF5  F000         	
  1371                           i2l53:
  1372  0001AE                     	goto	i2l59
  1373  0001AE  EFF5  F000         	
  1374                           i2l51:
  1375  0001B2                     	goto	i2l59
  1376  0001B2  EFF5  F000         	
  1377                           i2l49:
  1378  0001B6                     	goto	i2l59
  1379  0001B6  EFF5  F000         	
  1380                           i2l47:
  1381  0001BA                     	goto	i2l59
  1382  0001BA  EFF5  F000         	
  1383                           i2l45:
  1384  0001BE                     	goto	i2l59
  1385  0001BE  EFF5  F000         	
  1386                           i2l43:
  1387  0001C2                     	line	75
  1388                           ;newmain.c: 75:     }
  1389                           	goto	i2l59
  1390  0001C2  EFF5  F000         	line	76
  1391                           ;newmain.c: 76:     else if (PIR2bits.CCP2IF) {
  1392                           	
  1393                           i2l41:
  1394  0001C6                     	btfss	((c:4001)),c,0	;volatile
  1395  0001C6  A0A1               	goto	i2u17_41
  1396  0001C8  EFE8  F000         	goto	i2u17_40
  1397  0001CC  EFEA  F000         i2u17_41:
  1398  0001D0                     	goto	i2l59
  1399  0001D0  EFF5  F000         i2u17_40:
  1400  0001D4                     	line	77
  1401                           	
  1402                           i2l830:
  1403  0001D4                     ;newmain.c: 77:         PIR2bits.CCP2IF = 0;
  1404                           	bcf	((c:4001)),c,0	;volatile
  1405  0001D4  90A1               	line	78
  1406                           	
  1407                           i2l832:
  1408  0001D6                     ;newmain.c: 78:         TMR3 = 0;
  1409                           	movlw	high(0)
  1410  0001D6  0E00               	movwf	((c:4018+1)),c	;volatile
  1411  0001D8  6EB3               	movlw	low(0)
  1412  0001DA  0E00               	movwf	((c:4018)),c	;volatile
  1413  0001DC  6EB2               	goto	i2l59
  1414  0001DE  EFF5  F000         	line	79
  1415                           ;newmain.c: 79:     }
  1416                           	
  1417                           i2l58:
  1418  0001E2                     	goto	i2l59
  1419  0001E2  EFF5  F000         	
  1420                           i2l57:
  1421  0001E6                     	goto	i2l59
  1422  0001E6  EFF5  F000         	line	81
  1423                           	
  1424                           i2l834:
  1425  0001EA                     	line	82
  1426                           ;newmain.c: 81:     return;
  1427                           	
  1428                           i2l59:
  1429  0001EA                     	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
  1430  0001EA  9201               	retfie f
  1431  0001EC  0011               	opt stack 0
  1432                           GLOBAL	__end_of_ISR
  1433                           	__end_of_ISR:
  1434  0001EE                     	signat	_ISR,89
  1435                           	GLOBAL	__activetblptr
  1436                           __activetblptr	EQU	0
  1437  0000                     	psect	intsave_regs,class=BIGRAM,space=1,noexec
  1438                           	PSECT	rparam,class=COMRAM,space=1,noexec
  1439                           	GLOBAL	__Lrparam
  1440                           	FNCONF	rparam,??,?
  1441                           	GLOBAL	___rparam_used
  1442                           	___rparam_used EQU 1
  1443  0000                     	GLOBAL	___param_bank
  1444                           	___param_bank EQU 0
  1445  0000                     GLOBAL	__Lparam, __Hparam
  1446                           GLOBAL	__Lrparam, __Hrparam
  1447                           __Lparam	EQU	__Lrparam
  1448  0000                     __Hparam	EQU	__Hrparam
  1449  0000                            psect   temp,common,ovrld,class=COMRAM,space=1
  1450                           	global	btemp
  1451                           btemp:
  1452  000001                     	ds	1
  1453  000001                     	global	int$flags
  1454                           	int$flags	set btemp
  1455  0000                     	global	wtemp8
  1456                           	wtemp8 set btemp+1
  1457  0000                     	global	ttemp5
  1458                           	ttemp5 set btemp+1
  1459  0000                     	global	ttemp6
  1460                           	ttemp6 set btemp+4
  1461  0000                     	global	ttemp7
  1462                           	ttemp7 set btemp+8
  1463  0000                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126      0       0
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                           _adc_init
                          _ccp2_init
                          _tmr3_init
 ---------------------------------------------------------------------------------
 (1) _tmr3_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ccp2_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_init
   _ccp2_init
   _tmr3_init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7E      0       0       1        0.0%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
ABS                  0      0       0      15        0.0%
BITBANK5           100      0       0      16        0.0%
BIGRAM             5FF      0       0      17        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Dec 09 17:49:39 2019

                     l62 021E                       l65 0264                       l73 0236  
                     l74 0236                       l75 023A                       l68 0250  
                     l76 023A              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
            __CFG_LVP$ON 000000                      l760 0210                      l752 01EE  
                    l840 022A                      l762 0218                      l754 01F6  
                    l770 025A                      l842 022E                      l764 021A  
                    l756 0200                      l772 023E                      l844 0232  
                    l836 0220                      l766 021C                      l758 020A  
                    l774 0240                      l838 0226                      l768 0252  
                    l776 0244                      l778 0246             __CFG_CPB$OFF 000000  
           __CFG_CPD$OFF 000000                      _ISR 0008                     ?_ISR 0000  
           __CFG_WDT$OFF 000000                     _LATD 000F8C                     i2l41 01C6  
                   i2l50 010E                     i2l42 0042                     i2l43 01C2  
                   i2l51 01B2                     i2l52 0140                     i2l44 0074  
                   i2l45 01BE                     i2l53 01AE                     i2l54 0174  
                   i2l46 00A8                     i2l47 01BA                     i2l55 01AA  
                   i2l56 01A6                     i2l48 00DA                     i2l57 01E6  
                   i2l49 01B6                     i2l58 01E2                     i2l59 01EA  
                   _TMR3 000FB2                     _main 0220                     btemp 0001  
                   start 000E            __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000  
           ___param_bank 000000                    ??_ISR 0000                    ?_main 0000  
                  _ADRES 000FC3                    _CCPR2 000FBB                    i2l800 00A8  
                  i2l810 0106                    i2l802 00BE                    i2l820 0156  
                  i2l812 010E                    i2l804 00D2                    i2l830 01D4  
                  i2l822 016C                    i2l814 0124                    i2l806 00DA  
                  i2l832 01D6                    i2l824 0174                    i2l816 0138  
                  i2l808 00F0                    i2l834 01EA                    i2l826 018A  
                  i2l818 0140                    i2l828 019E                    i2l780 0014  
                  i2l790 0058                    i2l782 0022                    i2l792 006C  
                  i2l784 0024                    i2l794 0074                    i2l786 003A  
                  i2l796 008A                    i2l788 0042                    i2l798 00A0  
                  _TRISD 000F95            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
                  ttemp5 0002                    ttemp6 0005                    ttemp7 0009  
                  status 000FD8                    wtemp8 0002          __initialization 0266  
           __end_of_main 023E                   ??_main 0000            __activetblptr 000000  
       __end_of_adc_init 0220                   i2u1_40 0022                   i2u1_41 001E  
                 i2u2_40 003A                   i2u2_41 0036                   i2u3_40 0058  
                 i2u3_41 0054                   i2u4_40 006C                   i2u4_41 0068  
                 i2u5_40 008A                   i2u5_41 0086                   i2u6_40 00A0  
                 i2u6_41 009C                   i2u7_40 00BE                   i2u7_41 00BA  
                 i2u8_40 00D2                   i2u8_41 00CE                   i2u9_40 00F0  
                 i2u9_41 00EC           __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000  
     __size_of_ccp2_init 0014               __accesstop 0080  __end_of__initialization 0266  
        __CFG_PBADEN$OFF 000000            ___rparam_used 000001           __pcstackCOMRAM 0000  
     __size_of_tmr3_init 0014        __end_of_ccp2_init 0266                ?_adc_init 0000  
                i2u10_40 0106                  i2u10_41 0102                  i2u11_40 0124  
                i2u11_41 0120                  i2u12_40 0138                  i2u12_41 0134  
                i2u13_40 0156                  i2u13_41 0152                  i2u14_40 016C  
                i2u14_41 0168                  i2u15_40 018A                  i2u15_41 0186  
                i2u16_40 019E                  i2u16_41 019A                  i2u17_40 01D4  
                i2u17_41 01D0                  __Hparam 0000                  __Lparam 0000  
                __pcinit 0266                  __ramtop 0600               ??_adc_init 0000  
                __ptext0 0220                  __ptext1 023E                  __ptext2 0252  
                __ptext3 01EE             __size_of_ISR 01E6                _T3CONbits 000FB1  
         __pintcode_body 0012     end_of_initialization 0266        __end_of_tmr3_init 0252  
                int_func 0012                _TRISBbits 000F93              _CCP2CONbits 000FBA  
    start_initialization 0266              __end_of_ISR 01EE         __CFG_OSC$INTIO67 000000  
       __CFG_LPT1OSC$OFF 000000        __size_of_adc_init 0032                _ccp2_init 0252  
      __CFG_CCP2MX$PORTC 000000                __pintcode 0008               ?_ccp2_init 0000  
               _PIE1bits 000F9D                 _PIE2bits 000FA0                _tmr3_init 023E  
               _PIR1bits 000F9E                 _PIR2bits 000FA1                 _RCONbits 000FD0  
       __CFG_WDTPS$32768 000000               _ADCON0bits 000FC2               _ADCON1bits 000FC1  
             _ADCON2bits 000FC0               ?_tmr3_init 0000                 __Hrparam 0000  
               __Lrparam 0000       __CFG_BOREN$SBORDIS 000000                 _adc_init 01EE  
            ??_ccp2_init 0000            __size_of_main 001E                 int$flags 0001  
             _INTCONbits 000FF2                 intlevel2 0000              ??_tmr3_init 0000  
             _OSCCONbits 000FD3  
